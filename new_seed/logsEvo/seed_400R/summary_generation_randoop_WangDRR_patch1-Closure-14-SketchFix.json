{
    "pausibility_cheched_done": false,
    "patch_id": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_others/Dcorrect/SketchFix/Closure/patch1-Closure-14-SketchFix.patch",
    "project_checked": "ok",
    "patchApplied": "ok",
    "testGenerated": "no",
    "testGeneratedNames": "no",
    "testCompiled": "no",
    "Found_Flaky_Test": "no",
    "sanity_check_pass": "yes",
    "patchUndo": "ok",
    "removing_project_checked": "ok",
    "arrive_end": "ok",
    "FolderTestGenerated": "no",
    "message": "no",
    "patchAppliedDiffVerified": "ok",
    "errorLogTestGeneration": "b'Randoop for Java version 4.2.6.\\nCannot instantiate non-visible com.google.javascript.jscomp.ControlFlowAnalysis specified via --testclass or --classlist.\\n\\nWill try to generate tests for 0 out of 1 classes.\\nYou provided no methods to test, so no tests for them can be generated.\\n\\nAdditional diagnostis appear below.\\nModel with hashcode 1815546035:\\n  classTypes = [java.lang.Object]\\n  inputTypes = []\\n  coveredClassesGoal = []\\n  classLiteralMap = {}\\n  annotatedTestValues = []\\n  contracts = ContractSet[size=12]\\n    arity 1: [randoop.contract.EqualsReflexive@6f1fba17, randoop.contract.EqualsToNullRetFalse@185d8b6, randoop.contract.EqualsReturnsNormally@67784306, randoop.contract.CompareToReflexive@335eadca, randoop.contract.SizeToArrayLength@210366b4]\\n    arity 2: [randoop.contract.EqualsSymmetric@eec5a4a, randoop.contract.EqualsHashcode@2b2948e2, randoop.contract.CompareToAntiSymmetric@6ddf90b0, randoop.contract.CompareToEquals@57536d79]\\n    arity 3: [randoop.contract.EqualsTransitive@3b0143d3, randoop.contract.CompareToSubs@5a8e6209, randoop.contract.CompareToTransitive@4b4523f8]\\n  omitMethods = [\\n    \\\\bensuresCapacity\\\\b\\n    ^\\\\Qcom.google.common.collect.Iterators.cycle(\\n    ^\\\\Qorg.apache.commons.math4.genetics.GeneticAlgorithm.getRandomGenerator()\\\\E$\\n    ^\\\\Qorg.apache.commons.math4.util.FastMath.random()\\\\E$\\n    ^\\\\Qjava.util.Date.<init>()\\\\E$\\n    ^\\\\Qorg.joda.time.DateTime.now()\\\\E$\\n    ^\\\\Qorg.joda.time.LocalDate.<init>\\\\E$\\n    ^\\\\Qnew org.joda.time.Partial.<init>()\\\\E$\\n    ^\\\\Qjava.io.File.list()\\\\E$\\n    ^\\\\Qjava.io.File.list(java.io.FilenameFilter)\\\\E$\\n    ^\\\\Qjava.io.File.listFiles()\\\\E$\\n    ^\\\\Qjava.io.File.listFiles(java.io.FileFilter)\\\\E$\\n    ^\\\\Qjava.io.File.listFiles(java.io.FilenameFilter)\\\\E$\\n    ^\\\\Qjava.io.File.listRoots()\\\\E$\\n    ^\\\\Qjava.lang.Class.getSigners()\\\\E$\\n    ^\\\\Qjava.lang.Object.hashCode()\\\\E$\\n    ^\\\\Qjava.lang.String.hashCode()\\\\E$\\n    ^\\\\Qjava.lang.System.clearProperty(java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.System.console()\\\\E$\\n    ^\\\\Qjava.lang.System.currentTimeMillis()\\\\E$\\n    ^\\\\Qjava.lang.System.getProperties()\\\\E$\\n    ^\\\\Qjava.lang.System.getProperty(java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.System.getProperty(java.lang.String, java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.System.getSecurityManager()\\\\E$\\n    ^\\\\Qjava.lang.System.getenv()\\\\E$\\n    ^\\\\Qjava.lang.System.getenv(java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.System.identityHashCode(java.lang.Object)\\\\E$\\n    ^\\\\Qjava.lang.System.inheritedChannel()\\\\E$\\n    ^\\\\Qjava.lang.System.mapLibraryName(java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.System.nanoTime()\\\\E$\\n    ^\\\\Qjava.lang.System.setProperty(java.lang.String, java.lang.String)\\\\E$\\n    ^\\\\Qjava.lang.reflect.Method.hashCode()\\\\E$\\n    ^\\\\Qjava.text.BreakIterator.getAvailableLocales()\\\\E$\\n    ^\\\\Qjava.util.AbstractList.hashCode()\\\\E$\\n    ^\\\\Qjava.util.AbstractSet.hashCode()\\\\E$\\n    ^\\\\Qjava.util.Arrays.deepHashCode(java.lang.Object[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(boolean[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(byte[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(char[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(double[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(float[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(int[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(java.lang.Object[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(long[])\\\\E$\\n    ^\\\\Qjava.util.Arrays.hashCode(short[])\\\\E$\\n    ^\\\\Qjava.util.Collection.hashCode()\\\\E$\\n    ^\\\\Qjava.util.Collections.shuffle(java.util.List)\\\\E$\\n    ^\\\\Qjava.util.Comparator.compare(java.lang.Object, java.lang.Object)\\\\E$\\n    ^\\\\Qjava.util.List.hashCode()\\\\E$\\n    ^\\\\Qjava.util.Random.<init>()\\\\E$\\n    ^\\\\Qjava.util.Set.hashCode()\\\\E$\\n  ]\\nOperations: (1)\\n  java.lang.Object.<init> : () -> java.lang.Object\\n\\nThere are no methods for Randoop to test.  See diagnostics above.  Exiting.\\n'",
    "compiledProjectModified": "ok",
    "patched_project_pass_all_test": "no"
}