{
    "bugid": "Chart-13",
    "results": [
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:26:12.150485",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 0,
                    "testrun": 46,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 0,
                    "testrun": 61,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 1,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:406)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 1,
                    "testrun": 35,
                    "failings": [
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:463)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 2,
                    "testrun": 55,
                    "failings": [
                        "test38(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test38(BorderArrangement_ESTest.java:561)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:277)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 51,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test026(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test020(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test021(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test083(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test026(BorderArrangement_ESTest.java:521)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test020(BorderArrangement_ESTest.java:415)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test021(BorderArrangement_ESTest.java:435)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test083(BorderArrangement_ESTest.java:1570)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/DynaMoth/Chart/patch1-Chart-13-DynaMoth-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 56.31
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:27:08.463148",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 1,
                    "testrun": 46,
                    "failings": [
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2940.491310331889)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 1,
                    "testrun": 61,
                    "failings": [
                        "test05(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.StackOverflowError"
                    ],
                    "failing_lines": [
                        []
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 0,
                    "testrun": 62,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 3,
                    "testrun": 35,
                    "failings": [
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test25(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.StackOverflowError",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.StackOverflowError"
                    ],
                    "failing_lines": [
                        [],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:415)"
                        ],
                        []
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 1,
                    "testrun": 55,
                    "failings": [
                        "test37(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test37(BorderArrangement_ESTest.java:541)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 1,
                    "testrun": 55,
                    "failings": [
                        "test39(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test39(BorderArrangement_ESTest.java:585)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 48,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test027(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test028(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test027(BorderArrangement_ESTest.java:544)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test028(BorderArrangement_ESTest.java:564)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/GenProg/Chart/patch1-Chart-13-GenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 57.11
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:28:05.579969",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 1,
                    "testrun": 46,
                    "failings": [
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2940.491310331889)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 0,
                    "testrun": 61,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 0,
                    "testrun": 62,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 0,
                    "testrun": 35,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 47,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Arja/Chart/patch1-Chart-13-Arja-plusible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 57.37
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:29:02.956157",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 1,
                    "testrun": 46,
                    "failings": [
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2940.491310331889)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 1,
                    "testrun": 61,
                    "failings": [
                        "test05(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test05(BorderArrangement_ESTest.java:172)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 0,
                    "testrun": 62,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 0,
                    "testrun": 35,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 48,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test028(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test028(BorderArrangement_ESTest.java:564)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jGenProg/Chart/patch1-Chart-13-jGenProg-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 56.78
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:29:59.734850",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 1,
                    "testrun": 46,
                    "failings": [
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2940.491310331889)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 4,
                    "testrun": 61,
                    "failings": [
                        "test52(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test01(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test05(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test02(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: StackOverflowError",
                        "java.lang.AssertionError: Expecting exception: StackOverflowError",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: StackOverflowError"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test52(BorderArrangement_ESTest.java:1042)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test01(BorderArrangement_ESTest.java:104)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test05(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test02(BorderArrangement_ESTest.java:121)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 0,
                    "testrun": 62,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 1,
                    "testrun": 35,
                    "failings": [
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:415)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 51,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test028(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test020(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test021(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test083(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test028(BorderArrangement_ESTest.java:564)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test020(BorderArrangement_ESTest.java:415)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test021(BorderArrangement_ESTest.java:435)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test083(BorderArrangement_ESTest.java:1570)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Cardumen/Chart/patch1-Chart-13-Cardumen-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 57.13
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:30:56.866606",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 1,
                    "testrun": 46,
                    "failings": [
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2940.491310331889)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 0,
                    "testrun": 61,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 0,
                    "testrun": 62,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 0,
                    "testrun": 35,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 47,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/FixMiner/Chart/patch1-Chart-13-FixMiner-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 57.11
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:31:53.976145",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 0,
                    "testrun": 46,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 0,
                    "testrun": 61,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 1,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:406)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 1,
                    "testrun": 35,
                    "failings": [
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:463)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 2,
                    "testrun": 55,
                    "failings": [
                        "test38(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test38(BorderArrangement_ESTest.java:561)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:277)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 51,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test026(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test020(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test021(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test083(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test026(BorderArrangement_ESTest.java:521)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test020(BorderArrangement_ESTest.java:415)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test021(BorderArrangement_ESTest.java:435)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test083(BorderArrangement_ESTest.java:1570)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/jKali/Chart/patch1-Chart-13-jKali-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 57.12
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:32:51.095485",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 0,
                    "testrun": 46,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 0,
                    "testrun": 61,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 0,
                    "testrun": 50,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 16,
                    "testrun": 55,
                    "failings": [
                        "test51(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test49(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test33(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test26(org.jfree.data.Range_ESTest)",
                        "test29(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (780.1380779886694) <= upper (-148.442155000985).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test51(Range_ESTest.java:497)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:420)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test49(Range_ESTest.java:481)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:337)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test33(Range_ESTest.java:329)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:375)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:356)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:345)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:220)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:208)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:199)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test26(Range_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test29(Range_ESTest.java:286)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 1,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:406)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 1,
                    "testrun": 35,
                    "failings": [
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:463)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 18,
                    "testrun": 57,
                    "failings": [
                        "test55(org.jfree.data.Range_ESTest)",
                        "test10(org.jfree.data.Range_ESTest)",
                        "test54(org.jfree.data.Range_ESTest)",
                        "test16(org.jfree.data.Range_ESTest)",
                        "test52(org.jfree.data.Range_ESTest)",
                        "test50(org.jfree.data.Range_ESTest)",
                        "test44(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test09(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test07(org.jfree.data.Range_ESTest)",
                        "test34(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test39(org.jfree.data.Range_ESTest)",
                        "test30(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2237.1531737062596).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.data.Range_ESTest.test55(Range_ESTest.java:529)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test10(Range_ESTest.java:111)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test54(Range_ESTest.java:522)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test16(Range_ESTest.java:162)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test52(Range_ESTest.java:507)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test50(Range_ESTest.java:484)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test44(Range_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:67)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test09(Range_ESTest.java:101)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:93)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test07(Range_ESTest.java:85)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test34(Range_ESTest.java:338)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:365)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:346)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test39(Range_ESTest.java:384)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test30(Range_ESTest.java:295)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:209)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 2,
                    "testrun": 55,
                    "failings": [
                        "test38(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test38(BorderArrangement_ESTest.java:561)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:277)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 51,
                    "testrun": 167,
                    "failings": [
                        "test055(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test056(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test054(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test049(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test040(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test042(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test043(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test037(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test035(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test030(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test034(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test026(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test029(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test022(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test020(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test021(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test013(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test014(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test018(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test011(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test010(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test091(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test092(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test004(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test003(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test006(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test083(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test073(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test074(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test072(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test068(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test101(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test060(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test100(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test11(org.jfree.data.Range_ESTest)",
                        "test53(org.jfree.data.Range_ESTest)",
                        "test15(org.jfree.data.Range_ESTest)",
                        "test45(org.jfree.data.Range_ESTest)",
                        "test42(org.jfree.data.Range_ESTest)",
                        "test05(org.jfree.data.Range_ESTest)",
                        "test08(org.jfree.data.Range_ESTest)",
                        "test40(org.jfree.data.Range_ESTest)",
                        "test31(org.jfree.data.Range_ESTest)",
                        "test38(org.jfree.data.Range_ESTest)",
                        "test37(org.jfree.data.Range_ESTest)",
                        "test36(org.jfree.data.Range_ESTest)",
                        "test35(org.jfree.data.Range_ESTest)",
                        "test23(org.jfree.data.Range_ESTest)",
                        "test22(org.jfree.data.Range_ESTest)",
                        "test21(org.jfree.data.Range_ESTest)",
                        "test27(org.jfree.data.Range_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2169.47646).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-951.6).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-782.854049).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958475.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1228.710913).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1075.592521353).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6039.22253848806).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (707.68752) <= upper (605.06579).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-750.624543165).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-Infinity).",
                        "java.lang.AssertionError: Expecting exception: RuntimeException",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (-983.49351115).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (805.6266232098787) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2958465.0) <= upper (805.6266232098787).",
                        "java.lang.AssertionError: Exception was not thrown in org.jfree.chart.block.BorderArrangement but in org.jfree.data.Range.<init>(Range.java:87): org.evosuite.runtime.mock.java.lang.MockThrowable: Range(double, double): require lower (0.0) <= upper (-6031.9447196131).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (2629.90519310735) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-659.6956494).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1953.5) <= upper (0.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (1.0) <= upper (-357.5809986).",
                        "org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Range(double, double): require lower (3894.203937) <= upper (1.0)."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test055(BorderArrangement_ESTest.java:1038)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test056(BorderArrangement_ESTest.java:1083)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test054(BorderArrangement_ESTest.java:1017)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test049(BorderArrangement_ESTest.java:936)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test040(BorderArrangement_ESTest.java:746)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test042(BorderArrangement_ESTest.java:782)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test043(BorderArrangement_ESTest.java:805)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test037(BorderArrangement_ESTest.java:690)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test035(BorderArrangement_ESTest.java:659)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test030(BorderArrangement_ESTest.java:592)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test034(BorderArrangement_ESTest.java:636)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test026(BorderArrangement_ESTest.java:521)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test029(BorderArrangement_ESTest.java:580)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test022(BorderArrangement_ESTest.java:453)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test020(BorderArrangement_ESTest.java:415)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test021(BorderArrangement_ESTest.java:435)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test013(BorderArrangement_ESTest.java:299)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test014(BorderArrangement_ESTest.java:312)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test018(BorderArrangement_ESTest.java:371)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test011(BorderArrangement_ESTest.java:270)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test010(BorderArrangement_ESTest.java:255)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test091(BorderArrangement_ESTest.java:1712)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test092(BorderArrangement_ESTest.java:1738)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test004(BorderArrangement_ESTest.java:172)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test003(BorderArrangement_ESTest.java:154)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test006(BorderArrangement_ESTest.java:201)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test083(BorderArrangement_ESTest.java:1570)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test073(BorderArrangement_ESTest.java:1397)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test074(BorderArrangement_ESTest.java:1409)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test072(BorderArrangement_ESTest.java:1370)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test068(BorderArrangement_ESTest.java:1300)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test101(BorderArrangement_ESTest.java:1894)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test060(BorderArrangement_ESTest.java:1155)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test100(BorderArrangement_ESTest.java:1884)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test11(Range_ESTest.java:115)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test53(Range_ESTest.java:514)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test15(Range_ESTest.java:148)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test45(Range_ESTest.java:445)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test42(Range_ESTest.java:411)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test05(Range_ESTest.java:65)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test08(Range_ESTest.java:91)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test40(Range_ESTest.java:393)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test31(Range_ESTest.java:301)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test38(Range_ESTest.java:374)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test37(Range_ESTest.java:360)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test36(Range_ESTest.java:352)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test35(Range_ESTest.java:344)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test23(Range_ESTest.java:216)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test22(Range_ESTest.java:206)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test21(Range_ESTest.java:197)"
                        ],
                        [
                            "org.jfree.data.Range_ESTest.test27(Range_ESTest.java:250)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 0,
                    "testrun": 38,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 56.77
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:33:47.864240",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 4,
                    "testrun": 46,
                    "failings": [
                        "test14(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test14(BorderArrangement_ESTest.java:227)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:209)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 3,
                    "testrun": 61,
                    "failings": [
                        "test30(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test54(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test30(BorderArrangement_ESTest.java:660)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:640)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test54(BorderArrangement_ESTest.java:1076)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 5,
                    "testrun": 50,
                    "failings": [
                        "test32(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test25(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test32(BorderArrangement_ESTest.java:600)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:577)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test25(BorderArrangement_ESTest.java:462)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:321)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 3,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test21(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:405)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test21(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:335)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 2,
                    "testrun": 35,
                    "failings": [
                        "test11(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test11(BorderArrangement_ESTest.java:184)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:415)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 0,
                    "testrun": 57,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test16(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test44(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:276)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test16(BorderArrangement_ESTest.java:221)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test44(BorderArrangement_ESTest.java:649)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:475)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:285)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:212)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 0,
                    "testrun": 167,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/AVATAR/Chart/patch1-Chart-13-AVATAR-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 3,
                    "testrun": 38,
                    "failings": [
                        "test18(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test18(BorderArrangement_ESTest.java:274)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:222)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:190)"
                        ]
                    ]
                }
            ],
            "duration": 57.01
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:34:44.878074",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 4,
                    "testrun": 46,
                    "failings": [
                        "test14(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test14(BorderArrangement_ESTest.java:227)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:209)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 3,
                    "testrun": 61,
                    "failings": [
                        "test30(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test54(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test30(BorderArrangement_ESTest.java:660)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:640)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test54(BorderArrangement_ESTest.java:1076)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 5,
                    "testrun": 50,
                    "failings": [
                        "test32(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test25(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test32(BorderArrangement_ESTest.java:600)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:577)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test25(BorderArrangement_ESTest.java:462)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:321)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 3,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test21(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:405)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test21(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:335)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 2,
                    "testrun": 35,
                    "failings": [
                        "test11(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test11(BorderArrangement_ESTest.java:184)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:415)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 0,
                    "testrun": 57,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test16(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test44(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:276)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test16(BorderArrangement_ESTest.java:221)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test44(BorderArrangement_ESTest.java:649)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:475)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:285)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:212)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 0,
                    "testrun": 167,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/TBar/Chart/patch1-Chart-13-TBar-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 3,
                    "testrun": 38,
                    "failings": [
                        "test18(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test18(BorderArrangement_ESTest.java:274)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:222)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:190)"
                        ]
                    ]
                }
            ],
            "duration": 57.09
        },
        {
            "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
            "project": "Chart",
            "bugid": "13",
            "dataset": "Patches_ICSE",
            "date": "2022-12-16T02:35:41.967516",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "no",
            "test_execution": [
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-DynaMoth-plausible",
                    "failing": 4,
                    "testrun": 46,
                    "failings": [
                        "test14(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test27(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test14(BorderArrangement_ESTest.java:227)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:209)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test27(BorderArrangement_ESTest.java:411)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jKali-plausible",
                    "failing": 3,
                    "testrun": 61,
                    "failings": [
                        "test30(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test54(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test30(BorderArrangement_ESTest.java:660)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:640)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test54(BorderArrangement_ESTest.java:1076)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Nopol-plausible",
                    "failing": 5,
                    "testrun": 50,
                    "failings": [
                        "test32(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test31(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test25(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test32(BorderArrangement_ESTest.java:600)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test31(BorderArrangement_ESTest.java:577)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test25(BorderArrangement_ESTest.java:462)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:354)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:321)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-TBar-plausible",
                    "failing": 0,
                    "testrun": 55,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-FixMiner-plausible",
                    "failing": 3,
                    "testrun": 62,
                    "failings": [
                        "test23(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test21(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.NullPointerException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test23(BorderArrangement_ESTest.java:405)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test21(BorderArrangement_ESTest.java:369)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:335)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-jGenProg-plausible",
                    "failing": 2,
                    "testrun": 35,
                    "failings": [
                        "test11(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test11(BorderArrangement_ESTest.java:184)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:415)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-AVATAR-plausible",
                    "failing": 0,
                    "testrun": 57,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Arja-plusible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test28(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test19(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test16(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test44(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented.",
                        "java.lang.NullPointerException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test28(BorderArrangement_ESTest.java:434)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test19(BorderArrangement_ESTest.java:276)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test16(BorderArrangement_ESTest.java:221)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test44(BorderArrangement_ESTest.java:649)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-Cardumen-plausible",
                    "failing": 4,
                    "testrun": 55,
                    "failings": [
                        "test29(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test17(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "org.evosuite.runtime.mock.java.lang.MockRuntimeException: Not implemented."
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test29(BorderArrangement_ESTest.java:475)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test17(BorderArrangement_ESTest.java:285)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:246)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:212)"
                        ]
                    ]
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-RSRepair-plausible",
                    "failing": 0,
                    "testrun": 167,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest",
                        "org.jfree.data.Range_ESTest"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/home/mmartinez/xTestCluster/Patches/Patches_Wang902/Patches_ICSE/Doverfitting/RSRepair/Chart/patch1-Chart-13-RSRepair-plausible.patch",
                    "test": "test_from_WangICSE_patch1-Chart-13-GenProg-plausible",
                    "failing": 3,
                    "testrun": 38,
                    "failings": [
                        "test18(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test15(org.jfree.chart.block.BorderArrangement_ESTest)",
                        "test13(org.jfree.chart.block.BorderArrangement_ESTest)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "org.jfree.chart.block.BorderArrangement_ESTest"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException",
                        "java.lang.AssertionError: Expecting exception: IllegalArgumentException"
                    ],
                    "failing_lines": [
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test18(BorderArrangement_ESTest.java:274)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test15(BorderArrangement_ESTest.java:222)"
                        ],
                        [
                            "org.jfree.chart.block.BorderArrangement_ESTest.test13(BorderArrangement_ESTest.java:190)"
                        ]
                    ]
                }
            ],
            "duration": 57.26
        }
    ],
    "date": "2022-12-16T02:26:12.150154",
    "duration": -0.0
}