/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 02:36:05 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.KeyedValue;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultValueDataset0.addChangeListener(xYDatasetTableModel0);
      defaultValueDataset0.addChangeListener(xYDatasetTableModel0);
      defaultValueDataset0.setValue((Number) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-650), (-650));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DatasetGroup datasetGroup0 = defaultStatisticalCategoryDataset0.getGroup();
      waferMapDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValuesDataset0, defaultKeyedValuesDataset0);
      defaultValueDataset0.notifyListeners(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset((KeyedValue) null);
      defaultKeyedValueDataset0.fireDatasetChanged();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultValueDataset0.addChangeListener(xYDatasetTableModel0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultIntervalCategoryDataset0, 591);
      Object object0 = subSeriesDataset0.clone();
      assertNotSame(object0, subSeriesDataset0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, 0);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      defaultValueDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        defaultValueDataset0.validateObject();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(timeSeriesCollection0, 400);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      defaultValueDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        defaultValueDataset0.validateObject();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'series' argument is out of bounds (400).
         //
         verifyException("org.jfree.data.time.TimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2463), (-2463));
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(yIntervalSeriesCollection0, (-1069));
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      defaultValueDataset0.addChangeListener(intervalXYDelegate0);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection((TimePeriodValues) null);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultValueDataset0, timePeriodValuesCollection0);
      // Undeclared exception!
      try { 
        defaultValueDataset0.notifyListeners(datasetChangeEvent0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.YIntervalSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultValueDataset0.removeChangeListener(xYDatasetTableModel0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(histogramDataset0, 0.0);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYBarDataset0);
      defaultKeyedValuesDataset0.removeChangeListener(intervalXYDelegate0);
      assertEquals(1.0, intervalXYDelegate0.getFixedIntervalWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JTable jTable0 = new JTable();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.hasListener(jTable0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      defaultValueDataset0.validateObject();
  }
}
