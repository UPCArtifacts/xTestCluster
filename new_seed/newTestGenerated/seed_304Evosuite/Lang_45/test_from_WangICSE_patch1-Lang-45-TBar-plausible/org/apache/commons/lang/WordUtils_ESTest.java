/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 04:32:10 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("ye 4eb", (-1961), (-208), "rJ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("&9", 1, 0, "org.apache.commons.lang.WordUtils");
      assertEquals("&org.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("[b2In;i%", (-208), 2166, "");
      assertEquals("[b2In;i%", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Q", (-1722), 1, "");
      assertEquals("Q", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-1), "", false);
      assertEquals("\t\r\n\b", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", 946);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.uncapitalize(" ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.initials("(<OTERq2kp0b<+4^oB$");
      assertEquals("(", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      String string0 = WordUtils.initials("#Z=E4q", charArray0);
      assertEquals("#4", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.initials("/Im}uLj:5pbSNtZN", (char[]) null);
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("e_Jbxae;qpLq'", (char[]) null);
      assertEquals("E_jbxae;qplq'", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalize(" ", (char[]) null);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", (-3633), "mH)?#+`@cI", false);
      assertEquals("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1382), (String) null, true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Windows NT", (-1), (-1), "Windows NT");
      assertEquals("WindowsWindows NT", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.abbreviate("qZ73Ii,F p", 4192, 4192, "qZ73Ii,F p");
      assertEquals("qZ73Ii,F p", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate(")X=But}] 02]=n", 0, (-3333), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 33, 33, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 1, (-3333), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("!", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[5];
      WordUtils.initials("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", charArray0);
      char[] charArray1 = new char[8];
      WordUtils.uncapitalize("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", charArray1);
      // Undeclared exception!
      WordUtils.capitalize("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", charArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.initials("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.swapCase("Minimum abbreviation width is 4");
      assertEquals("mINIMUM ABBREVIATION WIDTH IS 4", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[4] = '4';
      String string0 = WordUtils.uncapitalize("M~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", charArray0);
      assertEquals("m~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsgu~8}:.W~O.|rMlvzsgm~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgb~8}:.W~O.|rMlvzsgr~8}:.W~O.|rMlvzsge~8}:.W~O.|rMlvzsgv~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsga~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgo~8}:.W~O.|rMlvzsgn~8}:.W~O.|rMlvzsgw~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgd~8}:.W~O.|rMlvzsgt~8}:.W~O.|rMlvzsgh~8}:.W~O.|rMlvzsgi~8}:.W~O.|rMlvzsgs~8}:.W~O.|rMlvzsg4", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("5>", charArray0);
      assertEquals("5>", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("!", charArray0);
      assertEquals("!", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.capitalizeFully("O", charArray0);
      assertEquals("O", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.wrap(" vs ", (-412), (String) null, false);
      assertNotNull(string0);
      assertEquals("vs\n", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.wrap("", 4192, "", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap(")X=But}] 02]=n", (-3333), "", true);
      assertEquals(")X=But}]02]=n", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 2645);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap(" U>j=", (-227));
      assertEquals("U>j=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.initials(" ");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("*N");
      assertEquals("*n", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalize(" vs ");
      assertEquals(" Vs ", string0);
  }
}
