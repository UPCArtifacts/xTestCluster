/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 15:19:25 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(699, 699, integer0);
      DatasetGroup datasetGroup0 = new DatasetGroup("@p)dl4L md;-$~*a");
      waferMapDataset0.setGroup(datasetGroup0);
      assertEquals(400.0, waferMapDataset0.getChipSpace(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2, 2);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(waferMapDataset0, waferMapDataset0);
      waferMapDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(2, waferMapDataset0.getMaxChipX());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(699, 699, integer0);
      waferMapDataset0.fireDatasetChanged();
      assertEquals(699, waferMapDataset0.getMaxChipY());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2, 2, 0, (-1661), (-1661));
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
      Integer integer0 = new Integer(2);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(fixedMillisecond0, integer0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultKeyedValueDataset0.addChangeListener(xYDatasetTableModel0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Year year0 = new Year();
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(year0, (OHLCDataItem[]) null);
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultOHLCDataset0, (-467.219365064));
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYBarDataset0, true);
      defaultKeyedValuesDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.validateObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(xYSeriesCollection0, (-934));
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      defaultKeyedValuesDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.validateObject();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.XYSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(93, 1019);
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      boolean boolean0 = defaultKeyedValuesDataset0.hasListener(intervalXYDelegate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.removeChangeListener((DatasetChangeListener) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(699, 699, integer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYSeriesCollection0, true);
      waferMapDataset0.removeChangeListener(intervalXYDelegate0);
      assertEquals(1.0, intervalXYDelegate0.getIntervalWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      combinedDataset0.seriesChanged((SeriesChangeEvent) null);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DatasetGroup datasetGroup0 = defaultValueDataset0.getGroup();
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Object object0 = defaultKeyedValuesDataset0.clone();
      assertNotSame(object0, defaultKeyedValuesDataset0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.validateObject();
  }
}
