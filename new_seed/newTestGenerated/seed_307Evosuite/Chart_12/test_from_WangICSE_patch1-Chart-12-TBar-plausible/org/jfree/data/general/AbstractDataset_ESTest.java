/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 21:43:39 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeTableXYDataset0);
      timeTableXYDataset0.removeChangeListener(intervalXYDelegate0);
      assertEquals(0.5, intervalXYDelegate0.getIntervalPositionFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(combinedDataset0, Double.NEGATIVE_INFINITY);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(xYBarDataset0, defaultKeyedValuesDataset0);
      combinedDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.fireDatasetChanged();
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(jDBCXYDataset0);
      histogramDataset0.addChangeListener(xYDatasetTableModel0);
      assertEquals(0, histogramDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DatasetGroup datasetGroup0 = combinedDataset0.getGroup();
      combinedDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      boolean boolean0 = combinedDataset0.hasListener((EventListener) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
      defaultTableXYDataset0.removeChangeListener(intervalXYDelegate0);
      assertTrue(intervalXYDelegate0.isAutoWidth());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
      defaultTableXYDataset0.addChangeListener(intervalXYDelegate0);
      defaultTableXYDataset0.validateObject();
      assertFalse(defaultTableXYDataset0.isAutoWidth());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      try { 
        combinedDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Object object0 = defaultTableXYDataset0.clone();
      assertNotSame(object0, defaultTableXYDataset0);
  }
}
