/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 25 05:10:50 GMT 2022
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Abs;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Atan;
import org.apache.commons.math.analysis.function.Constant;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Expm1;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Log1p;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Minus;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Ulp;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-194.70629), 1.0, 1.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence(1426.4141772613002, (-1488.9989626649444), (-1488.9989626649444));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Expm1 expm1_0 = new Expm1();
      assertNotNull(expm1_0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(expm1_0, (-2168.248306509232), 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Signum signum0 = new Signum();
      assertNotNull(signum0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(signum0, (-640.25444306334), (-640.25444306334));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Atan atan0 = new Atan();
      assertNotNull(atan0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(atan0, 26, (-1.0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 343.0);
      assertEquals(171.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Logit logit0 = new Logit();
      assertNotNull(logit0);
      
      UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
      assertNotNull(univariateRealFunction0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, 696.7824669826, 464.16, 8361.29318448102, 59);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=59, maximum iterations=59, initial=696.782, lower bound=464.16, upper bound=8,361.293, final a value=637.782, final b value=755.782, f(a)=-0, f(b)=-0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      double[] doubleArray0 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) minus0, 1.176342548272881E-8, 0.0, 0.041666663879186654);
      assertArrayEquals(new double[] {0.0, 0.041666663879186654}, doubleArray0, 0.01);
      assertNotNull(doubleArray0);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) minus0, 0.0, (-8.0E298), (-894.79854635), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: 0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertNotNull(bracketingNthOrderBrentSolver0);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(1521, minus0, bracketingNthOrderBrentSolver0, 0.0, 1521, 1521, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=1,521, maximum iterations=1,521, initial=0, lower bound=1,521, upper bound=1,521, final a value=1,521, final b value=0.002, f(a)=-1,521, f(b)=-0.002
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.625, 0.0);
      assertNotNull(illinoisSolver0);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.625, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(1969, identity0, illinoisSolver0, (-1108.8621315760322), 1969, 1969, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,969, -415.823]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertNotNull(bracketingNthOrderBrentSolver0);
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      
      Gaussian gaussian0 = new Gaussian();
      assertNotNull(gaussian0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(1073741824, gaussian0, bracketingNthOrderBrentSolver0, 2074.706, 343.0, (-1488.9989626649444), allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,074.706, -1,488.999]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Constant constant0 = new Constant(0.0);
      assertNotNull(constant0);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1496.1084442371787));
      assertNotNull(illinoisSolver0);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-1496.1084442371787), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide((-5500), constant0, illinoisSolver0, (-2236.6), 0.0, (-2366.794221), allowedSolution0);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-1496.1084442371787), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals((-2236.6), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) minus0, (-640.25444306334), 639.37933353269, (-4194.442950697827));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) minus0, (-1.0), 5.669184079525E-24, (-2978.26346));
      assertEquals(5.669184079525E-24, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) identity0, (-1.0), 2391.920390894737, 2391.920390894737);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) identity0, (-3269.121618), 2391.920390894737);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Logit logit0 = new Logit();
      assertNotNull(logit0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) logit0, 0.3999999761581421, 0.5);
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cos cos0 = new Cos();
      assertNotNull(cos0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) cos0, (-125.8915989023), 66.4673305);
      assertEquals((-98.96016858808187), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint((-1245.2729567535066), (-1245.2729567535066));
      assertEquals((-1245.2729567535066), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver((-3416.3089199), 5907.71218883463);
      assertNotNull(pegasusSolver0);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals((-3416.3089199), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(5907.71218883463, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide(224, minus0, pegasusSolver0, (-1572.47126), 0.5, 0.0, allowedSolution0);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals((-3416.3089199), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.5, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-1572.47126), pegasusSolver0.getStartValue(), 0.01);
      assertEquals(5907.71218883463, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifySequence((-1488.9989626649444), (-1488.9989626649444), (-1488.9989626649444));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-1,488.999, -1,488.999]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sinh sinh0 = new Sinh();
      assertNotNull(sinh0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyBracketing(sinh0, 747.43, 747.43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [747.43, 747.43]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Logit logit0 = new Logit();
      assertNotNull(logit0);
      
      UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
      assertNotNull(univariateRealFunction0);
      
      // Undeclared exception!
      UnivariateRealSolverUtils.solve(univariateRealFunction0, 0.07842259109020233, 14.25998799999974, (-146.32348133679));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Cos cos0 = new Cos();
      assertNotNull(cos0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide((-301), cos0, (BracketedUnivariateRealSolver<UnivariateRealFunction>) null, (-301), (-301), 2083.8387990500737, allowedSolution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Signum signum0 = new Signum();
      assertNotNull(signum0);
      
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertNotNull(bracketingNthOrderBrentSolver0);
      assertEquals(Integer.MAX_VALUE, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(2.147483647E9, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(6189, signum0, bracketingNthOrderBrentSolver0, 1.125, (-3507.288), 1.125, allowedSolution0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) identity0, 0.0, 0.0, 0.0, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Abs abs0 = new Abs();
      assertNotNull(abs0);
      
      // Undeclared exception!
      UnivariateRealSolverUtils.bracket((UnivariateRealFunction) abs0, 271.781054283111, 2.0, 10808.0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) identity0, 877.04960994942, 877.04960994942, 877.04960994942);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [877.05, 877.05]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UnivariateRealSolverUtils.verifyInterval((-614.96541), 5.650007086920087E-9);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyInterval(1.0, 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1, 1]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Minus minus0 = new Minus();
      assertNotNull(minus0);
      
      double[] doubleArray0 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) minus0, 2341.9077, (-952.8693129), 8355.455449440171, 2703);
      assertArrayEquals(new double[] {(-0.09229999999979555), 4683.9077}, doubleArray0, 0.01);
      assertNotNull(doubleArray0);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, (-1445.9403), (-1445.9403), (-1445.9403), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnivariateRealSolverUtils.verifySequence(1.176342548272881E-8, 666.356949346, 1692.9);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Signum signum0 = new Signum();
      assertNotNull(signum0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyBracketing(signum0, 11.0, 748.4097408521225);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [11, 748.41], values: [1, 1]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-1478.0369), 1.2393345855018391E-8, 0.031);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence(3.6466618996459313E-10, 0.5, (-1957.91225027491));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-192.05505076), (-192.05505076), 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Log1p log1p0 = new Log1p();
      assertNotNull(log1p0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(log1p0, (-2484.4522565193), 1.7182818284590453);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(identity0, 0.0, 0.625);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      UnivariateRealSolverUtils.verifyBracketing(identity0, (-1245.8428), 1692.9);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.isBracketing((UnivariateRealFunction) null, 1.2393345855018391E-8, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Abs abs0 = new Abs();
      assertNotNull(abs0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(abs0, (-192.05505076), 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) identity0, 0.031, 1.176342548272881E-8, 1013.008);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=1,013, maximum iterations=2,147,483,647, initial=0.031, lower bound=0, upper bound=1,013.008, final a value=0, final b value=1,013.008, f(a)=0, f(b)=1,013.008
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Sinh sinh0 = new Sinh();
      assertNotNull(sinh0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) sinh0, 1175.926, 0.1111111111111111, (-1.0E-6), (-2146803597));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: -2,146,803,597
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Atan atan0 = new Atan();
      assertNotNull(atan0);
      
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(26, 26, 26);
      assertNotNull(bracketingNthOrderBrentSolver0);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(26, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(26.0, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(26.0, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(26, atan0, bracketingNthOrderBrentSolver0, (-1244.6179463), (-1244.6179463), (-3416.3089199), allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=26, maximum iterations=26, initial=-1,244.618, lower bound=-1,244.618, upper bound=-3,416.309, final a value=-1,244.618, final b value=-3,416.309, f(a)=-1.57, f(b)=-1.571
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.031, (-1036.84386601122));
      assertNotNull(regulaFalsiSolver0);
      assertEquals((-1036.84386601122), regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.031, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(2703, identity0, regulaFalsiSolver0, (-0.001501999999999973), (-0.001501999999999973), (-0.001501999999999973), allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=2,704, maximum iterations=2,703, initial=-0.002, lower bound=-0.002, upper bound=-0.002, final a value=-0.002, final b value=-0.002, f(a)=-0.002, f(b)=-0.002
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Identity identity0 = new Identity();
      assertNotNull(identity0);
      
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(4451.41991966353, 672.67);
      assertNotNull(regulaFalsiSolver0);
      assertEquals(4451.41991966353, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(672.67, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(4, identity0, regulaFalsiSolver0, 0.08713622391223907, 0.08713622391223907, 4451.41991966353, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=4, maximum iterations=4, initial=0.087, lower bound=0.087, upper bound=4,451.42, final a value=0.087, final b value=672.757, f(a)=0.087, f(b)=672.757
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Gaussian gaussian0 = new Gaussian(Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertNotNull(gaussian0);
      
      UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
      assertNotNull(univariateRealFunction0);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertNotNull(illinoisSolver0);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(2.147483647E9, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(2.147483647E9, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide(Integer.MAX_VALUE, univariateRealFunction0, illinoisSolver0, (-1519.205148425763), Integer.MAX_VALUE, (-1519.205148425763), allowedSolution0);
      assertEquals(2.147483647E9, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(2.147483647E9, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals((-1519.205148425763), illinoisSolver0.getMax(), 0.01);
      assertEquals((-1519.205148425763), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(2.147483647E9, illinoisSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(2.147483647E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      PegasusSolver pegasusSolver0 = new PegasusSolver(2477.732757584);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      UnivariateRealSolverUtils.forceSide(2147398697, ulp0, pegasusSolver0, (-0.1666666567325592), 3721, 156.955324, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, (-370.7), (-370.7), (-370.7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) asinh0, (-898.9281833745), (-898.9281833745), (-898.9281833745));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-898.928, -898.928]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, (-1.0), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Minus minus0 = new Minus();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) minus0, (-17.277), (-17.277));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-17.277, -17.277]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Minus minus0 = new Minus();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) minus0, (double) 2703, 4.675958569999383, 8361.754894596626, 2703);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=2,703, maximum iterations=2,703, initial=2,703, lower bound=4.676, upper bound=8,361.755, final a value=4.676, final b value=5,406, f(a)=-4.676, f(b)=-5,406
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }
}
