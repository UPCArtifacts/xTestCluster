/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 25 04:50:02 GMT 2022
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Abs;
import org.apache.commons.math.analysis.function.Asin;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Atan;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Exp;
import org.apache.commons.math.analysis.function.Floor;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-609.838), (-609.838), (-609.838));
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(498, (UnivariateRealFunction) tan0, (-1264.14151), 1.0E-6, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (498) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Floor floor0 = new Floor();
      double double0 = illinoisSolver0.solve(1246, (UnivariateRealFunction) floor0, (-274.26), (double) 2147478726, 131330.4094724477);
      assertEquals(131330.4094724477, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.7400000095367432, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3080.550592161206), (-3080.550592161206));
      Exp exp0 = new Exp();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(2085, (UnivariateRealFunction) exp0, (double) 2085, (-3080.550592161206), 273.0779059984877, allowedSolution0);
      assertEquals(273.0779059984877, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-3080.550592161206), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Gaussian gaussian0 = new Gaussian();
      double double0 = illinoisSolver0.solve(1706736037, (UnivariateRealFunction) gaussian0, (double) 1706736037, (double) 1706736037, (double) 1706736037);
      assertEquals(1.706736037E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(1.706736037E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(1.0, 1.0E-6, 1.0);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      pegasusSolver0.solve(4, (UnivariateRealFunction) tan0, 0.0, (-2985.44579), (-1.7168146928204135), allowedSolution0);
      double double0 = pegasusSolver0.doSolve();
      assertEquals((-1.7168146928204135), pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      regulaFalsiSolver0.solve(1307772568, (UnivariateRealFunction) tan0, 0.16666666666666666, 1072.99109391, (double) 1307772568, allowedSolution0);
      double double0 = regulaFalsiSolver0.doSolve();
      assertEquals(1.307772568E9, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1.5707968441148725, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3080.550592161206), (-3080.550592161206));
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      illinoisSolver0.solve(2147475992, (UnivariateRealFunction) tan0, (-1593.7888012), 0.5, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-984371540), (UnivariateRealFunction) tan0, 5.650007086920087E-9, 6753.623, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-984,371,540) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Logit logit0 = new Logit();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2, (UnivariateRealFunction) logit0, (double) 2, (double) 2, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 out of [0, 1] range
         //
         verifyException("org.apache.commons.math.analysis.function.Logit", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(0, (UnivariateRealFunction) null, (double) 0, (double) 0, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Sinh sinh0 = new Sinh();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(2551, (UnivariateRealFunction) sinh0, (-2060.517952), (double) 2551, (-1.5707963267948966), allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (2,551) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3080.550592161206), 0.6366197723675814);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-229), (UnivariateRealFunction) tan0, 1.5874010519681994, (double) (-229), (-3080.550592161206), allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-229) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Asin asin0 = new Asin();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(2140924375, (UnivariateRealFunction) asin0, (double) 2140924375, (double) 2140924375, (double) 2140924375, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,140,924,375, 2,140,924,375]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(1784, (UnivariateRealFunction) tan0, (-466.12358674), 1.5874010519681994, 864.8282553149829, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-466.124, 1.587], values: [-2.346, -60.218]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.5708003926462426, 1.5708003926462426);
      Tan tan0 = new Tan();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2085, (UnivariateRealFunction) tan0, (-1823.427657975584), 4.547473508864641E-13, 1.5708003926462426, (AllowedSolution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseSecantSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tan tan0 = new Tan();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-5518.007978043227), (-1.0));
      // Undeclared exception!
      illinoisSolver0.solve(2147483606, (UnivariateRealFunction) tan0, (-979.2), (-374.0020073300187), 797.46939);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Abs abs0 = new Abs();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve((-3811), (UnivariateRealFunction) abs0, (double) (-3811), (double) (-3811), (double) (-3811));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-3,811) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(28.86783938275456, 28.86783938275456, 28.86783938275456);
      Tan tan0 = new Tan();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(4, (UnivariateRealFunction) tan0, 84.11577110204317, (-216.015599191), (-216.015599191));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [84.116, -216.016]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Tan tan0 = new Tan();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(1749, (UnivariateRealFunction) tan0, 1.0, 3.415247703269946, 1078.435);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [1, 3.415], values: [1.557, 0.281]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      // Undeclared exception!
      try { 
        illinoisSolver0.doSolve();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(41.54225249292643, 41.54225249292643, 41.54225249292643);
      Floor floor0 = new Floor();
      illinoisSolver0.setup(628080037, floor0, 41.54225249292643, 41.54225249292643, (-2544.7));
      // Undeclared exception!
      try { 
        illinoisSolver0.doSolve();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [41.542, 41.542]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Abs abs0 = new Abs();
      regulaFalsiSolver0.setup(5, abs0, 2304.1332934511374, 4.503599627370496E15, 4.503599627370496E15);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [2,304.133, 4,503,599,627,370,496], values: [2,304.133, 4,503,599,627,370,496]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tan tan0 = new Tan();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1218);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(1218, (UnivariateRealFunction) tan0, 0.11111095942313305, (double) 1218, 0.11111095942313305, allowedSolution0);
      assertEquals(0.11111095942313305, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(92.2380075002709, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Cos cos0 = new Cos();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(289, (UnivariateRealFunction) cos0, (double) 289, 293.5309423410846, 0.19999998807907104, allowedSolution0);
      assertEquals(0.19999998807907104, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(290.5973204570559, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(402, (UnivariateRealFunction) signum0, (-2642.03), 3127.7030040194, allowedSolution0);
      assertEquals(242.83650200969987, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(2.1664572179880926E-7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Tan tan0 = new Tan();
      double double0 = regulaFalsiSolver0.solve(4025, (UnivariateRealFunction) tan0, (-823.19420486298), (double) 4025, 16.0);
      assertEquals(16.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-818.3848863230185), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(16.362497846958494, 16.362497846958494, 16.362497846958494);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(1230, (UnivariateRealFunction) tan0, 16.362497846958494, 404.677274689027, allowedSolution0);
      assertEquals(210.51988626799275, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(224.1195109027235, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Atanh atanh0 = new Atanh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(857606894, (UnivariateRealFunction) atanh0, (-2.7780793453829036E-5), 0.08119390278858998, 0.6937514242226825, allowedSolution0);
      assertEquals((-6.523911153840792E-16), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Atanh atanh0 = new Atanh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = pegasusSolver0.solve(857606894, (UnivariateRealFunction) atanh0, (-2.7780793453829036E-5), 0.08119390278858998, 0.6937514242226825, allowedSolution0);
      assertEquals(0.6937514242226825, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(2.8698592549372254E-42, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Atan atan0 = new Atan();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(959, (UnivariateRealFunction) atan0, (-4086.547824), (double) 959, allowedSolution0);
      assertEquals((-1563.773912), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-4.727735798398227E-19), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(402, (UnivariateRealFunction) signum0, (-2642.03), 3127.7030040194, allowedSolution0);
      assertEquals(3127.7030040194, illinoisSolver0.getMax(), 0.01);
      assertEquals((-4.1949317829407353E-7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      illinoisSolver0.solve(2147478726, (UnivariateRealFunction) tan0, (-555.0090135), (-1.0), 131330.4094724477, allowedSolution0);
      double double0 = illinoisSolver0.doSolve();
      assertEquals(131330.4094724477, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-391.3810042205231), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Tan tan0 = new Tan();
      double double0 = illinoisSolver0.solve(1246, (UnivariateRealFunction) tan0, (-1.0), 1.0, (-1.0));
      assertEquals((-1.0), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0, 1.0);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(2147478726, (UnivariateRealFunction) tan0, 0.0, (-555.0090135), allowedSolution0);
      assertEquals((-555.0090135), illinoisSolver0.getMax(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(16.362497846958494, 16.362497846958494, 16.362497846958494);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(1230, (UnivariateRealFunction) tan0, 16.362497846958494, 865.566290593451, allowedSolution0);
      assertEquals(16.362497846958494, illinoisSolver0.getMin(), 0.01);
      assertEquals(16.362497846958494, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(16.362497846958494, 16.362497846958494, 16.362497846958494);
      Tan tan0 = new Tan();
      double double0 = illinoisSolver0.solve(1230, (UnivariateRealFunction) tan0, 16.362497846958494, (double) 1230, 16.362497846958494);
      assertEquals(16.362497846958494, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(75.35120757128743, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      pegasusSolver0.solve(187, (UnivariateRealFunction) asinh0, (-263.7000157), 9.806364056430539E-5, 9.806364056430539E-5, allowedSolution0);
  }
}
