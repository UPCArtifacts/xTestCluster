/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 10:36:19 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultTableXYDataset0, (-2));
      XYBarDataset xYBarDataset0 = new XYBarDataset(subSeriesDataset0, (-2));
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 0);
      defaultKeyedValues2DDataset0.addChangeListener(categoryToPieDataset0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultTableXYDataset0, xYBarDataset0);
      defaultKeyedValues2DDataset0.notifyListeners(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.fireDatasetChanged();
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      assertEquals(1.0, intervalXYDelegate0.getFixedIntervalWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      Object object0 = combinedDataset0.clone();
      assertNotSame(object0, combinedDataset0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-1), (-1), (Number) null);
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultTableXYDataset0, (-2));
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultTableXYDataset0, 0.0);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      defaultKeyedValues2DDataset0.addChangeListener(intervalXYDelegate0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(xYBarDataset0, defaultKeyedValues2DDataset0);
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.notifyListeners(datasetChangeEvent0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.removeChangeListener((DatasetChangeListener) null);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(timeTableXYDataset0);
      defaultIntervalXYDataset0.removeChangeListener(xYDatasetTableModel0);
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1183, 0);
      DatasetGroup datasetGroup0 = waferMapDataset0.getGroup();
      waferMapDataset0.setGroup(datasetGroup0);
      assertEquals(1.0, waferMapDataset0.getChipSpace(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      boolean boolean0 = combinedDataset0.hasListener(defaultWindDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      defaultTableXYDataset0.validateObject();
      assertEquals(0, defaultTableXYDataset0.getItemCount());
  }
}
