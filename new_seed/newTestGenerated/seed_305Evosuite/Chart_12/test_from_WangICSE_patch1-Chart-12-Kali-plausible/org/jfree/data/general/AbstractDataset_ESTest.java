/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 09:00:19 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EventListener;
import java.util.Stack;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Object[][][] objectArray0 = new Object[0][8][6];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultWindDataset0, 3423);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(xYBarDataset0);
      XYBarDataset xYBarDataset1 = new XYBarDataset(defaultWindDataset0, 3239.85476741);
      defaultWindDataset0.seriesChanged(seriesChangeEvent0);
      assertEquals(0, defaultWindDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-545), 1900);
      DatasetGroup datasetGroup0 = new DatasetGroup("B?");
      waferMapDataset0.setGroup(datasetGroup0);
      assertEquals((-545), waferMapDataset0.getMaxChipX());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultCategoryDataset0, tableOrder0, 2);
      defaultCategoryDataset0.removeChangeListener(categoryToPieDataset0);
      assertEquals(2, categoryToPieDataset0.getExtractIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Object[][][] objectArray0 = new Object[0][8][6];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultWindDataset0, 3423);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValues2DDataset0, defaultStatisticalCategoryDataset0);
      subSeriesDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(1, subSeriesDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.fireDatasetChanged();
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1));
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(335, (-1), long0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Number number0 = waferMapDataset0.getMinValue();
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(integer0, number0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultKeyedValueDataset0.addChangeListener(xYDatasetTableModel0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-544), (-544));
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset((Comparable) null, (OHLCDataItem[]) null);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultOHLCDataset0, true);
      defaultKeyedValueDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        defaultKeyedValueDataset0.validateObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultKeyedValueDataset0.removeChangeListener(xYDatasetTableModel0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      DatasetGroup datasetGroup0 = defaultKeyedValueDataset0.getGroup();
      defaultKeyedValueDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      boolean boolean0 = defaultKeyedValueDataset0.hasListener((EventListener) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      Object object0 = defaultKeyedValueDataset0.clone();
      assertNotSame(object0, defaultKeyedValueDataset0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset();
      defaultKeyedValueDataset0.validateObject();
  }
}
