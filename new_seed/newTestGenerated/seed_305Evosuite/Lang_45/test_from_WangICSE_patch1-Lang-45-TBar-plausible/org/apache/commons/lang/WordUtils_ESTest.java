/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 04 10:57:02 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-1), (-1), " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("`}1Q2%v-k 9plv:=PP", (-2056), (-536), "`}1Q2%v-k 9plv:=PP");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("`}1Q2%v-k 9plv:=PP", 0, 0, "java.vendor");
      assertEquals("java.vendor", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, "V& k.p");
      assertEquals("V& k.p", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("org.apache.commons.lang.WordUtils", 5089, 5089, "L^wMG");
      assertEquals("org.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 1, 1, "rdlnh7Khtdj");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("+\n\n6", (-811), "P!D18s)4D!.nM!^MOA", true);
      assertEquals("+P!D18s)4D!.nM!^MOA\nP!D18s)4D!.nM!^MOA\nP!D18s)4D!.nM!^MOA6", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", 1042);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.wrap("org.apache.commons.lang.StringUtils", (-741), "org.apache.commons.lang.StringUtils", true);
      String string1 = WordUtils.wrap("org.apache.commons.lang.StringUtils", (-1), string0, true);
      // Undeclared exception!
      WordUtils.swapCase(string1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.wrap("org.apache.commons.lang.StringUtils", (-1), "org.apache.commons.lang.StringUtils", true);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      WordUtils.initials(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.wrap("org.apache.commons.lang.StringUtils", (-741), "org.apache.commons.lang.StringUtils", true);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      WordUtils.capitalizeFully(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.wrap("org.apache.commons.lang.StringUtils", (-741), "org.apache.commons.lang.StringUtils", true);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      WordUtils.capitalize(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      String string0 = WordUtils.initials("0Cli)OD<i)", charArray0);
      assertEquals("0l", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.initials("cI?h=T+F", (char[]) null);
      assertEquals("c", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[4] = 'c';
      String string0 = WordUtils.uncapitalize("os.arch", charArray0);
      assertEquals("os.arch", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("p5/C", (char[]) null);
      assertEquals("p5/C", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("`Ijava.io.tmpdirh&java.io.tmpdir6Jjava.io.tmpdir$", (char[]) null);
      assertEquals("`ijava.io.tmpdirh&java.io.tmpdir6jjava.io.tmpdir$", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.capitalize("(8RE>Ys`w(]", (char[]) null);
      assertEquals("(8RE>Ys`w(]", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.wrap("*8~An /\"", 1, "", true);
      assertEquals("*8~An/\"", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.wrap("+\u0006", (-811), (String) null, true);
      assertEquals("+\n\u0006", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0, "_JK/=", true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate(" ", (-173), (-3838), " ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 13, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.abbreviate(".2q:", 0, 0, "QQ{J;cmICa_mB{Q{J;cmICa_mBJQ{J;cmICa_mB;Q{J;cmICa_mBcQ{J;cmICa_mBmQ{J;cmICa_mBIQ{J;cmICa_mBCQ{J;cmICa_mBaQ{J;cmICa_mB_Q{J;cmICa_mBmQ{J;cmICa_mBB");
      assertEquals("QQ{J;cmICa_mB{Q{J;cmICa_mBJQ{J;cmICa_mB;Q{J;cmICa_mBcQ{J;cmICa_mBmQ{J;cmICa_mBIQ{J;cmICa_mBCQ{J;cmICa_mBaQ{J;cmICa_mB_Q{J;cmICa_mBmQ{J;cmICa_mBB", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 1042, (-1568), (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, Integer.MAX_VALUE, Integer.MAX_VALUE, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'Q';
      String string0 = WordUtils.capitalize("`}1Q2%v-k 9plv:=PP", charArray0);
      assertEquals("`}1Q2%v-k 9plv:=PP", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.initials("R\"P@^WH*5H U=.~");
      assertEquals("RU", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("QQ{J;cmICa_mB{Q{J;cmICa_mBJQ{J;cmICa_mB;Q{J;cmICa_mBcQ{J;cmICa_mBmQ{J;cmICa_mBIQ{J;cmICa_mBCQ{J;cmICa_mBaQ{J;cmICa_mB_Q{J;cmICa_mBmQ{J;cmICa_mBB", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.swapCase("org.apache.commons.lang.StringUtils");
      assertEquals("ORG.APACHE.COMMONS.LANG.sTRINGuTILS", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("{|Ee.c)Q h3pN]B:P", charArray0);
      assertEquals("{|Ee.c)Q h3pN]B:P", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully(":4#C~fn^pzLC", charArray0);
      assertEquals(":4#C~fn^pzLC", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize(".2q:", charArray0);
      assertEquals(".2q:", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap("`}1Q2%v-k 9plv:=PP", (-8), "`}1Q2%v-k 9plv:=PP", false);
      assertEquals("`}1Q2%v-k`}1Q2%v-k 9plv:=PP9plv:=PP", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.wrap("s ", (-389));
      assertNotNull(string0);
      assertEquals("s\n", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap(" Tw-=-,", 0, "org.apache.commons.lang.WordUtils", true);
      assertEquals("Torg.apache.commons.lang.WordUtilsworg.apache.commons.lang.WordUtils-org.apache.commons.lang.WordUtils=org.apache.commons.lang.WordUtils-org.apache.commons.lang.WordUtils,", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.wrap("", 99, " ", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 5);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("Mac OS X");
      assertEquals("mac oS x", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("J9}f] Hx;");
      assertEquals("J9}f] Hx;", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = WordUtils.capitalize(" ");
      assertEquals(" ", string0);
  }
}
