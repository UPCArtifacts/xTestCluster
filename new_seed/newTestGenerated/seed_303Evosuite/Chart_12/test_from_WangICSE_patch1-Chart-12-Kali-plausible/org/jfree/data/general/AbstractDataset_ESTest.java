/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 03 20:15:50 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultPieDataset0.addChangeListener(xYDatasetTableModel0);
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(1594);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0, false);
      defaultPieDataset0.addChangeListener(intervalXYDelegate0);
      defaultPieDataset0.setValue((Comparable) spreadsheetDate0, (double) 2);
      assertEquals(1904, spreadsheetDate0.getYYYY());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      DatasetGroup datasetGroup0 = defaultPieDataset0.getGroup();
      defaultPieDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDataset0, combinedDataset0);
      combinedDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2, 2, integer0);
      waferMapDataset0.fireDatasetChanged();
      assertEquals(2, waferMapDataset0.getMaxChipY());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(combinedDataset0, 59);
      subSeriesDataset0.addChangeListener((DatasetChangeListener) null);
      assertEquals(1, subSeriesDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-1), (-1));
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      defaultPieDataset0.removeChangeListener((DatasetChangeListener) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
      defaultTableXYDataset0.removeChangeListener(intervalXYDelegate0);
      assertEquals(0.5, intervalXYDelegate0.getIntervalPositionFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      boolean boolean0 = defaultPieDataset0.hasListener(xYSeriesCollection0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Object object0 = defaultPieDataset0.clone();
      assertNotSame(object0, defaultPieDataset0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      defaultPieDataset0.validateObject();
  }
}
