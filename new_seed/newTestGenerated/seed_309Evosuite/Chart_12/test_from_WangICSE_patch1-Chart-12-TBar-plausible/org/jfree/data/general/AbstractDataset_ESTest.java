/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 16:52:18 GMT 2023
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.DefaultKeyedValue;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.SeriesDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYBarDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      Long long0 = new Long((-939L));
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2), 0, long0);
      DatasetGroup datasetGroup0 = combinedDataset0.getGroup();
      waferMapDataset0.setGroup(datasetGroup0);
      assertEquals("NOID", datasetGroup0.getID());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      matrixSeriesCollection0.removeChangeListener((DatasetChangeListener) null);
      assertEquals(0, matrixSeriesCollection0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2264, 37);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(dynamicTimeSeriesCollection0, 1);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(subSeriesDataset0, subSeriesDataset0);
      subSeriesDataset0.notifyListeners(datasetChangeEvent0);
      assertEquals(1, subSeriesDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 422);
      combinedDataset0.addChangeListener(categoryToPieDataset0);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      Object object0 = combinedDataset0.clone();
      assertNotSame(object0, combinedDataset0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(combinedDataset0, 0);
      combinedDataset0.add((SeriesDataset) subSeriesDataset0, 0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        combinedDataset0.fireDatasetChanged();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.add((SeriesDataset) null, (-2980));
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        combinedDataset0.fireDatasetChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(combinedDataset0, 4);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(subSeriesDataset0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        combinedDataset0.fireDatasetChanged();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedDataset0.add((SeriesDataset) timeSeriesCollection0, 2);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        combinedDataset0.fireDatasetChanged();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'series' argument is out of bounds (2).
         //
         verifyException("org.jfree.data.time.TimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.add((SeriesDataset) combinedDataset0, (-2980));
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        combinedDataset0.fireDatasetChanged();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(combinedDataset0);
      combinedDataset0.addChangeListener(intervalXYDelegate0);
      combinedDataset0.fireDatasetChanged();
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      boolean boolean0 = xIntervalSeriesCollection0.hasListener(combinedDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(combinedDataset0, (-805.79024836));
      Double double0 = new Double((-805.79024836));
      DefaultKeyedValue defaultKeyedValue0 = new DefaultKeyedValue("Time", double0);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(defaultKeyedValue0);
      defaultKeyedValueDataset0.removeChangeListener(xYBarDataset0);
      assertEquals((-805.79024836), xYBarDataset0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(combinedDataset0, (-805.79024836));
      XYBarDataset xYBarDataset1 = new XYBarDataset(combinedDataset0, 262.3992064);
      combinedDataset0.fireDatasetChanged();
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(2958465);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-1), 2958465, integer0);
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.data.general.AbstractDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      DatasetGroup datasetGroup0 = combinedDataset0.getGroup();
      combinedDataset0.setGroup(datasetGroup0);
      assertEquals(0, combinedDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.validateObject();
  }
}
