/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 05 18:50:06 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 2, 0, "&*_(Zh}");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 2555, 2091, " ");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("y11N", 4, 0, "d");
      assertEquals("y11N", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.wrap("Cannot pad a negative amouEH: ", 4);
      assertEquals("Cannot\npad\na\nnegative\namouEH:\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Caught a SecurityException reading the system property '", 0, 0, "Caught A SecurityException Reading The System Property '");
      assertEquals("Caught A SecurityException Reading The System Property '", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap("", 2, "C=80", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-2357));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.initials("y}GEjgmnp*|");
      assertEquals("y", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.capitalize(" ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.wrap("pp@qCL|oYRkU~>^*.Ma@p@qCL|oYRkU~>^*.Maqp@qCL|oYRkU~>^*.MaCp@qCL|oYRkU~>^*.MaLp@qCL|oYRkU~>^*.Ma|p@qCL|oYRkU~>^*.Maop@qCL|oYRkU~>^*.MaYp@qCL|oYRkU~>^*.MaRp@qCL|oYRkU~>^*.Makp@qCL|oYRkU~>^*.MaUp@qCL|oYRkU~>^*.Ma~p@qCL|oYRkU~>^*.Ma>p@qCL|oYRkU~>^*.Ma^p@qCL|oYRkU~>^*.Ma*p@qCL|oYRkU~>^*.Ma.p@qCL|oYRkU~>^*.MaMp@qCL|oYRkU~>^*.Maa", (-2167), "pp@qCL|oYRkU~>^*.Ma@p@qCL|oYRkU~>^*.Maqp@qCL|oYRkU~>^*.MaCp@qCL|oYRkU~>^*.MaLp@qCL|oYRkU~>^*.Ma|p@qCL|oYRkU~>^*.Maop@qCL|oYRkU~>^*.MaYp@qCL|oYRkU~>^*.MaRp@qCL|oYRkU~>^*.Makp@qCL|oYRkU~>^*.MaUp@qCL|oYRkU~>^*.Ma~p@qCL|oYRkU~>^*.Ma>p@qCL|oYRkU~>^*.Ma^p@qCL|oYRkU~>^*.Ma*p@qCL|oYRkU~>^*.Ma.p@qCL|oYRkU~>^*.MaMp@qCL|oYRkU~>^*.Maa", true);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      WordUtils.initials(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '';
      String string0 = WordUtils.uncapitalize("D-k%WV", charArray0);
      assertEquals("d-k%Wv", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully("java.vm.specification.vendor", charArray0);
      assertEquals("Java.vm.specification.vendor", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.capitalize("1?On#m93cPpy e5nyk9", (char[]) null);
      assertEquals("1?On#m93cPpy E5nyk9", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 32, "%UOu]/E", true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("Windows NT", (-2941), (-1641), " ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.compiler", 10, 11, "eD2:v;HcADuT");
      assertEquals("java.compileD2:v;HcADuT", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-164), 35, "DTZMiH\":)/O*]IsjoVu");
      assertEquals("DTZMiH\":)/O*]IsjoVu", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.compiler", (-899), (-1), "dYAu.WEIw");
      assertEquals("java.compiler", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, "I,YR944k;E");
      assertEquals("I,YR944k;E", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 34, 29, "dyK^`i>uf");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-899), 179, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      String string0 = WordUtils.initials("@>'Ru>LmfC^_Gg+r", charArray0);
      assertEquals("'L", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("Z[os#-/S;+s", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.initials("Z[os#-/s;+s", (char[]) null);
      assertEquals("Z", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("z[OS#-/s;+S");
      assertEquals("Z[os#-/S;+s", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.uncapitalize(" ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("Z[os#-/S;+s", charArray0);
      assertEquals("Z[os#-/S;+s", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("SFVzCzg]sx6b", charArray0);
      assertEquals("SFVzCzg]sx6b", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("\n", charArray0);
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.wrap("L0o^buv\rvn Hhlf", (-2269), "[I.}", false);
      assertEquals("L0o^buv\rvn[I.}Hhlf", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap("java.compiler", (-2088), (String) null, false);
      assertEquals("java.compiler", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("SC pp-2", (-4066), "", true);
      assertEquals("SCpp-2", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-1782), "eH.%WC6:kx}W|j,c6", true);
      assertEquals("\teH.%WC6:kx}W|j,c6\reH.%WC6:kx}W|j,c6\neH.%WC6:kx}W|j,c6\b", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("L0o^BUV\rvN HHLf");
      assertEquals("L0o^buv\rVn Hhlf", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }
}
