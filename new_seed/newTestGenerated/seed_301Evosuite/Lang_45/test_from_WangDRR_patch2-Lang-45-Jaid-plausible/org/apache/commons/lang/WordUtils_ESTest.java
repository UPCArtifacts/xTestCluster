/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 21:06:49 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WordUtils.abbreviate("Strings must not be null", (-1019), 3, "");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WordUtils.abbreviate(" ", 0, 0, " ");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WordUtils.abbreviate("org.apache.commons.lang.WordUtils", (-758), 0, "3b}?Z6l6");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WordUtils.abbreviate("WN/<;fB aIX~IE@7", (-570), 125, "");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WordUtils.abbreviate("", 0, 0, "Caught a SecurityException reading the system property '");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WordUtils.wrap("g#\"hA/ti?F8\nrWOR", (-34), "g#\"hA/ti?F8 rWOR", true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WordUtils.wrap("", 0, "1(1+", false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WordUtils.wrap("", 514);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WordUtils.uncapitalize((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WordUtils.initials("org.apache.commons.lang.WordUtils");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("* ", (-14), (-14), "* ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WordUtils.initials("g#\"hA/ti?F8\nrWOR", (char[]) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[4];
      WordUtils.initials((String) null, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[6];
      WordUtils.initials("", charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[7];
      WordUtils.uncapitalize("", charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WordUtils.uncapitalize((String) null, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[4];
      WordUtils.capitalizeFully("", charArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WordUtils.capitalizeFully((String) null, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = 'm';
      WordUtils.capitalize("org.apache.commons.lang.WordUtils", charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[4];
      WordUtils.capitalize((String) null, charArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[4];
      WordUtils.capitalize("", charArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WordUtils.capitalize("Java.vm.name", (char[]) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap("Minimum abbreviation width is 4", (-758), "org.apache.commons.lang.WordUtils", true);
      assertEquals("Morg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilsnorg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilsmorg.apache.commons.lang.WordUtilsuorg.apache.commons.lang.WordUtilsmorg.apache.commons.lang.WordUtilsaorg.apache.commons.lang.WordUtilsborg.apache.commons.lang.WordUtilsborg.apache.commons.lang.WordUtilsrorg.apache.commons.lang.WordUtilseorg.apache.commons.lang.WordUtilsvorg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilsaorg.apache.commons.lang.WordUtilstorg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilsoorg.apache.commons.lang.WordUtilsnorg.apache.commons.lang.WordUtilsworg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilsdorg.apache.commons.lang.WordUtilstorg.apache.commons.lang.WordUtilshorg.apache.commons.lang.WordUtilsiorg.apache.commons.lang.WordUtilssorg.apache.commons.lang.WordUtils4", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1213), "h", true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-1), (-1), " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-2865), (-2865), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("rA", 7, 7, "rA");
      assertEquals("rA", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 2, 2, "z$I)b45+]`D5<Z");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate("W^[A[dT[.kjyh ;", 2, 1, "Z=C@Og=Go.*7HiCb`");
      assertEquals("W^Z=C@Og=Go.*7HiCb`", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("\"", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("jm&KjM|kv )`Yy?g", charArray0);
      assertEquals("j", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase("org.apache.commons.lang.WordUtils");
      assertEquals("ORG.APACHE.COMMONS.LANG.wORDuTILS", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[2] = 'O';
      String string0 = WordUtils.uncapitalize("SunOS", charArray0);
      assertEquals("sunOs", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize(" \t\r\n\b", charArray0);
      assertEquals(" \t\r\n\b", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("#%m/Ha[Y%fu$)&xP", charArray0);
      assertEquals("#%m/Ha[Y%fu$)&xP", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully("Z=C@Og=Go.*7HiCb`", charArray0);
      assertEquals("Z=c@og=go.*7hicb`", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.capitalize("Q39[ >l:Jc}");
      assertEquals("Q39[ >l:Jc}", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("g#Bxf-", charArray0);
      assertEquals("g#Bxf-", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap("S?QXc~!.", 2, "Z=c@og=go.*7hicb`", true);
      assertEquals("S?Z=c@og=go.*7hicb`QXZ=c@og=go.*7hicb`c~Z=c@og=go.*7hicb`!.", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("* ", (-14));
      assertEquals("*\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap(" vks ", 2, "AES7K9P", false);
      assertEquals("vksAES7K9P", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap("Sx", (-265), (String) null, false);
      assertEquals("Sx", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("6${,");
      assertEquals("6${,", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("Z=C@Og=Go.*7HiCb`");
      assertEquals("Z=c@og=go.*7hicb`", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }
}
