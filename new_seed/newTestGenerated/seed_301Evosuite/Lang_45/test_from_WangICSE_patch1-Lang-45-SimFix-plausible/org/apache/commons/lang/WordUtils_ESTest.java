/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 01 20:59:13 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Cannot pad a negative amount: ", 22, 3, "!sq*DV29_=M");
      assertEquals("Can!sq*DV29_=M", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("5.1", (-2484), 3, (String) null);
      assertEquals("5.1", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-576), " \t\r\n\b", true);
      assertEquals("\t \t\r\n\b\r \t\r\n\b\n \t\r\n\b\b", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, "E6ilo", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.wrap("", 514);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap(",,i7^9d5:Rh$8+lqi,i7^9d5:Rh$8+lq,i7^9d5:Rh$8+lq7,i7^9d5:Rh$8+lq^,i7^9d5:Rh$8+lq9,i7^9d5:Rh$8+lqd,i7^9d5:Rh$8+lq5,i7^9d5:Rh$8+lq:,i7^9d5:Rh$8+lqR,i7^9d5:Rh$8+lqh,i7^9d5:Rh$8+lq$,i7^9d5:Rh$8+lq8,i7^9d5:Rh$8+lq+,i7^9d5:Rh$8+lql,i7^9d5:Rh$8+lqq", (-1713), ",,i7^9d5:Rh$8+lqi,i7^9d5:Rh$8+lq,i7^9d5:Rh$8+lq7,i7^9d5:Rh$8+lq^,i7^9d5:Rh$8+lq9,i7^9d5:Rh$8+lqd,i7^9d5:Rh$8+lq5,i7^9d5:Rh$8+lq:,i7^9d5:Rh$8+lqR,i7^9d5:Rh$8+lqh,i7^9d5:Rh$8+lq$,i7^9d5:Rh$8+lq8,i7^9d5:Rh$8+lq+,i7^9d5:Rh$8+lql,i7^9d5:Rh$8+lqq", true);
      // Undeclared exception!
      WordUtils.uncapitalize(string0, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("Mk! 6qCfnyR", (-2398), (-2398), "Mk! 6qCfnyR");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("8bNdcJ5L{b~^{", (char[]) null);
      assertEquals("8bNdcJ5L{b~^{", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("ld", (char[]) null);
      assertEquals("Ld", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = 'm';
      String string0 = WordUtils.capitalize("org.apache.commons.lang.WordUtils", charArray0);
      assertEquals("Org.apache.commOns.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.capitalize("java.ext.dirs", (char[]) null);
      assertEquals("Java.ext.dirs", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap("Z=C@Og=Go.*7HiCb`", 2, "Z=C@Og=Go.*7HiCb`", false);
      assertEquals("Z=C@Og=Go.*7HiCb`", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 2, "H'dOX]", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.class.path", 3, 3, " ");
      assertEquals("jav ", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.abbreviate("W^[A[dT[.kjyh ;", 13, 1, "Z=C@Og=Go.*7HiCb`");
      assertEquals("W^[A[dT[.kjyhZ=C@Og=Go.*7HiCb`", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ~a", (-1), (-1), " ~a");
      assertEquals(" ~a", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("VY<EYvG(", (-1), 3705, "");
      assertEquals("VY<EYvG(", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 1, 1, "z$I)b45+]`D5<Z");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-1), (-1), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("_BoedIy>Hn)j&", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials("I+~Hk8.L", charArray0);
      assertEquals("I", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase("ggP?f}UB@FWZl1,:!");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = ':';
      String string0 = WordUtils.uncapitalize("GGp?F}ub@fwzL1,:!", charArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("ykrJE:", charArray0);
      assertEquals("ykrJE:", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("L}5Qg X^S~pU@", charArray0);
      assertEquals("L}5Qg X^S~pU@", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("org.apache.commons.lang.WordUtils", charArray0);
      assertEquals("org.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalizeFully("e6ilo", charArray0);
      assertEquals("E6ilo", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap("D,vmK?1iI48Zk(Ed~[ ", (-1933), "e*BM2", false);
      assertEquals("D,vmK?1iI48Zk(Ed~[e*BM2", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("Cannot pad a negative amount: ", (-3803), (String) null, true);
      assertEquals("C\na\nn\nn\no\nt\np\na\nd\na\nn\ne\ng\na\nt\ni\nv\ne\na\nm\no\nu\nn\nt\n:\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("8bNdcJ5L{b~^{");
      assertEquals("8bNdcJ5L{b~^{", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.wrap("z=c@og=go.*7hicb`", 2);
      assertNotNull(string0);
      assertEquals("z=c@og=go.*7hicb`", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.initials("IrJX[1k1S73! J1kzD");
      assertEquals("IJ", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("Z=C@Og=Go.*7HiCb`");
      assertEquals("Z=c@og=go.*7hicb`", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalize(" ?U");
      assertEquals(" ?U", string0);
  }
}
