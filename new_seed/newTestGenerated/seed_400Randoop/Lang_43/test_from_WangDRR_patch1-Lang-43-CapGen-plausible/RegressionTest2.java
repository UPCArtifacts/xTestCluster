import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map71);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map76);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat49.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormats();
        java.text.ParsePosition parsePosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = extendedMessageFormat41.parseObject("", parsePosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat20.applyPattern("");
        java.lang.String str23 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormats();
        java.lang.String str25 = extendedMessageFormat20.toPattern();
        extendedMessageFormat20.applyPattern("");
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat11.format((java.lang.Object) extendedMessageFormat20, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.String str50 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray52 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.lang.String str7 = extendedMessageFormat3.toPattern();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.lang.Object[] objArray14 = extendedMessageFormat12.parse("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map37);
        extendedMessageFormat12.setLocale(locale28);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map40);
        extendedMessageFormat41.applyPattern("");
        boolean boolean44 = extendedMessageFormat3.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.String str14 = extendedMessageFormat12.toPattern();
        java.lang.Object obj15 = extendedMessageFormat12.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        extendedMessageFormat19.applyPattern("hi!");
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map54);
        extendedMessageFormat19.setLocale(locale52);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map57);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray61 = extendedMessageFormat58.parse("hi!", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.lang.Object[] objArray29 = extendedMessageFormat26.parse("hi!");
        java.text.Format[] formatArray30 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = extendedMessageFormat21.formatToCharacterIterator((java.lang.Object) formatArray30);
        java.lang.String str32 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray30);
        java.lang.StringBuffer stringBuffer33 = null;
        java.text.FieldPosition fieldPosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer35 = extendedMessageFormat3.format((java.lang.Object[]) formatArray30, stringBuffer33, fieldPosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.lang.String str30 = extendedMessageFormat20.toPattern();
        extendedMessageFormat20.applyPattern("hi!");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map50);
        extendedMessageFormat20.setLocale(locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        extendedMessageFormat60.setLocale(locale66);
        java.lang.String str70 = extendedMessageFormat60.toPattern();
        extendedMessageFormat60.applyPattern("hi!");
        java.util.Locale locale76 = null;
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map77);
        java.text.Format[] formatArray79 = extendedMessageFormat78.getFormatsByArgumentIndex();
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map82);
        java.util.Locale locale84 = extendedMessageFormat83.getLocale();
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map85);
        extendedMessageFormat78.setLocale(locale84);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map88);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale84, map90);
        extendedMessageFormat60.setLocale(locale84);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale84);
        extendedMessageFormat54.setLocale(locale84);
        java.util.Locale locale96 = extendedMessageFormat54.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat(0, (java.text.Format) extendedMessageFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale96);
        org.junit.Assert.assertEquals(locale96.toString(), "en_US");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat38.getFormats();
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.lang.String str65 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray64);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormatsByArgumentIndex(formatArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) formatArray16);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = extendedMessageFormat60.formatToCharacterIterator((java.lang.Object) formatArray64);
        java.lang.String str66 = extendedMessageFormat60.toPattern();
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = extendedMessageFormat11.format((java.lang.Object) extendedMessageFormat60, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        extendedMessageFormat59.setLocale(locale68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        extendedMessageFormat43.setLocale(locale71);
        extendedMessageFormat40.setLocale(locale71);
        java.util.Locale locale75 = null;
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75, map76);
        java.text.Format[] formatArray78 = extendedMessageFormat77.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer79 = null;
        java.text.FieldPosition fieldPosition80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer81 = extendedMessageFormat40.format((java.lang.Object[]) formatArray78, stringBuffer79, fieldPosition80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray78);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Locale locale25 = null;
        extendedMessageFormat23.setLocale(locale25);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        extendedMessageFormat49.applyPattern("");
        java.lang.String str52 = extendedMessageFormat49.toPattern();
        java.util.Locale locale53 = extendedMessageFormat49.getLocale();
        extendedMessageFormat1.setLocale(locale53);
        java.lang.Class<?> wildcardClass55 = locale53.getClass();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.lang.Object obj41 = extendedMessageFormat40.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray53 = extendedMessageFormat52.getFormats();
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        extendedMessageFormat60.setLocale(locale66);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map85);
        java.util.Locale locale87 = extendedMessageFormat86.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        extendedMessageFormat73.setLocale(locale87);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87, map90);
        extendedMessageFormat52.setLocale(locale87);
        java.util.Locale locale93 = extendedMessageFormat52.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(1, (java.text.Format) extendedMessageFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "en_US");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        extendedMessageFormat32.setLocale(locale38);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        extendedMessageFormat25.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        extendedMessageFormat25.setLocale(locale48);
        extendedMessageFormat20.setLocale(locale48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat54.applyPattern("hi!");
        boolean boolean57 = extendedMessageFormat20.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat3.format((java.lang.Object[]) formatArray35, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        boolean boolean32 = extendedMessageFormat17.equals((java.lang.Object) extendedMessageFormat31);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        java.lang.String str56 = extendedMessageFormat46.toPattern();
        java.lang.Object[] objArray58 = extendedMessageFormat46.parse("hi!");
        java.text.Format[] formatArray59 = extendedMessageFormat46.getFormats();
        java.lang.String str60 = extendedMessageFormat46.toPattern();
        java.util.Locale locale61 = extendedMessageFormat46.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormat(100, (java.text.Format) extendedMessageFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map32);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        boolean boolean35 = extendedMessageFormat5.equals((java.lang.Object) locale21);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        extendedMessageFormat25.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormats();
        java.lang.String str58 = extendedMessageFormat43.format((java.lang.Object) formatArray57);
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) formatArray57);
        java.text.Format[] formatArray60 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray63 = extendedMessageFormat2.parse("", parsePosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(formatArray60);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object[] objArray51 = null;
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = extendedMessageFormat3.format(objArray51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.lang.Object[] objArray28 = extendedMessageFormat25.parse("hi!");
        java.text.Format[] formatArray29 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Locale locale31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.lang.String str34 = extendedMessageFormat25.format((java.lang.Object) locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale42 = null;
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormats();
        java.lang.String str47 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray46);
        java.lang.String str48 = extendedMessageFormat37.format((java.lang.Object) formatArray46);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        extendedMessageFormat37.setLocale(locale55);
        extendedMessageFormat25.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map66);
        java.lang.String str68 = extendedMessageFormat64.format((java.lang.Object) map66);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator69 = extendedMessageFormat20.formatToCharacterIterator((java.lang.Object) extendedMessageFormat64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNull(locale33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = extendedMessageFormat20.parseObject("hi!", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        java.lang.String str20 = extendedMessageFormat19.toPattern();
        java.text.Format[] formatArray21 = extendedMessageFormat19.getFormats();
        java.lang.String str22 = extendedMessageFormat19.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat19.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map47);
        extendedMessageFormat34.setLocale(locale42);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map50);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat17.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        extendedMessageFormat54.applyPattern("");
        extendedMessageFormat54.applyPattern("hi!");
        java.lang.String str59 = extendedMessageFormat54.toPattern();
        java.text.Format[] formatArray60 = extendedMessageFormat54.getFormats();
        java.util.Locale locale61 = extendedMessageFormat54.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (short) -1, (java.text.Format) extendedMessageFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str5 = extendedMessageFormat3.toPattern();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormats();
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat2.format((java.lang.Object[]) formatArray18, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str11 = extendedMessageFormat3.toPattern();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.text.Format[] formatArray26 = extendedMessageFormat14.getFormats();
        java.lang.Class<?> wildcardClass27 = formatArray26.getClass();
        java.lang.String str28 = extendedMessageFormat3.format((java.lang.Object) formatArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray30 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormats();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.lang.String str27 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray26);
        java.lang.String str28 = extendedMessageFormat17.format((java.lang.Object) formatArray26);
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = extendedMessageFormat12.format((java.lang.Object[]) formatArray26, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        boolean boolean27 = extendedMessageFormat15.equals((java.lang.Object) map25);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = extendedMessageFormat9.format((java.lang.Object) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        extendedMessageFormat45.applyPattern("");
        extendedMessageFormat45.applyPattern("hi!");
        java.lang.Object[] objArray51 = extendedMessageFormat45.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat41.setFormat((-1), (java.text.Format) extendedMessageFormat45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.lang.String str28 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        java.lang.String str29 = extendedMessageFormat18.format((java.lang.Object) formatArray27);
        java.lang.String str30 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        extendedMessageFormat11.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map28);
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat29, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = extendedMessageFormat2.format((java.lang.Object) locale10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat11.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        extendedMessageFormat12.applyPattern("");
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.text.Format[] formatArray27 = extendedMessageFormat24.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator28 = extendedMessageFormat12.formatToCharacterIterator((java.lang.Object) extendedMessageFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        extendedMessageFormat9.applyPattern("");
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        extendedMessageFormat18.applyPattern("hi!");
        java.lang.String str23 = extendedMessageFormat18.toPattern();
        java.lang.String str24 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat18.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.StringBuffer stringBuffer27 = null;
        java.text.FieldPosition fieldPosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer29 = extendedMessageFormat9.format((java.lang.Object[]) formatArray25, stringBuffer27, fieldPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat10.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray33 = extendedMessageFormat10.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        extendedMessageFormat17.applyPattern("hi!");
        extendedMessageFormat17.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = extendedMessageFormat9.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.util.Locale locale87 = extendedMessageFormat6.getLocale();
        java.lang.String str88 = extendedMessageFormat6.toPattern();
        java.lang.Object obj89 = extendedMessageFormat6.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.text.Format format4 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(100, format4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.text.Format[] formatArray35 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.text.Format[] formatArray36 = extendedMessageFormat18.getFormats();
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        extendedMessageFormat41.setLocale(locale47);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        extendedMessageFormat52.applyPattern("");
        java.lang.String str55 = extendedMessageFormat52.toPattern();
        java.text.Format[] formatArray56 = extendedMessageFormat52.getFormats();
        java.text.Format[] formatArray57 = extendedMessageFormat52.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormatsByArgumentIndex(formatArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(formatArray57);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat1.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = extendedMessageFormat44.format((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        extendedMessageFormat3.applyPattern("");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        extendedMessageFormat24.applyPattern("hi!");
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray29 = extendedMessageFormat24.parse("hi!", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        java.lang.Object[] objArray17 = extendedMessageFormat5.parse("hi!");
        java.text.Format[] formatArray18 = extendedMessageFormat5.getFormats();
        java.lang.String str19 = extendedMessageFormat5.toPattern();
        java.util.Locale locale20 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.Object obj23 = extendedMessageFormat22.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        extendedMessageFormat21.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator36 = extendedMessageFormat12.formatToCharacterIterator((java.lang.Object) locale33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        extendedMessageFormat9.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.lang.String str29 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray28);
        java.lang.String str30 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        extendedMessageFormat19.setLocale(locale37);
        extendedMessageFormat14.setLocale(locale37);
        java.util.Locale locale44 = extendedMessageFormat14.getLocale();
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        extendedMessageFormat51.setLocale(locale57);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map61);
        extendedMessageFormat62.applyPattern("");
        java.lang.String str65 = extendedMessageFormat62.toPattern();
        java.util.Locale locale66 = extendedMessageFormat62.getLocale();
        extendedMessageFormat14.setLocale(locale66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        java.text.Format[] formatArray69 = extendedMessageFormat68.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = extendedMessageFormat9.formatToCharacterIterator((java.lang.Object) formatArray69);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        java.lang.String str17 = extendedMessageFormat3.toPattern();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormats();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.text.Format[] formatArray24 = extendedMessageFormat21.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = extendedMessageFormat3.format((java.lang.Object) str25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = extendedMessageFormat15.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale32 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.lang.Object obj35 = extendedMessageFormat1.parseObject("hi!");
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.lang.Object[] objArray43 = extendedMessageFormat40.parse("hi!");
        java.text.Format[] formatArray44 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Locale locale46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.lang.String str49 = extendedMessageFormat40.format((java.lang.Object) locale48);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        extendedMessageFormat52.applyPattern("");
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        java.lang.String str60 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray61 = extendedMessageFormat59.getFormats();
        java.lang.String str62 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray61);
        java.lang.String str63 = extendedMessageFormat52.format((java.lang.Object) formatArray61);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map72);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70);
        extendedMessageFormat52.setLocale(locale70);
        extendedMessageFormat40.setLocale(locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        java.util.Locale locale78 = extendedMessageFormat77.getLocale();
        java.lang.String str79 = extendedMessageFormat77.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat(0, (java.text.Format) extendedMessageFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNull(locale48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale12 = extendedMessageFormat10.getLocale();
        java.lang.Object obj13 = extendedMessageFormat10.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        java.lang.String str16 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat2.parseObject("hi!", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator24 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) str23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.util.Locale locale35 = extendedMessageFormat18.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray37 = extendedMessageFormat18.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.text.Format[] formatArray31 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale32 = extendedMessageFormat18.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.lang.String str36 = extendedMessageFormat35.toPattern();
        java.lang.Object[] objArray38 = extendedMessageFormat35.parse("hi!");
        java.text.Format[] formatArray39 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Locale locale41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        java.lang.String str44 = extendedMessageFormat35.format((java.lang.Object) locale43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        java.lang.String str55 = extendedMessageFormat54.toPattern();
        java.text.Format[] formatArray56 = extendedMessageFormat54.getFormats();
        java.lang.String str57 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray56);
        java.lang.String str58 = extendedMessageFormat47.format((java.lang.Object) formatArray56);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map67);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65);
        extendedMessageFormat47.setLocale(locale65);
        extendedMessageFormat35.setLocale(locale65);
        java.lang.Object obj72 = null;
        java.lang.String str73 = extendedMessageFormat35.format(obj72);
        java.lang.Object obj74 = extendedMessageFormat35.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator75 = extendedMessageFormat18.formatToCharacterIterator((java.lang.Object) extendedMessageFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNull(locale43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        extendedMessageFormat2.applyPattern("");
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map33);
        extendedMessageFormat15.setLocale(locale31);
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat15, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map31);
        extendedMessageFormat18.setLocale(locale26);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map34);
        extendedMessageFormat1.setLocale(locale26);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat15.getFormats();
        java.lang.Class<?> wildcardClass20 = extendedMessageFormat15.getClass();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale7 = extendedMessageFormat1.getLocale();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.lang.String str24 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat14.parse("hi!");
        java.lang.String str27 = extendedMessageFormat14.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat14.setLocale(locale34);
        java.lang.StringBuffer stringBuffer42 = null;
        java.text.FieldPosition fieldPosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer44 = extendedMessageFormat10.format((java.lang.Object) extendedMessageFormat14, stringBuffer42, fieldPosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.Object obj17 = extendedMessageFormat16.clone();
        boolean boolean18 = extendedMessageFormat14.equals((java.lang.Object) extendedMessageFormat16);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        extendedMessageFormat20.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator32 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        extendedMessageFormat66.applyPattern("");
        java.util.Locale locale69 = extendedMessageFormat66.getLocale();
        java.util.Locale locale72 = null;
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map73);
        java.text.Format[] formatArray75 = extendedMessageFormat74.getFormatsByArgumentIndex();
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map81);
        extendedMessageFormat74.setLocale(locale80);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map84);
        extendedMessageFormat66.setLocale(locale80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = extendedMessageFormat3.format((java.lang.Object) locale80);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat36.setFormat((int) 'a', (java.text.Format) extendedMessageFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat24.setLocale(locale36);
        extendedMessageFormat10.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat43.parse("hi!", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.text.Format[] formatArray4 = extendedMessageFormat1.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat1.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.String str43 = extendedMessageFormat1.toPattern();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map71);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale86);
        extendedMessageFormat72.setLocale(locale86);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale86, map89);
        extendedMessageFormat51.setLocale(locale86);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86);
        java.util.Locale locale93 = extendedMessageFormat92.getLocale();
        java.lang.Class<?> wildcardClass94 = locale93.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = extendedMessageFormat1.format((java.lang.Object) wildcardClass94);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.lang.String str14 = extendedMessageFormat4.toPattern();
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        extendedMessageFormat4.setLocale(locale28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray40 = extendedMessageFormat37.parse("hi!", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale32 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.lang.Object obj35 = extendedMessageFormat1.parseObject("hi!");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.lang.Object[] objArray41 = extendedMessageFormat39.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = extendedMessageFormat1.format((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.text.Format[] formatArray8 = extendedMessageFormat6.getFormats();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        extendedMessageFormat6.setLocale(locale19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat34.applyPattern("hi!");
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        extendedMessageFormat39.applyPattern("");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        java.text.Format[] formatArray48 = extendedMessageFormat46.getFormats();
        java.lang.String str49 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.String str50 = extendedMessageFormat39.format((java.lang.Object) formatArray48);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map59);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        extendedMessageFormat39.setLocale(locale57);
        extendedMessageFormat34.setLocale(locale57);
        java.util.Locale locale64 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.text.Format[] formatArray67 = extendedMessageFormat65.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = extendedMessageFormat31.format((java.lang.Object[]) formatArray67, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray67);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.lang.String str16 = extendedMessageFormat6.toPattern();
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map36);
        extendedMessageFormat6.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        java.lang.String str56 = extendedMessageFormat46.toPattern();
        extendedMessageFormat46.applyPattern("hi!");
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map71);
        extendedMessageFormat64.setLocale(locale70);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70, map76);
        extendedMessageFormat46.setLocale(locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        extendedMessageFormat40.setLocale(locale70);
        java.util.Locale locale82 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat85.applyPattern("");
        java.lang.String str88 = extendedMessageFormat85.toPattern();
        java.text.Format[] formatArray89 = extendedMessageFormat85.getFormats();
        java.text.Format[] formatArray90 = extendedMessageFormat85.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat83.setFormats(formatArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(formatArray89);
        org.junit.Assert.assertNotNull(formatArray90);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map32);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormats();
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat2.format((java.lang.Object) formatArray35, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat33.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        extendedMessageFormat48.applyPattern("hi!");
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray53 = extendedMessageFormat48.parse("", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = extendedMessageFormat2.getLocale();
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        boolean boolean28 = extendedMessageFormat2.equals((java.lang.Object) formatArray27);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = extendedMessageFormat3.equals(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.text.Format[] formatArray31 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat42.setLocale(locale54);
        extendedMessageFormat28.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.lang.StringBuffer stringBuffer63 = null;
        java.text.FieldPosition fieldPosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer65 = extendedMessageFormat3.format((java.lang.Object) locale54, stringBuffer63, fieldPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = extendedMessageFormat10.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat43.parse("", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        extendedMessageFormat42.setLocale(locale49);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map57);
        extendedMessageFormat28.setLocale(locale49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray61 = extendedMessageFormat28.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat17.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object obj15 = extendedMessageFormat3.parseObject("hi!");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.lang.String str30 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat20.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormats();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = extendedMessageFormat9.parseObject("hi!", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        extendedMessageFormat70.applyPattern("");
        java.util.Locale locale73 = extendedMessageFormat70.getLocale();
        java.util.Locale locale76 = null;
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map77);
        java.text.Format[] formatArray79 = extendedMessageFormat78.getFormatsByArgumentIndex();
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map82);
        java.util.Locale locale84 = extendedMessageFormat83.getLocale();
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map85);
        extendedMessageFormat78.setLocale(locale84);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map88);
        extendedMessageFormat70.setLocale(locale84);
        extendedMessageFormat10.setLocale(locale84);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale94 = extendedMessageFormat93.getLocale();
        java.lang.Object[] objArray96 = extendedMessageFormat93.parse("hi!");
        java.text.Format[] formatArray97 = extendedMessageFormat93.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale94);
        org.junit.Assert.assertEquals(locale94.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertNotNull(formatArray97);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat15.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = extendedMessageFormat15.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) formatArray16);
        java.lang.Object obj18 = extendedMessageFormat11.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        extendedMessageFormat16.setLocale(locale30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map37);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = extendedMessageFormat38.parseObject("", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.lang.String str8 = extendedMessageFormat5.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.lang.String str10 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray9);
        java.lang.String str11 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray9);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = extendedMessageFormat6.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        extendedMessageFormat14.setLocale(locale21);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.lang.Object obj34 = extendedMessageFormat33.clone();
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.lang.Object[] objArray20 = extendedMessageFormat17.parse("hi!");
        java.text.Format[] formatArray21 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.lang.String str31 = extendedMessageFormat17.format((java.lang.Object) map29);
        java.util.Locale locale32 = extendedMessageFormat17.getLocale();
        java.lang.Object[] objArray34 = extendedMessageFormat17.parse("hi!");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        extendedMessageFormat38.setLocale(locale47);
        java.text.Format[] formatArray49 = extendedMessageFormat38.getFormats();
        java.util.Locale locale50 = extendedMessageFormat38.getLocale();
        extendedMessageFormat17.setLocale(locale50);
        boolean boolean52 = extendedMessageFormat3.equals((java.lang.Object) locale50);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray15 = extendedMessageFormat12.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.lang.String str47 = extendedMessageFormat14.toPattern();
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.lang.String str61 = extendedMessageFormat60.toPattern();
        java.text.Format[] formatArray62 = extendedMessageFormat60.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatsByArgumentIndex(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        java.util.Locale locale33 = extendedMessageFormat2.getLocale();
        java.text.Format[] formatArray34 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.lang.String str35 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray34);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray14 = extendedMessageFormat11.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat15.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.text.Format[] formatArray18 = extendedMessageFormat6.getFormats();
        java.util.Locale locale19 = extendedMessageFormat6.getLocale();
        java.lang.Object obj20 = extendedMessageFormat6.clone();
        boolean boolean21 = extendedMessageFormat2.equals(obj20);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        extendedMessageFormat51.applyPattern("");
        java.lang.String str54 = extendedMessageFormat51.toPattern();
        java.util.Locale locale55 = extendedMessageFormat51.getLocale();
        extendedMessageFormat3.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.text.Format[] formatArray58 = extendedMessageFormat57.getFormats();
        java.lang.String str59 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray58);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        extendedMessageFormat8.setLocale(locale17);
        java.lang.Class<?> wildcardClass19 = extendedMessageFormat8.getClass();
        boolean boolean20 = extendedMessageFormat1.equals((java.lang.Object) wildcardClass19);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        extendedMessageFormat59.setLocale(locale68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        extendedMessageFormat43.setLocale(locale71);
        extendedMessageFormat40.setLocale(locale71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray75 = extendedMessageFormat40.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        extendedMessageFormat7.applyPattern("hi!");
        java.lang.String str12 = extendedMessageFormat7.toPattern();
        java.lang.String str13 = extendedMessageFormat7.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat7.getFormats();
        java.lang.String str15 = extendedMessageFormat1.format((java.lang.Object) formatArray14);
        java.text.Format format17 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (short) 10, format17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str68 = extendedMessageFormat67.toPattern();
        boolean boolean69 = extendedMessageFormat64.equals((java.lang.Object) str68);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.Object[] objArray14 = extendedMessageFormat8.parse("hi!");
        extendedMessageFormat8.applyPattern("");
        java.text.Format[] formatArray17 = extendedMessageFormat8.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) (byte) 1, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator55 = extendedMessageFormat44.formatToCharacterIterator((java.lang.Object) map53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!");
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        java.lang.String str24 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str25 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str26 = java.text.MessageFormat.format("", objArray23);
        java.lang.String str27 = extendedMessageFormat15.format((java.lang.Object) objArray23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormats();
        extendedMessageFormat29.applyPattern("");
        java.text.Format[] formatArray34 = extendedMessageFormat29.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormats(formatArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(formatArray34);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = extendedMessageFormat45.parseObject("", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        extendedMessageFormat23.applyPattern("");
        java.lang.String str26 = extendedMessageFormat23.toPattern();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormats();
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormatsByArgumentIndex();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        extendedMessageFormat54.setLocale(locale60);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60, map66);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        extendedMessageFormat67.setLocale(locale81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81, map86);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81, map88);
        extendedMessageFormat43.setLocale(locale81);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map91);
        java.util.Map map93 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81, map93);
        java.text.Format[] formatArray95 = extendedMessageFormat94.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat23.setFormatsByArgumentIndex(formatArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray95);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        extendedMessageFormat5.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.lang.String str55 = extendedMessageFormat45.toPattern();
        extendedMessageFormat45.applyPattern("hi!");
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        extendedMessageFormat63.setLocale(locale69);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map75);
        extendedMessageFormat45.setLocale(locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        extendedMessageFormat39.setLocale(locale69);
        java.util.Locale locale81 = extendedMessageFormat39.getLocale();
        java.util.Locale locale83 = null;
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale83, map84);
        java.lang.String str86 = extendedMessageFormat85.toPattern();
        java.text.Format[] formatArray87 = extendedMessageFormat85.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat39.setFormats(formatArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(formatArray87);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.text.Format[] formatArray7 = extendedMessageFormat2.getFormatsByArgumentIndex();
        boolean boolean9 = extendedMessageFormat2.equals((java.lang.Object) 10.0d);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale18 = extendedMessageFormat11.getLocale();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = extendedMessageFormat11.parseObject("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat29.setLocale(locale43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map46);
        extendedMessageFormat8.setLocale(locale43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.lang.Object[] objArray54 = extendedMessageFormat51.parse("hi!");
        java.text.Format[] formatArray55 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Locale locale57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.lang.String str60 = extendedMessageFormat51.format((java.lang.Object) locale59);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        extendedMessageFormat63.applyPattern("");
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.lang.String str71 = extendedMessageFormat70.toPattern();
        java.text.Format[] formatArray72 = extendedMessageFormat70.getFormats();
        java.lang.String str73 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.String str74 = extendedMessageFormat63.format((java.lang.Object) formatArray72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        extendedMessageFormat63.setLocale(locale81);
        extendedMessageFormat51.setLocale(locale81);
        extendedMessageFormat8.setLocale(locale81);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map89);
        java.text.Format[] formatArray91 = extendedMessageFormat90.getFormats();
        java.util.Locale locale92 = extendedMessageFormat90.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale92);
        java.text.ParsePosition parsePosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = extendedMessageFormat93.parseObject("", parsePosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNull(locale59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray91);
        org.junit.Assert.assertNotNull(locale92);
        org.junit.Assert.assertEquals(locale92.toString(), "en_US");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat15.applyPattern("");
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat13.format((java.lang.Object) extendedMessageFormat15, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale7 = extendedMessageFormat4.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        java.lang.String str21 = extendedMessageFormat10.format((java.lang.Object) formatArray19);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        extendedMessageFormat10.setLocale(locale29);
        extendedMessageFormat4.setLocale(locale29);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map32);
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.lang.Object[] objArray41 = extendedMessageFormat39.parse("hi!");
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.lang.Object[] objArray47 = extendedMessageFormat44.parse("hi!");
        java.text.Format[] formatArray48 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = extendedMessageFormat39.formatToCharacterIterator((java.lang.Object) formatArray48);
        java.lang.String str50 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray48);
        java.lang.String str51 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray48);
        boolean boolean52 = extendedMessageFormat33.equals((java.lang.Object) formatArray48);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat3.parseObject("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        java.lang.Object[] objArray8 = extendedMessageFormat5.parse("hi!");
        java.text.Format[] formatArray9 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Locale locale11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.lang.String str14 = extendedMessageFormat5.format((java.lang.Object) locale13);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.lang.String str27 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray26);
        java.lang.String str28 = extendedMessageFormat17.format((java.lang.Object) formatArray26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        extendedMessageFormat17.setLocale(locale35);
        extendedMessageFormat5.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map45);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray49 = extendedMessageFormat46.parse("", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNull(locale13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat17.parse("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat24.setLocale(locale36);
        extendedMessageFormat10.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = extendedMessageFormat43.parseObject("", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map28);
        extendedMessageFormat15.setLocale(locale23);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map31);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormats();
        java.lang.String str42 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray41);
        boolean boolean43 = extendedMessageFormat32.equals((java.lang.Object) formatArray41);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.lang.String str29 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray28);
        java.lang.String str30 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        extendedMessageFormat19.setLocale(locale37);
        extendedMessageFormat14.setLocale(locale37);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.lang.Object[] objArray36 = extendedMessageFormat18.parse("hi!");
        java.text.Format[] formatArray37 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass38 = extendedMessageFormat18.getClass();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        extendedMessageFormat12.setLocale(locale24);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        extendedMessageFormat42.applyPattern("");
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.text.Format[] formatArray51 = extendedMessageFormat49.getFormats();
        java.lang.String str52 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        java.lang.String str53 = extendedMessageFormat42.format((java.lang.Object) formatArray51);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map62);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60);
        extendedMessageFormat42.setLocale(locale60);
        extendedMessageFormat37.setLocale(locale60);
        java.util.Locale locale67 = extendedMessageFormat37.getLocale();
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale72 = null;
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map73);
        java.text.Format[] formatArray75 = extendedMessageFormat74.getFormatsByArgumentIndex();
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map81);
        extendedMessageFormat74.setLocale(locale80);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map84);
        extendedMessageFormat85.applyPattern("");
        java.lang.String str88 = extendedMessageFormat85.toPattern();
        java.util.Locale locale89 = extendedMessageFormat85.getLocale();
        extendedMessageFormat37.setLocale(locale89);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale89);
        java.lang.Object obj92 = extendedMessageFormat91.clone();
        java.lang.StringBuffer stringBuffer93 = null;
        java.text.FieldPosition fieldPosition94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer95 = extendedMessageFormat33.format((java.lang.Object) extendedMessageFormat91, stringBuffer93, fieldPosition94);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(locale89);
        org.junit.Assert.assertEquals(locale89.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object obj15 = extendedMessageFormat3.parseObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.text.Format[] formatArray27 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.lang.String str28 = extendedMessageFormat20.format((java.lang.Object) formatArray27);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat(1, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        extendedMessageFormat12.setLocale(locale24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        extendedMessageFormat32.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        java.text.Format[] formatArray41 = extendedMessageFormat39.getFormats();
        java.lang.String str42 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray41);
        java.lang.String str43 = extendedMessageFormat32.format((java.lang.Object) formatArray41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        extendedMessageFormat32.setLocale(locale50);
        extendedMessageFormat12.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat61.applyPattern("hi!");
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        extendedMessageFormat66.applyPattern("");
        java.util.Locale locale71 = null;
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map72);
        java.lang.String str74 = extendedMessageFormat73.toPattern();
        java.text.Format[] formatArray75 = extendedMessageFormat73.getFormats();
        java.lang.String str76 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray75);
        java.lang.String str77 = extendedMessageFormat66.format((java.lang.Object) formatArray75);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map82);
        java.util.Locale locale84 = extendedMessageFormat83.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map86);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84);
        extendedMessageFormat66.setLocale(locale84);
        extendedMessageFormat61.setLocale(locale84);
        java.util.Locale locale91 = extendedMessageFormat61.getLocale();
        java.text.Format[] formatArray92 = extendedMessageFormat61.getFormats();
        java.lang.String str93 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray92);
        java.lang.StringBuffer stringBuffer94 = null;
        java.text.FieldPosition fieldPosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer96 = extendedMessageFormat58.format((java.lang.Object[]) formatArray92, stringBuffer94, fieldPosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormats();
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map48);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        extendedMessageFormat49.setLocale(locale63);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63, map66);
        extendedMessageFormat28.setLocale(locale63);
        java.lang.String str69 = extendedMessageFormat28.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat25.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = extendedMessageFormat44.parseObject("", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat12.parseObject("", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray42 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass43 = formatArray42.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        extendedMessageFormat24.setLocale(locale38);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map41);
        extendedMessageFormat3.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = extendedMessageFormat46.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        extendedMessageFormat11.setLocale(locale32);
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        extendedMessageFormat37.applyPattern("hi!");
        java.text.Format[] formatArray40 = extendedMessageFormat37.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat15.setLocale(locale52);
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        java.lang.String str65 = extendedMessageFormat64.toPattern();
        java.util.Locale locale66 = extendedMessageFormat64.getLocale();
        extendedMessageFormat64.applyPattern("hi!");
        java.lang.Object obj70 = extendedMessageFormat64.parseObject("hi!");
        java.text.Format[] formatArray71 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) formatArray71);
        java.util.Locale locale73 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str76 = extendedMessageFormat75.toPattern();
        java.text.Format[] formatArray77 = extendedMessageFormat75.getFormats();
        extendedMessageFormat75.applyPattern("");
        java.text.Format[] formatArray80 = extendedMessageFormat75.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = extendedMessageFormat15.format((java.lang.Object[]) formatArray80, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(locale66);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(formatArray77);
        org.junit.Assert.assertNotNull(formatArray80);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormats();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.lang.String str28 = extendedMessageFormat27.toPattern();
        java.lang.Object[] objArray30 = extendedMessageFormat27.parse("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Locale locale33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.lang.String str36 = extendedMessageFormat27.format((java.lang.Object) locale35);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        extendedMessageFormat39.applyPattern("");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        java.text.Format[] formatArray48 = extendedMessageFormat46.getFormats();
        java.lang.String str49 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.String str50 = extendedMessageFormat39.format((java.lang.Object) formatArray48);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map59);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        extendedMessageFormat39.setLocale(locale57);
        extendedMessageFormat27.setLocale(locale57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map67);
        java.text.Format[] formatArray69 = extendedMessageFormat68.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = extendedMessageFormat65.formatToCharacterIterator((java.lang.Object) formatArray69);
        java.lang.String str71 = extendedMessageFormat65.toPattern();
        java.text.Format[] formatArray72 = extendedMessageFormat65.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNull(locale35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        extendedMessageFormat39.setLocale(locale51);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map57);
        java.lang.String str59 = extendedMessageFormat58.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.lang.Object obj13 = null;
        boolean boolean14 = extendedMessageFormat11.equals(obj13);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.Object[] objArray59 = extendedMessageFormat56.parse("hi!");
        java.text.Format[] formatArray60 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.lang.Object obj61 = extendedMessageFormat56.clone();
        boolean boolean62 = extendedMessageFormat10.equals(obj61);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        extendedMessageFormat9.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = extendedMessageFormat9.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.util.Locale locale9 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.Object[] objArray14 = extendedMessageFormat11.parse("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat11.getFormatsByArgumentIndex();
        boolean boolean16 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat11);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale14 = extendedMessageFormat12.getLocale();
        extendedMessageFormat12.applyPattern("hi!");
        java.lang.Object obj18 = extendedMessageFormat12.parseObject("hi!");
        java.text.Format[] formatArray19 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.lang.String str20 = extendedMessageFormat12.toPattern();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.text.Format[] formatArray32 = extendedMessageFormat30.getFormats();
        java.lang.String str33 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray32);
        java.lang.String str34 = extendedMessageFormat23.format((java.lang.Object) formatArray32);
        java.text.Format[] formatArray35 = extendedMessageFormat23.getFormats();
        java.lang.Class<?> wildcardClass36 = formatArray35.getClass();
        java.lang.String str37 = extendedMessageFormat12.format((java.lang.Object) formatArray35);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.lang.String str28 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat18.parseObject("", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.lang.Class<?> wildcardClass7 = formatArray6.getClass();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.Object obj2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator3 = extendedMessageFormat1.formatToCharacterIterator(obj2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.util.Locale locale22 = extendedMessageFormat20.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormats();
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat20.format((java.lang.Object[]) formatArray29, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map24);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        extendedMessageFormat41.setLocale(locale47);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map53);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        extendedMessageFormat54.setLocale(locale68);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68, map71);
        extendedMessageFormat33.setLocale(locale68);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map74);
        extendedMessageFormat25.setLocale(locale68);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map77);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormats();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = extendedMessageFormat44.parseObject("", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormats();
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat2.format((java.lang.Object[]) formatArray22, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        extendedMessageFormat3.applyPattern("");
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.String str8 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat3.getFormats();
        java.util.Locale locale10 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatByArgumentIndex(1, (java.text.Format) extendedMessageFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map61);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormats();
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        extendedMessageFormat44.setLocale(locale58);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map61);
        extendedMessageFormat23.setLocale(locale58);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator65 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) locale58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43);
        extendedMessageFormat36.setLocale(locale43);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat20.setLocale(locale43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray58 = extendedMessageFormat57.getFormatsByArgumentIndex();
        java.lang.String str59 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray58);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        extendedMessageFormat1.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat1.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat11.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.lang.String str11 = extendedMessageFormat2.toPattern();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormats();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.text.Format[] formatArray32 = extendedMessageFormat30.getFormats();
        java.lang.String str33 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray32);
        java.lang.String str34 = extendedMessageFormat23.format((java.lang.Object) formatArray32);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41);
        extendedMessageFormat23.setLocale(locale41);
        extendedMessageFormat19.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map58);
        java.lang.String str60 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray61 = extendedMessageFormat59.getFormats();
        java.text.Format[] formatArray62 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        java.lang.String str74 = extendedMessageFormat73.toPattern();
        java.util.Locale locale77 = null;
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77, map78);
        java.text.Format[] formatArray80 = extendedMessageFormat79.getFormatsByArgumentIndex();
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map83);
        java.util.Locale locale85 = extendedMessageFormat84.getLocale();
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85, map86);
        extendedMessageFormat79.setLocale(locale85);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85);
        extendedMessageFormat73.setLocale(locale85);
        extendedMessageFormat59.setLocale(locale85);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat48.setFormat((int) 'a', (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(formatArray80);
        org.junit.Assert.assertNotNull(locale85);
        org.junit.Assert.assertEquals(locale85.toString(), "en_US");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.lang.Object[] objArray53 = extendedMessageFormat50.parse("hi!");
        java.text.Format[] formatArray54 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Locale locale56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.lang.String str59 = extendedMessageFormat50.format((java.lang.Object) locale58);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        extendedMessageFormat62.applyPattern("");
        java.util.Locale locale67 = null;
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        java.lang.String str70 = extendedMessageFormat69.toPattern();
        java.text.Format[] formatArray71 = extendedMessageFormat69.getFormats();
        java.lang.String str72 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray71);
        java.lang.String str73 = extendedMessageFormat62.format((java.lang.Object) formatArray71);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80);
        extendedMessageFormat62.setLocale(locale80);
        extendedMessageFormat50.setLocale(locale80);
        extendedMessageFormat7.setLocale(locale80);
        java.util.Locale locale88 = extendedMessageFormat7.getLocale();
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map89);
        java.text.Format[] formatArray91 = extendedMessageFormat90.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = extendedMessageFormat90.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNull(locale58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray91);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        java.lang.String str17 = extendedMessageFormat3.toPattern();
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.lang.String str19 = extendedMessageFormat3.toPattern();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat3.format((java.lang.Object[]) formatArray29, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map24);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        extendedMessageFormat3.setLocale(locale27);
        java.text.Format[] formatArray36 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object obj37 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        extendedMessageFormat45.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (short) 100, (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale32 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41);
        java.lang.String str46 = extendedMessageFormat45.toPattern();
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        extendedMessageFormat51.setLocale(locale57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        extendedMessageFormat45.setLocale(locale57);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        extendedMessageFormat65.applyPattern("");
        java.util.Locale locale70 = null;
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map71);
        java.lang.String str73 = extendedMessageFormat72.toPattern();
        java.text.Format[] formatArray74 = extendedMessageFormat72.getFormats();
        java.lang.String str75 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray74);
        java.lang.String str76 = extendedMessageFormat65.format((java.lang.Object) formatArray74);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map81);
        java.util.Locale locale83 = extendedMessageFormat82.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale83, map85);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale83);
        extendedMessageFormat65.setLocale(locale83);
        extendedMessageFormat45.setLocale(locale83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale83);
        boolean boolean91 = extendedMessageFormat1.equals((java.lang.Object) "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(formatArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(locale83);
        org.junit.Assert.assertEquals(locale83.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        extendedMessageFormat4.applyPattern("");
        extendedMessageFormat4.applyPattern("hi!");
        java.lang.String str9 = extendedMessageFormat4.toPattern();
        java.text.Format[] formatArray10 = extendedMessageFormat4.getFormats();
        java.util.Locale locale11 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat24.setLocale(locale36);
        extendedMessageFormat10.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat43.setFormat((int) '4', (java.text.Format) extendedMessageFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray55);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale6 = extendedMessageFormat2.getLocale();
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.lang.String str14 = extendedMessageFormat11.toPattern();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat11, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Locale locale43 = extendedMessageFormat1.getLocale();
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        extendedMessageFormat51.setLocale(locale57);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map63);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map70);
        java.util.Locale locale72 = extendedMessageFormat71.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map76);
        java.util.Locale locale78 = extendedMessageFormat77.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale78);
        extendedMessageFormat64.setLocale(locale78);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale78);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale78);
        java.util.Locale locale83 = extendedMessageFormat82.getLocale();
        java.text.Format[] formatArray84 = extendedMessageFormat82.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator85 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) extendedMessageFormat82);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale83);
        org.junit.Assert.assertEquals(locale83.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray84);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.lang.Object[] objArray13 = extendedMessageFormat11.parse("hi!");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.lang.String str33 = extendedMessageFormat11.format((java.lang.Object) map31);
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map44);
        extendedMessageFormat37.setLocale(locale43);
        java.lang.String str47 = extendedMessageFormat37.toPattern();
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map67);
        extendedMessageFormat37.setLocale(locale61);
        extendedMessageFormat11.setLocale(locale61);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map79);
        extendedMessageFormat11.setLocale(locale76);
        extendedMessageFormat3.setLocale(locale76);
        java.text.ParsePosition parsePosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = extendedMessageFormat3.parseObject("hi!", parsePosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat36.parseObject("hi!", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.text.Format[] formatArray47 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Locale locale48 = extendedMessageFormat45.getLocale();
        java.lang.Object obj49 = extendedMessageFormat45.clone();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = extendedMessageFormat40.format((java.lang.Object) extendedMessageFormat45, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNull(locale48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.lang.String str38 = extendedMessageFormat28.toPattern();
        java.lang.Object[] objArray40 = extendedMessageFormat28.parse("hi!");
        java.text.Format[] formatArray41 = extendedMessageFormat28.getFormats();
        java.lang.String str42 = extendedMessageFormat24.format((java.lang.Object) formatArray41);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatsByArgumentIndex(formatArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.util.Locale locale87 = extendedMessageFormat6.getLocale();
        java.lang.String str88 = extendedMessageFormat6.toPattern();
        extendedMessageFormat6.applyPattern("hi!");
        java.lang.Object obj91 = extendedMessageFormat6.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        java.lang.Object[] objArray8 = extendedMessageFormat5.parse("hi!");
        java.text.Format[] formatArray9 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Locale locale11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.lang.String str14 = extendedMessageFormat5.format((java.lang.Object) locale13);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.lang.String str27 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray26);
        java.lang.String str28 = extendedMessageFormat17.format((java.lang.Object) formatArray26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        extendedMessageFormat17.setLocale(locale35);
        extendedMessageFormat5.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map44);
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map67);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        extendedMessageFormat68.setLocale(locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82);
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82, map87);
        java.util.Locale locale89 = extendedMessageFormat88.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat45.setFormat((int) '#', (java.text.Format) extendedMessageFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNull(locale13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale89);
        org.junit.Assert.assertEquals(locale89.toString(), "en_US");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        extendedMessageFormat50.applyPattern("");
        java.lang.String str53 = extendedMessageFormat50.toPattern();
        java.util.Locale locale54 = extendedMessageFormat50.getLocale();
        extendedMessageFormat2.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = extendedMessageFormat56.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        extendedMessageFormat49.applyPattern("");
        java.lang.String str52 = extendedMessageFormat49.toPattern();
        java.util.Locale locale53 = extendedMessageFormat49.getLocale();
        extendedMessageFormat1.setLocale(locale53);
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.lang.Object[] objArray62 = extendedMessageFormat60.parse("hi!");
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68, map69);
        java.text.Format[] formatArray71 = extendedMessageFormat70.getFormatsByArgumentIndex();
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map77);
        extendedMessageFormat70.setLocale(locale76);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map85);
        extendedMessageFormat60.setLocale(locale76);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map88);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat89);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        extendedMessageFormat27.applyPattern("hi!");
        java.text.Format[] formatArray46 = extendedMessageFormat27.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.text.Format[] formatArray62 = extendedMessageFormat60.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormatsByArgumentIndex(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj32 = extendedMessageFormat1.parseObject("hi!");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        extendedMessageFormat39.applyPattern("");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        java.text.Format[] formatArray48 = extendedMessageFormat46.getFormats();
        java.lang.String str49 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.String str50 = extendedMessageFormat39.format((java.lang.Object) formatArray48);
        java.lang.String str51 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.String str52 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = extendedMessageFormat1.format((java.lang.Object) str52, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        extendedMessageFormat70.applyPattern("");
        java.util.Locale locale73 = extendedMessageFormat70.getLocale();
        java.util.Locale locale76 = null;
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map77);
        java.text.Format[] formatArray79 = extendedMessageFormat78.getFormatsByArgumentIndex();
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map82);
        java.util.Locale locale84 = extendedMessageFormat83.getLocale();
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map85);
        extendedMessageFormat78.setLocale(locale84);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map88);
        extendedMessageFormat70.setLocale(locale84);
        extendedMessageFormat10.setLocale(locale84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray93 = extendedMessageFormat10.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.lang.String str20 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.text.Format[] formatArray23 = extendedMessageFormat10.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = extendedMessageFormat10.parseObject("", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray42 = extendedMessageFormat38.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = extendedMessageFormat38.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map76);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74);
        java.lang.StringBuffer stringBuffer79 = null;
        java.text.FieldPosition fieldPosition80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer81 = extendedMessageFormat67.format((java.lang.Object) extendedMessageFormat78, stringBuffer79, fieldPosition80);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat38.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map68);
        java.text.Format[] formatArray70 = extendedMessageFormat69.getFormats();
        java.lang.String str71 = extendedMessageFormat56.format((java.lang.Object) formatArray70);
        java.text.Format[] formatArray72 = extendedMessageFormat56.getFormats();
        java.lang.Class<?> wildcardClass73 = extendedMessageFormat56.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator74 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) wildcardClass73);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator8 = extendedMessageFormat3.formatToCharacterIterator(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.lang.Object obj12 = extendedMessageFormat10.parseObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray14 = extendedMessageFormat10.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat1.getFormats();
        java.lang.Class<?> wildcardClass8 = formatArray7.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.lang.String str68 = extendedMessageFormat67.toPattern();
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.lang.String str47 = extendedMessageFormat14.toPattern();
        extendedMessageFormat14.applyPattern("hi!");
        java.text.Format[] formatArray50 = extendedMessageFormat14.getFormatsByArgumentIndex();
        extendedMessageFormat14.applyPattern("hi!");
        java.text.ParsePosition parsePosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = extendedMessageFormat14.parseObject("hi!", parsePosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.lang.Object[] objArray24 = extendedMessageFormat22.parse("hi!");
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.lang.String str28 = extendedMessageFormat27.toPattern();
        java.lang.Object[] objArray30 = extendedMessageFormat27.parse("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = extendedMessageFormat22.formatToCharacterIterator((java.lang.Object) formatArray31);
        java.util.Locale locale33 = extendedMessageFormat22.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        extendedMessageFormat36.applyPattern("hi!");
        java.lang.String str41 = extendedMessageFormat36.toPattern();
        java.lang.String str42 = extendedMessageFormat36.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat36.getFormats();
        java.lang.String str44 = extendedMessageFormat22.format((java.lang.Object) formatArray43);
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = extendedMessageFormat15.format((java.lang.Object[]) formatArray43, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNull(locale33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat9.setLocale(locale44);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.lang.String str53 = extendedMessageFormat52.toPattern();
        java.lang.Object[] objArray55 = extendedMessageFormat52.parse("hi!");
        java.text.Format[] formatArray56 = extendedMessageFormat52.getFormatsByArgumentIndex();
        java.util.Locale locale58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.lang.String str61 = extendedMessageFormat52.format((java.lang.Object) locale60);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        extendedMessageFormat64.applyPattern("");
        java.util.Locale locale69 = null;
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        java.lang.String str72 = extendedMessageFormat71.toPattern();
        java.text.Format[] formatArray73 = extendedMessageFormat71.getFormats();
        java.lang.String str74 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray73);
        java.lang.String str75 = extendedMessageFormat64.format((java.lang.Object) formatArray73);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map84);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82);
        extendedMessageFormat64.setLocale(locale82);
        extendedMessageFormat52.setLocale(locale82);
        extendedMessageFormat9.setLocale(locale82);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map90);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map93 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map93);
        java.lang.Object obj95 = extendedMessageFormat94.clone();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNull(locale60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(formatArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        java.lang.Class<?> wildcardClass23 = extendedMessageFormat3.getClass();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.text.Format[] formatArray17 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat14.parseObject("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.Object obj39 = extendedMessageFormat38.clone();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.lang.String str20 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map40);
        extendedMessageFormat10.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map49);
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map57);
        extendedMessageFormat50.setLocale(locale56);
        java.lang.String str60 = extendedMessageFormat50.toPattern();
        extendedMessageFormat50.applyPattern("hi!");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map67);
        java.text.Format[] formatArray69 = extendedMessageFormat68.getFormatsByArgumentIndex();
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map75);
        extendedMessageFormat68.setLocale(locale74);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74, map80);
        extendedMessageFormat50.setLocale(locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat44.setLocale(locale74);
        java.util.Locale locale86 = extendedMessageFormat44.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray23 = extendedMessageFormat20.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map13);
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Locale locale17 = extendedMessageFormat14.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map20);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormats();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.text.Format[] formatArray28 = extendedMessageFormat25.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatsByArgumentIndex(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        extendedMessageFormat3.applyPattern("");
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.String str8 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat3.getFormats();
        java.util.Locale locale10 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat11.format((java.lang.Object[]) formatArray17, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.lang.Object[] objArray13 = extendedMessageFormat11.parse("hi!");
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.lang.Object[] objArray19 = extendedMessageFormat16.parse("hi!");
        java.text.Format[] formatArray20 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) formatArray20);
        java.util.Locale locale22 = extendedMessageFormat11.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNull(locale22);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = extendedMessageFormat26.formatToCharacterIterator((java.lang.Object) formatArray31);
        boolean boolean33 = extendedMessageFormat2.equals((java.lang.Object) formatArray31);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat11.setLocale(locale34);
        java.util.Locale locale41 = extendedMessageFormat11.getLocale();
        extendedMessageFormat11.applyPattern("");
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        extendedMessageFormat59.applyPattern("");
        java.lang.String str62 = extendedMessageFormat59.toPattern();
        java.util.Locale locale63 = extendedMessageFormat59.getLocale();
        extendedMessageFormat11.setLocale(locale63);
        boolean boolean65 = extendedMessageFormat9.equals((java.lang.Object) locale63);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat23.setLocale(locale35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61);
        extendedMessageFormat43.setLocale(locale61);
        extendedMessageFormat23.setLocale(locale61);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61);
        java.text.Format[] formatArray69 = extendedMessageFormat68.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray69);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormats();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray20);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat5.setFormatsByArgumentIndex(formatArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map15);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormats();
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        extendedMessageFormat41.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map62);
        extendedMessageFormat17.setLocale(locale55);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map67);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.text.ParsePosition parsePosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray72 = extendedMessageFormat69.parse("", parsePosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map45);
        java.lang.String str47 = extendedMessageFormat43.format((java.lang.Object) map45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormats();
        java.util.Locale locale56 = null;
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map57);
        java.text.Format[] formatArray59 = extendedMessageFormat58.getFormatsByArgumentIndex();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map65);
        extendedMessageFormat58.setLocale(locale64);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64, map70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map83);
        java.util.Locale locale85 = extendedMessageFormat84.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85);
        extendedMessageFormat71.setLocale(locale85);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85, map88);
        extendedMessageFormat50.setLocale(locale85);
        java.util.Locale locale91 = extendedMessageFormat50.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale91);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = extendedMessageFormat43.format((java.lang.Object) extendedMessageFormat92);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale85);
        org.junit.Assert.assertEquals(locale85.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "en_US");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.lang.String str25 = extendedMessageFormat19.format((java.lang.Object) formatArray24);
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        extendedMessageFormat12.setLocale(locale21);
        java.text.Format[] formatArray23 = extendedMessageFormat12.getFormats();
        extendedMessageFormat12.applyPattern("hi!");
        java.util.Locale locale26 = extendedMessageFormat12.getLocale();
        java.text.Format[] formatArray27 = extendedMessageFormat12.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray8 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray18 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Locale locale20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.lang.String str23 = extendedMessageFormat14.format((java.lang.Object) locale22);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        extendedMessageFormat26.applyPattern("");
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.text.Format[] formatArray35 = extendedMessageFormat33.getFormats();
        java.lang.String str36 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray35);
        java.lang.String str37 = extendedMessageFormat26.format((java.lang.Object) formatArray35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        extendedMessageFormat26.setLocale(locale44);
        extendedMessageFormat14.setLocale(locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map54);
        extendedMessageFormat3.setLocale(locale44);
        java.util.Locale locale59 = null;
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map60);
        java.lang.String str62 = extendedMessageFormat61.toPattern();
        java.util.Locale locale63 = extendedMessageFormat61.getLocale();
        extendedMessageFormat61.applyPattern("hi!");
        java.lang.Object obj67 = extendedMessageFormat61.parseObject("hi!");
        extendedMessageFormat61.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (byte) 0, (java.text.Format) extendedMessageFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNull(locale22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(locale63);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.text.Format[] formatArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormats(formatArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat36.parseObject("", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat38.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray60 = extendedMessageFormat38.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat9.setLocale(locale28);
        extendedMessageFormat3.setLocale(locale28);
        extendedMessageFormat3.applyPattern("");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.lang.String str30 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat20.getFormats();
        java.lang.StringBuffer stringBuffer32 = null;
        java.text.FieldPosition fieldPosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer34 = extendedMessageFormat15.format((java.lang.Object[]) formatArray31, stringBuffer32, fieldPosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map27);
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat34.setLocale(locale40);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        extendedMessageFormat45.applyPattern("");
        java.util.Locale locale48 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator50 = extendedMessageFormat28.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormats();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        extendedMessageFormat33.setLocale(locale39);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        extendedMessageFormat46.setLocale(locale60);
        java.util.Locale locale63 = extendedMessageFormat46.getLocale();
        extendedMessageFormat27.setLocale(locale63);
        java.text.Format[] formatArray65 = extendedMessageFormat27.getFormats();
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = extendedMessageFormat5.format((java.lang.Object) formatArray65, stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray65);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        extendedMessageFormat28.applyPattern("hi!");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormats();
        java.lang.Class<?> wildcardClass15 = formatArray14.getClass();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        extendedMessageFormat20.applyPattern("");
        extendedMessageFormat20.applyPattern("hi!");
        java.lang.Object[] objArray26 = extendedMessageFormat20.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator27 = extendedMessageFormat14.formatToCharacterIterator((java.lang.Object) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map16);
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.lang.Object[] objArray25 = extendedMessageFormat23.parse("hi!");
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.lang.Object[] objArray31 = extendedMessageFormat28.parse("hi!");
        java.text.Format[] formatArray32 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = extendedMessageFormat23.formatToCharacterIterator((java.lang.Object) formatArray32);
        java.lang.String str34 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray32);
        java.lang.String str35 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray32);
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat17.format((java.lang.Object[]) formatArray32, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormats();
        extendedMessageFormat23.applyPattern("");
        java.text.Format[] formatArray30 = extendedMessageFormat23.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormats(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray30);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.text.Format[] formatArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat11.parseObject("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.text.Format[] formatArray27 = extendedMessageFormat6.getFormats();
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray30 = extendedMessageFormat6.parse("hi!", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.lang.Object[] objArray3 = new java.lang.Object[] {};
        java.lang.String str4 = java.text.MessageFormat.format("hi!", objArray3);
        java.lang.String str5 = java.text.MessageFormat.format("hi!", objArray3);
        java.lang.String str6 = java.text.MessageFormat.format("hi!", objArray3);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormats();
        java.lang.String str15 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray14);
        java.lang.String str16 = extendedMessageFormat5.format((java.lang.Object) formatArray14);
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray14);
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray14);
        java.lang.String str19 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray14);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.util.Locale locale10 = extendedMessageFormat8.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray12 = extendedMessageFormat8.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.text.Format[] formatArray19 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.lang.String str20 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray19);
        boolean boolean21 = extendedMessageFormat3.equals((java.lang.Object) str20);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat3.setLocale(locale26);
        java.text.Format[] formatArray30 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray31 = extendedMessageFormat3.getFormats();
        java.lang.Object obj32 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat3.parse("hi!", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.lang.String str24 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat14.getFormats();
        java.lang.String str28 = extendedMessageFormat10.format((java.lang.Object) formatArray27);
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray31 = extendedMessageFormat10.parse("", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.text.Format[] formatArray35 = extendedMessageFormat18.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormats();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormats(formatArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        extendedMessageFormat3.applyPattern("");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.String str13 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        java.lang.String str14 = extendedMessageFormat3.format((java.lang.Object) formatArray12);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat19.setLocale(locale28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        extendedMessageFormat3.setLocale(locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray36 = extendedMessageFormat34.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat13.setLocale(locale20);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        extendedMessageFormat34.applyPattern("hi!");
        extendedMessageFormat34.applyPattern("");
        java.text.Format[] formatArray41 = extendedMessageFormat34.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = extendedMessageFormat30.format((java.lang.Object) extendedMessageFormat34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        extendedMessageFormat12.setLocale(locale24);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.lang.Object[] objArray40 = extendedMessageFormat37.parse("hi!");
        java.text.Format[] formatArray41 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.util.Locale locale43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.lang.String str46 = extendedMessageFormat37.format((java.lang.Object) locale45);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        extendedMessageFormat49.applyPattern("");
        java.util.Locale locale54 = null;
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat56.getFormats();
        java.lang.String str59 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray58);
        java.lang.String str60 = extendedMessageFormat49.format((java.lang.Object) formatArray58);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67);
        extendedMessageFormat49.setLocale(locale67);
        extendedMessageFormat37.setLocale(locale67);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        java.lang.String str75 = extendedMessageFormat74.toPattern();
        java.text.Format[] formatArray76 = extendedMessageFormat74.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormatsByArgumentIndex(formatArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNull(locale45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(formatArray76);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.text.Format[] formatArray17 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatsByArgumentIndex(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map38);
        extendedMessageFormat20.setLocale(locale36);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.lang.Object obj57 = extendedMessageFormat55.parseObject("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = extendedMessageFormat20.formatToCharacterIterator(obj57);
        java.text.Format[] formatArray59 = extendedMessageFormat20.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex(1, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(formatArray59);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        java.text.Format[] formatArray37 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        java.lang.Object[] objArray49 = extendedMessageFormat46.parse("hi!");
        java.text.Format[] formatArray50 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Locale locale52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.lang.String str55 = extendedMessageFormat46.format((java.lang.Object) locale54);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        extendedMessageFormat58.applyPattern("");
        java.util.Locale locale63 = null;
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.lang.String str66 = extendedMessageFormat65.toPattern();
        java.text.Format[] formatArray67 = extendedMessageFormat65.getFormats();
        java.lang.String str68 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray67);
        java.lang.String str69 = extendedMessageFormat58.format((java.lang.Object) formatArray67);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map78);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76);
        extendedMessageFormat58.setLocale(locale76);
        extendedMessageFormat46.setLocale(locale76);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map85);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map88);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76);
        java.lang.StringBuffer stringBuffer91 = null;
        java.text.FieldPosition fieldPosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer93 = extendedMessageFormat18.format((java.lang.Object) extendedMessageFormat90, stringBuffer91, fieldPosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNull(locale54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(formatArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.text.Format[] formatArray27 = extendedMessageFormat6.getFormats();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormat((int) (short) 10, (java.text.Format) extendedMessageFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.lang.String str16 = extendedMessageFormat6.toPattern();
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map36);
        extendedMessageFormat6.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        java.lang.String str56 = extendedMessageFormat46.toPattern();
        extendedMessageFormat46.applyPattern("hi!");
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map71);
        extendedMessageFormat64.setLocale(locale70);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70, map76);
        extendedMessageFormat46.setLocale(locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        extendedMessageFormat40.setLocale(locale70);
        java.util.Locale locale82 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map88);
        java.util.Locale locale90 = extendedMessageFormat89.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale90);
        java.util.Map map92 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale90, map92);
        java.util.Map map94 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat95 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale90, map94);
        java.text.Format[] formatArray96 = extendedMessageFormat95.getFormats();
        java.text.Format[] formatArray97 = extendedMessageFormat95.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat83.setFormatsByArgumentIndex(formatArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale90);
        org.junit.Assert.assertEquals(locale90.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray96);
        org.junit.Assert.assertNotNull(formatArray97);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat20.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.lang.Object obj43 = extendedMessageFormat41.parseObject("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = extendedMessageFormat6.formatToCharacterIterator(obj43);
        java.text.Format[] formatArray45 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        extendedMessageFormat60.setLocale(locale66);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map85);
        java.util.Locale locale87 = extendedMessageFormat86.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        extendedMessageFormat73.setLocale(locale87);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87, map90);
        extendedMessageFormat52.setLocale(locale87);
        java.text.Format[] formatArray93 = extendedMessageFormat52.getFormats();
        java.lang.String str94 = extendedMessageFormat6.format((java.lang.Object) formatArray93);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale5 = extendedMessageFormat2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.lang.Object obj44 = extendedMessageFormat41.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator45 = extendedMessageFormat37.formatToCharacterIterator((java.lang.Object) extendedMessageFormat41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        extendedMessageFormat18.applyPattern("");
        java.util.Locale locale21 = extendedMessageFormat18.getLocale();
        extendedMessageFormat18.applyPattern("");
        java.text.Format[] formatArray24 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale25 = extendedMessageFormat18.getLocale();
        extendedMessageFormat1.setLocale(locale25);
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = extendedMessageFormat1.parseObject("hi!", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat15.parse("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.lang.String str14 = extendedMessageFormat12.toPattern();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map27);
        extendedMessageFormat14.setLocale(locale22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray31 = extendedMessageFormat14.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Locale locale14 = null;
        extendedMessageFormat11.setLocale(locale14);
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat6.format((java.lang.Object[]) formatArray17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.lang.Object obj68 = extendedMessageFormat67.clone();
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Locale locale29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.lang.String str32 = extendedMessageFormat23.format((java.lang.Object) locale31);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        extendedMessageFormat35.applyPattern("");
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        java.text.Format[] formatArray44 = extendedMessageFormat42.getFormats();
        java.lang.String str45 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray44);
        java.lang.String str46 = extendedMessageFormat35.format((java.lang.Object) formatArray44);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        extendedMessageFormat35.setLocale(locale53);
        extendedMessageFormat23.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        extendedMessageFormat16.setLocale(locale61);
        java.util.Locale locale64 = extendedMessageFormat16.getLocale();
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = extendedMessageFormat1.format((java.lang.Object) locale64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = extendedMessageFormat38.format((java.lang.Object[]) formatArray52, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale7 = extendedMessageFormat4.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        java.lang.String str21 = extendedMessageFormat10.format((java.lang.Object) formatArray19);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        extendedMessageFormat10.setLocale(locale29);
        extendedMessageFormat4.setLocale(locale29);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map32);
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map41);
        java.text.Format[] formatArray43 = extendedMessageFormat42.getFormatsByArgumentIndex();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        extendedMessageFormat42.setLocale(locale48);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map54);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        extendedMessageFormat55.setLocale(locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = extendedMessageFormat33.format((java.lang.Object) locale76);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        extendedMessageFormat16.applyPattern("hi!");
        java.lang.Object[] objArray22 = extendedMessageFormat16.parse("hi!");
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat3.format((java.lang.Object) objArray22, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat51.applyPattern("");
        java.lang.String str54 = extendedMessageFormat51.toPattern();
        java.text.Format[] formatArray55 = extendedMessageFormat51.getFormats();
        java.lang.String str56 = extendedMessageFormat51.toPattern();
        extendedMessageFormat51.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map43);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = extendedMessageFormat44.format((java.lang.Object) extendedMessageFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat13.setLocale(locale20);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat30.setFormatsByArgumentIndex(formatArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray42 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = extendedMessageFormat38.parseObject("", parsePosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale17 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray18 = extendedMessageFormat3.getFormats();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.text.Format[] formatArray35 = extendedMessageFormat33.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        extendedMessageFormat15.setLocale(locale29);
        extendedMessageFormat15.applyPattern("");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Locale locale43 = extendedMessageFormat1.getLocale();
        java.util.Locale locale44 = extendedMessageFormat1.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat1.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        extendedMessageFormat2.setLocale(locale21);
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.lang.Object[] objArray28 = extendedMessageFormat26.parse("hi!");
        java.text.Format[] formatArray29 = extendedMessageFormat26.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(formatArray29);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray17 = extendedMessageFormat3.parse("hi!", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.lang.Object[] objArray10 = extendedMessageFormat8.parse("hi!");
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.lang.Object[] objArray16 = extendedMessageFormat13.parse("hi!");
        java.text.Format[] formatArray17 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = extendedMessageFormat8.formatToCharacterIterator((java.lang.Object) formatArray17);
        extendedMessageFormat8.applyPattern("");
        java.text.Format[] formatArray21 = extendedMessageFormat8.getFormats();
        java.lang.String str22 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray21);
        java.lang.String str23 = extendedMessageFormat2.format((java.lang.Object) formatArray21);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = extendedMessageFormat2.parseObject("hi!", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Locale locale9 = extendedMessageFormat6.getLocale();
        java.text.Format[] formatArray10 = extendedMessageFormat6.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat3.parseObject("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat6.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map29);
        extendedMessageFormat2.setLocale(locale18);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map32);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        extendedMessageFormat38.setLocale(locale47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47);
        extendedMessageFormat49.applyPattern("hi!");
        boolean boolean52 = extendedMessageFormat33.equals((java.lang.Object) extendedMessageFormat49);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat1.getFormats();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.lang.String str15 = extendedMessageFormat10.format((java.lang.Object) locale12);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        extendedMessageFormat18.applyPattern("hi!");
        java.lang.Object[] objArray24 = extendedMessageFormat18.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) objArray24);
        boolean boolean26 = extendedMessageFormat1.equals((java.lang.Object) attributedCharacterIterator25);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale2, map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.util.Locale locale6 = extendedMessageFormat4.getLocale();
        extendedMessageFormat4.applyPattern("hi!");
        java.lang.Object obj10 = extendedMessageFormat4.parseObject("hi!");
        java.text.Format[] formatArray11 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.lang.String str12 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray11);
        java.lang.Class<?> wildcardClass13 = formatArray11.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray45 = extendedMessageFormat43.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.text.Format[] formatArray68 = extendedMessageFormat67.getFormats();
        java.lang.Class<?> wildcardClass69 = formatArray68.getClass();
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat32.parse("", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        extendedMessageFormat12.applyPattern("hi!");
        java.util.Locale locale16 = extendedMessageFormat12.getLocale();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat12.parse("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23);
        java.lang.String str32 = extendedMessageFormat31.toPattern();
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.text.Format[] formatArray38 = extendedMessageFormat36.getFormats();
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        extendedMessageFormat36.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map60);
        extendedMessageFormat36.setLocale(locale59);
        extendedMessageFormat31.setLocale(locale59);
        extendedMessageFormat3.setLocale(locale59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray66 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format format51 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(0, format51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray42 = extendedMessageFormat39.parse("hi!", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.lang.Object obj3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator4 = extendedMessageFormat1.formatToCharacterIterator(obj3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale18 = extendedMessageFormat11.getLocale();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray21 = extendedMessageFormat11.parse("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        extendedMessageFormat3.setLocale(locale27);
        java.text.Format[] formatArray36 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map55);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        extendedMessageFormat56.setLocale(locale70);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70, map73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        extendedMessageFormat18.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (short) 10, (java.text.Format) extendedMessageFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        boolean boolean58 = extendedMessageFormat37.equals((java.lang.Object) formatArray57);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.Class<?> wildcardClass21 = locale12.getClass();
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat1.parse("hi!", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray34 = extendedMessageFormat3.getFormats();
        java.lang.String str35 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray34);
        java.lang.String str36 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray34);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.lang.String str16 = extendedMessageFormat6.toPattern();
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map36);
        extendedMessageFormat6.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        java.lang.String str56 = extendedMessageFormat46.toPattern();
        extendedMessageFormat46.applyPattern("hi!");
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map71);
        extendedMessageFormat64.setLocale(locale70);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70, map76);
        extendedMessageFormat46.setLocale(locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        extendedMessageFormat40.setLocale(locale70);
        java.util.Locale locale82 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str86 = extendedMessageFormat85.toPattern();
        java.text.Format[] formatArray87 = extendedMessageFormat85.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat83.setFormatsByArgumentIndex(formatArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(formatArray87);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.lang.Class<?> wildcardClass45 = extendedMessageFormat44.getClass();
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23);
        extendedMessageFormat3.setLocale(locale23);
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat13.setLocale(locale34);
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.lang.String str50 = extendedMessageFormat40.toPattern();
        extendedMessageFormat40.applyPattern("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat40.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = extendedMessageFormat13.format((java.lang.Object) extendedMessageFormat40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(formatArray53);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.util.Locale locale26 = extendedMessageFormat24.getLocale();
        extendedMessageFormat24.applyPattern("hi!");
        java.lang.Object obj30 = extendedMessageFormat24.parseObject("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat24.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat41.setLocale(locale48);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map56);
        java.util.Locale locale58 = null;
        extendedMessageFormat57.setLocale(locale58);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator60 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) extendedMessageFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.lang.Object[] objArray48 = extendedMessageFormat30.parse("hi!");
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = extendedMessageFormat2.format(objArray48, stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.util.Locale locale3 = extendedMessageFormat1.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat5.applyPattern("");
        java.lang.String str8 = extendedMessageFormat5.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat5.getFormats();
        java.lang.String str10 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("");
        java.lang.String str13 = extendedMessageFormat5.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat15.applyPattern("");
        java.text.Format[] formatArray18 = extendedMessageFormat15.getFormats();
        java.lang.String str19 = extendedMessageFormat5.format((java.lang.Object) formatArray18);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        extendedMessageFormat3.applyPattern("");
        java.util.Locale locale16 = extendedMessageFormat3.getLocale();
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.lang.Object[] objArray22 = extendedMessageFormat20.parse("hi!");
        java.text.Format[] formatArray23 = extendedMessageFormat20.getFormats();
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(formatArray24);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.lang.String str5 = extendedMessageFormat2.toPattern();
        extendedMessageFormat2.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat10.setLocale(locale33);
        java.util.Locale locale40 = extendedMessageFormat10.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        boolean boolean43 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat41);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.text.Format[] formatArray9 = extendedMessageFormat7.getFormats();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        extendedMessageFormat7.setLocale(locale20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray36 = extendedMessageFormat34.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        extendedMessageFormat59.setLocale(locale68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        extendedMessageFormat43.setLocale(locale71);
        extendedMessageFormat40.setLocale(locale71);
        java.lang.String str74 = extendedMessageFormat40.toPattern();
        java.lang.Object obj75 = extendedMessageFormat40.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        extendedMessageFormat5.applyPattern("hi!");
        java.lang.String str10 = extendedMessageFormat5.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat5.getFormats();
        java.lang.String str12 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat35.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map54);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat33.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = extendedMessageFormat1.format((java.lang.Object) locale16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.text.Format[] formatArray36 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.lang.String str37 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray36);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("");
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = extendedMessageFormat3.parseObject("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = extendedMessageFormat23.format((java.lang.Object) formatArray38, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray38);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.Object obj14 = extendedMessageFormat11.parseObject("hi!");
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        extendedMessageFormat17.applyPattern("hi!");
        java.lang.String str22 = extendedMessageFormat17.toPattern();
        java.lang.String str23 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat17.getFormats();
        java.lang.String str25 = extendedMessageFormat11.format((java.lang.Object) formatArray24);
        java.util.Locale locale26 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        extendedMessageFormat3.applyPattern("");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        extendedMessageFormat3.setLocale(locale15);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map34);
        extendedMessageFormat35.applyPattern("hi!");
        java.text.Format[] formatArray38 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.text.Format[] formatArray39 = extendedMessageFormat35.getFormats();
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat35, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.lang.String str4 = extendedMessageFormat2.toPattern();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.Object[] objArray14 = extendedMessageFormat8.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = extendedMessageFormat11.parseObject("", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.lang.Class<?> wildcardClass14 = formatArray13.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat26.setLocale(locale33);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map41);
        java.util.Locale locale43 = null;
        extendedMessageFormat42.setLocale(locale43);
        boolean boolean45 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat42);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormats();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58);
        java.text.Format[] formatArray66 = extendedMessageFormat65.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray66);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat14.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.lang.Object obj18 = extendedMessageFormat11.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        extendedMessageFormat24.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Locale locale51 = null;
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51, map52);
        extendedMessageFormat53.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = extendedMessageFormat49.format((java.lang.Object) extendedMessageFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.lang.Class<?> wildcardClass18 = objArray17.getClass();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.Object[] objArray8 = extendedMessageFormat6.parse("hi!");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.lang.Object[] objArray14 = extendedMessageFormat11.parse("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = extendedMessageFormat6.formatToCharacterIterator((java.lang.Object) formatArray15);
        java.lang.String str17 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray15);
        java.lang.String str18 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray15);
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.Object obj14 = extendedMessageFormat3.parseObject("hi!");
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        extendedMessageFormat42.setLocale(locale56);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map59);
        extendedMessageFormat21.setLocale(locale56);
        java.text.Format[] formatArray62 = extendedMessageFormat21.getFormats();
        java.text.Format[] formatArray63 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = extendedMessageFormat3.format((java.lang.Object[]) formatArray63, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(formatArray63);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.Object obj8 = extendedMessageFormat2.clone();
        java.lang.Class<?> wildcardClass9 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat2.setLocale(locale24);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.text.Format[] formatArray43 = extendedMessageFormat42.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.text.Format[] formatArray17 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormats();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.text.Format[] formatArray35 = extendedMessageFormat33.getFormats();
        java.text.Format[] formatArray36 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.lang.String str37 = extendedMessageFormat29.format((java.lang.Object) formatArray36);
        boolean boolean38 = extendedMessageFormat14.equals((java.lang.Object) extendedMessageFormat29);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.lang.Object[] objArray65 = extendedMessageFormat63.parse("hi!");
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.lang.Object[] objArray71 = extendedMessageFormat68.parse("hi!");
        java.text.Format[] formatArray72 = extendedMessageFormat68.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = extendedMessageFormat63.formatToCharacterIterator((java.lang.Object) formatArray72);
        java.lang.String str74 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.String str75 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = extendedMessageFormat38.format((java.lang.Object[]) formatArray72, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        java.lang.Class<?> wildcardClass42 = extendedMessageFormat38.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.text.Format[] formatArray31 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale32 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat18.getFormats();
        java.text.Format[] formatArray34 = extendedMessageFormat18.getFormats();
        java.lang.Object obj35 = extendedMessageFormat18.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator51 = extendedMessageFormat44.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.lang.String str41 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray40);
        java.lang.String str42 = extendedMessageFormat31.format((java.lang.Object) formatArray40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        extendedMessageFormat31.setLocale(locale49);
        extendedMessageFormat11.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat59.applyPattern("hi!");
        extendedMessageFormat59.applyPattern("");
        java.util.Locale locale69 = null;
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map70);
        java.text.Format[] formatArray72 = extendedMessageFormat71.getFormatsByArgumentIndex();
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map75);
        java.util.Locale locale77 = extendedMessageFormat76.getLocale();
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map78);
        extendedMessageFormat71.setLocale(locale77);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77, map83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77, map86);
        extendedMessageFormat59.setLocale(locale77);
        java.lang.StringBuffer stringBuffer89 = null;
        java.text.FieldPosition fieldPosition90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer91 = extendedMessageFormat56.format((java.lang.Object) locale77, stringBuffer89, fieldPosition90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "en_US");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.lang.Object[] objArray49 = extendedMessageFormat47.parse("hi!");
        java.text.Format[] formatArray50 = extendedMessageFormat47.getFormats();
        java.lang.String str51 = extendedMessageFormat47.toPattern();
        java.lang.Object obj52 = extendedMessageFormat47.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator53 = extendedMessageFormat43.formatToCharacterIterator(obj52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.util.Locale locale71 = null;
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale71, map72);
        java.text.Format[] formatArray74 = extendedMessageFormat73.getFormatsByArgumentIndex();
        java.text.Format[] formatArray75 = extendedMessageFormat73.getFormats();
        java.util.Locale locale78 = null;
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale78, map79);
        java.text.Format[] formatArray81 = extendedMessageFormat80.getFormatsByArgumentIndex();
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map87);
        extendedMessageFormat80.setLocale(locale86);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map90);
        extendedMessageFormat73.setLocale(locale86);
        java.util.Map map93 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map93);
        java.util.Map map95 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat96 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale86, map95);
        extendedMessageFormat67.setLocale(locale86);
        java.text.Format[] formatArray98 = extendedMessageFormat67.getFormatsByArgumentIndex();
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray74);
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertNotNull(formatArray81);
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray98);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        extendedMessageFormat11.setLocale(locale32);
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        extendedMessageFormat51.applyPattern("");
        java.util.Locale locale54 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormat(0, (java.text.Format) extendedMessageFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray52 = extendedMessageFormat3.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormats();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.util.Locale locale60 = null;
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60, map61);
        java.text.Format[] formatArray63 = extendedMessageFormat62.getFormatsByArgumentIndex();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        extendedMessageFormat62.setLocale(locale68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        extendedMessageFormat56.setLocale(locale68);
        java.lang.String str74 = extendedMessageFormat56.toPattern();
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map76);
        extendedMessageFormat77.applyPattern("");
        extendedMessageFormat77.applyPattern("hi!");
        java.lang.String str82 = extendedMessageFormat77.toPattern();
        java.text.Format[] formatArray83 = extendedMessageFormat77.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = extendedMessageFormat56.formatToCharacterIterator((java.lang.Object) formatArray83);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormatsByArgumentIndex(formatArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray63);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(formatArray83);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        extendedMessageFormat5.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.lang.String str55 = extendedMessageFormat45.toPattern();
        extendedMessageFormat45.applyPattern("hi!");
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        extendedMessageFormat63.setLocale(locale69);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map75);
        extendedMessageFormat45.setLocale(locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        extendedMessageFormat39.setLocale(locale69);
        java.util.Locale locale81 = extendedMessageFormat39.getLocale();
        java.lang.Object obj83 = extendedMessageFormat39.parseObject("hi!");
        java.lang.String str84 = extendedMessageFormat39.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray86 = extendedMessageFormat39.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray32 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray33 = extendedMessageFormat1.getFormats();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("");
        extendedMessageFormat37.applyPattern("hi!");
        java.lang.String str42 = extendedMessageFormat37.toPattern();
        java.lang.String str43 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray44 = extendedMessageFormat37.getFormats();
        java.lang.String str45 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray44);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Locale locale43 = extendedMessageFormat1.getLocale();
        java.util.Locale locale44 = extendedMessageFormat1.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.text.Format[] formatArray61 = extendedMessageFormat59.getFormats();
        java.text.Format[] formatArray62 = extendedMessageFormat59.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormats();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.String str16 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray15);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.lang.String str5 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat2.parseObject("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat3.toPattern();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        extendedMessageFormat30.applyPattern("hi!");
        extendedMessageFormat30.applyPattern("hi!");
        java.text.Format[] formatArray35 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.text.Format[] formatArray36 = extendedMessageFormat30.getFormats();
        java.util.Locale locale37 = extendedMessageFormat30.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) locale37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("hi!");
        java.util.Locale locale20 = extendedMessageFormat17.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.lang.Object[] objArray53 = extendedMessageFormat50.parse("hi!");
        java.text.Format[] formatArray54 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Locale locale56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.lang.String str59 = extendedMessageFormat50.format((java.lang.Object) locale58);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        extendedMessageFormat62.applyPattern("");
        java.util.Locale locale67 = null;
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        java.lang.String str70 = extendedMessageFormat69.toPattern();
        java.text.Format[] formatArray71 = extendedMessageFormat69.getFormats();
        java.lang.String str72 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray71);
        java.lang.String str73 = extendedMessageFormat62.format((java.lang.Object) formatArray71);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80);
        extendedMessageFormat62.setLocale(locale80);
        extendedMessageFormat50.setLocale(locale80);
        extendedMessageFormat7.setLocale(locale80);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map88);
        java.text.Format[] formatArray90 = extendedMessageFormat89.getFormats();
        java.util.Locale locale91 = extendedMessageFormat89.getLocale();
        java.text.ParsePosition parsePosition93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = extendedMessageFormat89.parseObject("hi!", parsePosition93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNull(locale58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray90);
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "en_US");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        extendedMessageFormat50.applyPattern("");
        java.lang.String str53 = extendedMessageFormat50.toPattern();
        java.util.Locale locale54 = extendedMessageFormat50.getLocale();
        extendedMessageFormat2.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map71);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = extendedMessageFormat56.format((java.lang.Object) extendedMessageFormat73);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale17 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray18 = extendedMessageFormat3.getFormats();
        java.text.Format[] formatArray19 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormats();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.text.Format[] formatArray26 = extendedMessageFormat23.getFormats();
        java.lang.String str27 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray26);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Locale locale35 = extendedMessageFormat33.getLocale();
        java.text.Format[] formatArray36 = extendedMessageFormat33.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map52);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator54 = extendedMessageFormat44.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale6 = extendedMessageFormat2.getLocale();
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormats();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat2.format((java.lang.Object[]) formatArray14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("hi!");
        extendedMessageFormat15.applyPattern("hi!");
        java.text.Format[] formatArray20 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.text.Format[] formatArray21 = extendedMessageFormat15.getFormats();
        java.lang.String str22 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray21);
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat2.format((java.lang.Object[]) formatArray21, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.text.Format[] formatArray48 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.lang.String str49 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = extendedMessageFormat37.format((java.lang.Object) str49, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray48 = extendedMessageFormat14.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj8 = extendedMessageFormat3.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.text.Format[] formatArray31 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale32 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat18.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat18.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map28);
        extendedMessageFormat15.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        boolean boolean44 = extendedMessageFormat31.equals((java.lang.Object) str43);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray59 = extendedMessageFormat38.getFormats();
        java.util.Locale locale60 = extendedMessageFormat38.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray62 = extendedMessageFormat38.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat12.getFormats();
        extendedMessageFormat12.applyPattern("");
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.lang.Object[] objArray30 = extendedMessageFormat28.parse("hi!");
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.lang.Object[] objArray36 = extendedMessageFormat33.parse("hi!");
        java.text.Format[] formatArray37 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat28.formatToCharacterIterator((java.lang.Object) formatArray37);
        extendedMessageFormat28.applyPattern("");
        java.text.Format[] formatArray41 = extendedMessageFormat28.getFormats();
        java.lang.String str42 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray41);
        java.lang.String str43 = extendedMessageFormat22.format((java.lang.Object) formatArray41);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        extendedMessageFormat44.applyPattern("hi!");
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.util.Locale locale58 = extendedMessageFormat56.getLocale();
        java.util.Locale locale59 = extendedMessageFormat56.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormatByArgumentIndex((-1), (java.text.Format) extendedMessageFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat39.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat36.setFormat((-1), (java.text.Format) extendedMessageFormat39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        extendedMessageFormat19.applyPattern("hi!");
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map54);
        extendedMessageFormat19.setLocale(locale52);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map57);
        java.util.Locale locale63 = null;
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63, map64);
        java.text.Format[] formatArray66 = extendedMessageFormat65.getFormatsByArgumentIndex();
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map69);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map72);
        extendedMessageFormat65.setLocale(locale71);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map75);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale71, map77);
        java.text.Format[] formatArray79 = extendedMessageFormat78.getFormatsByArgumentIndex();
        java.lang.String str80 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray79);
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = extendedMessageFormat58.format((java.lang.Object[]) formatArray79, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray66);
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat11.format((java.lang.Object) formatArray18);
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.lang.Object[] objArray25 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat23.getFormats();
        java.lang.String str27 = extendedMessageFormat23.toPattern();
        java.lang.Object obj28 = extendedMessageFormat23.clone();
        boolean boolean29 = extendedMessageFormat11.equals(obj28);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        extendedMessageFormat3.setLocale(locale19);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map55);
        extendedMessageFormat38.setLocale(locale51);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51, map62);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.String str14 = extendedMessageFormat12.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.Object obj19 = extendedMessageFormat16.parseObject("hi!");
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat12.format(obj19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.util.Locale locale10 = extendedMessageFormat8.getLocale();
        java.util.Locale locale11 = extendedMessageFormat8.getLocale();
        java.lang.Class<?> wildcardClass12 = locale11.getClass();
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        extendedMessageFormat11.setLocale(locale18);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map24);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.util.Locale locale31 = extendedMessageFormat29.getLocale();
        extendedMessageFormat29.applyPattern("hi!");
        java.lang.Object obj35 = extendedMessageFormat29.parseObject("hi!");
        java.text.Format[] formatArray36 = extendedMessageFormat29.getFormatsByArgumentIndex();
        boolean boolean37 = extendedMessageFormat25.equals((java.lang.Object) extendedMessageFormat29);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.lang.String str54 = extendedMessageFormat38.toPattern();
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62);
        boolean boolean69 = extendedMessageFormat38.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.lang.Object obj3 = null;
        java.lang.String str4 = extendedMessageFormat1.format(obj3);
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat1.parse("hi!", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = extendedMessageFormat10.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale2, map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.util.Locale locale6 = extendedMessageFormat4.getLocale();
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.lang.Object[] objArray14 = extendedMessageFormat12.parse("hi!");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map32);
        java.lang.String str34 = extendedMessageFormat12.format((java.lang.Object) map32);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.lang.String str48 = extendedMessageFormat38.toPattern();
        extendedMessageFormat38.applyPattern("hi!");
        java.util.Locale locale54 = null;
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        extendedMessageFormat56.setLocale(locale62);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62, map68);
        extendedMessageFormat38.setLocale(locale62);
        extendedMessageFormat12.setLocale(locale62);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map75);
        java.util.Locale locale77 = extendedMessageFormat76.getLocale();
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map80);
        extendedMessageFormat12.setLocale(locale77);
        extendedMessageFormat4.setLocale(locale77);
        java.text.Format[] formatArray84 = extendedMessageFormat4.getFormats();
        java.lang.String str85 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray84);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        extendedMessageFormat14.setLocale(locale21);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.lang.Object[] objArray39 = extendedMessageFormat36.parse("hi!");
        java.text.Format[] formatArray40 = extendedMessageFormat36.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat34.setFormats(formatArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(formatArray40);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat15.setLocale(locale24);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map43);
        boolean boolean45 = extendedMessageFormat15.equals((java.lang.Object) map43);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray50 = extendedMessageFormat46.parse("", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        extendedMessageFormat47.applyPattern("hi!");
        java.lang.String str52 = extendedMessageFormat47.toPattern();
        java.text.Format[] formatArray53 = extendedMessageFormat47.getFormats();
        java.lang.String str54 = extendedMessageFormat44.format((java.lang.Object) formatArray53);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormats(formatArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer46 = null;
        java.text.FieldPosition fieldPosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer48 = extendedMessageFormat30.format((java.lang.Object[]) formatArray45, stringBuffer46, fieldPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        extendedMessageFormat16.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.lang.Object obj38 = extendedMessageFormat37.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 100, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        extendedMessageFormat44.applyPattern("hi!");
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map55);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat56.getFormats();
        java.text.Format[] formatArray59 = extendedMessageFormat56.getFormatsByArgumentIndex();
        extendedMessageFormat56.applyPattern("");
        java.text.Format[] formatArray62 = extendedMessageFormat56.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormats(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat23.applyPattern("");
        java.lang.String str26 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormats();
        java.lang.String str28 = extendedMessageFormat23.toPattern();
        extendedMessageFormat23.applyPattern("");
        java.lang.String str31 = extendedMessageFormat23.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat33.applyPattern("");
        java.text.Format[] formatArray36 = extendedMessageFormat33.getFormats();
        java.lang.String str37 = extendedMessageFormat23.format((java.lang.Object) formatArray36);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) '#', (java.text.Format) extendedMessageFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.lang.String str47 = extendedMessageFormat14.toPattern();
        extendedMessageFormat14.applyPattern("hi!");
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray52 = extendedMessageFormat14.parse("hi!", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        extendedMessageFormat56.applyPattern("");
        boolean boolean59 = extendedMessageFormat43.equals((java.lang.Object) "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.lang.String str27 = extendedMessageFormat25.toPattern();
        extendedMessageFormat25.applyPattern("hi!");
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.lang.String str33 = extendedMessageFormat32.toPattern();
        java.lang.Object[] objArray35 = extendedMessageFormat32.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = extendedMessageFormat25.formatToCharacterIterator((java.lang.Object) objArray35);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map56);
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = extendedMessageFormat25.format((java.lang.Object) map56, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        extendedMessageFormat14.setLocale(locale21);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map33);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = extendedMessageFormat34.parseObject("", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat2.setLocale(locale24);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = extendedMessageFormat2.parseObject("", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        extendedMessageFormat30.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator33 = extendedMessageFormat25.formatToCharacterIterator((java.lang.Object) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat15.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        extendedMessageFormat32.setLocale(locale46);
        extendedMessageFormat3.setLocale(locale46);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormats();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.lang.String str56 = extendedMessageFormat55.toPattern();
        java.lang.Object[] objArray58 = extendedMessageFormat55.parse("hi!");
        java.text.Format[] formatArray59 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Locale locale61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        java.lang.String str64 = extendedMessageFormat55.format((java.lang.Object) locale63);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        extendedMessageFormat67.applyPattern("");
        java.util.Locale locale72 = null;
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map73);
        java.lang.String str75 = extendedMessageFormat74.toPattern();
        java.text.Format[] formatArray76 = extendedMessageFormat74.getFormats();
        java.lang.String str77 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray76);
        java.lang.String str78 = extendedMessageFormat67.format((java.lang.Object) formatArray76);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map83);
        java.util.Locale locale85 = extendedMessageFormat84.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85);
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85, map87);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85);
        extendedMessageFormat67.setLocale(locale85);
        extendedMessageFormat55.setLocale(locale85);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85);
        java.util.Locale locale93 = extendedMessageFormat92.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale93);
        java.util.Map map96 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat97 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map96);
        java.lang.String str98 = extendedMessageFormat94.format((java.lang.Object) map96);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator99 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat94);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertNull(locale63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(formatArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(locale85);
        org.junit.Assert.assertEquals(locale85.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormats();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat1.format((java.lang.Object[]) formatArray19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormats();
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat34.setLocale(locale40);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40);
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormatsByArgumentIndex();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        extendedMessageFormat54.setLocale(locale60);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60, map66);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        extendedMessageFormat67.setLocale(locale81);
        java.util.Locale locale84 = extendedMessageFormat67.getLocale();
        extendedMessageFormat48.setLocale(locale84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale84, map86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = extendedMessageFormat25.format((java.lang.Object) locale84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat4.setLocale(locale27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray34 = extendedMessageFormat31.parse("hi!", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22);
        extendedMessageFormat15.setLocale(locale22);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat22.setLocale(locale34);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) ' ', (java.text.Format) extendedMessageFormat43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale12 = extendedMessageFormat10.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(locale12);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        extendedMessageFormat24.setLocale(locale38);
        java.lang.Object[] objArray42 = extendedMessageFormat24.parse("hi!");
        java.text.Format[] formatArray43 = extendedMessageFormat24.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(formatArray43);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map60);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        extendedMessageFormat61.setLocale(locale75);
        extendedMessageFormat41.setLocale(locale75);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map79);
        java.text.ParsePosition parsePosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = extendedMessageFormat80.parseObject("", parsePosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map38);
        extendedMessageFormat11.setLocale(locale27);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map41);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map12);
        extendedMessageFormat13.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.Class<?> wildcardClass18 = formatArray16.getClass();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        extendedMessageFormat17.setLocale(locale26);
        java.text.Format[] formatArray28 = extendedMessageFormat17.getFormats();
        java.util.Locale locale29 = extendedMessageFormat17.getLocale();
        java.lang.String str30 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.String str32 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray33 = extendedMessageFormat17.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat1.parseObject("", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        java.util.Locale locale46 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.text.Format[] formatArray49 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Locale locale58 = null;
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        extendedMessageFormat60.setLocale(locale66);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map85);
        java.util.Locale locale87 = extendedMessageFormat86.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        extendedMessageFormat73.setLocale(locale87);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale87);
        java.util.Map map92 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87, map92);
        java.util.Map map94 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat95 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87, map94);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat96 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        extendedMessageFormat47.setLocale(locale87);
        java.lang.Object obj98 = extendedMessageFormat47.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = extendedMessageFormat13.format(obj98);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        java.lang.String str21 = extendedMessageFormat10.format((java.lang.Object) formatArray19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        extendedMessageFormat10.setLocale(locale28);
        extendedMessageFormat6.setLocale(locale28);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = extendedMessageFormat6.format((java.lang.Object) extendedMessageFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map12);
        java.lang.Object obj15 = extendedMessageFormat13.parseObject("hi!");
        java.lang.Class<?> wildcardClass16 = extendedMessageFormat13.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        extendedMessageFormat35.applyPattern("hi!");
        java.util.Locale locale39 = extendedMessageFormat35.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat21.setFormat((int) (short) 1, (java.text.Format) extendedMessageFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map61);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map72);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        extendedMessageFormat62.setLocale(locale76);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76, map79);
        extendedMessageFormat41.setLocale(locale76);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map82);
        extendedMessageFormat33.setLocale(locale76);
        extendedMessageFormat8.setLocale(locale76);
        java.util.Locale locale88 = null;
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map89);
        java.text.Format[] formatArray91 = extendedMessageFormat90.getFormatsByArgumentIndex();
        java.lang.String str92 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray91);
        java.lang.StringBuffer stringBuffer93 = null;
        java.text.FieldPosition fieldPosition94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer95 = extendedMessageFormat8.format((java.lang.Object[]) formatArray91, stringBuffer93, fieldPosition94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.lang.Object[] objArray19 = extendedMessageFormat16.parse("hi!");
        java.text.Format[] formatArray20 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Locale locale22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.lang.String str25 = extendedMessageFormat16.format((java.lang.Object) locale24);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        extendedMessageFormat28.applyPattern("");
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        java.lang.String str36 = extendedMessageFormat35.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat35.getFormats();
        java.lang.String str38 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray37);
        java.lang.String str39 = extendedMessageFormat28.format((java.lang.Object) formatArray37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        extendedMessageFormat28.setLocale(locale46);
        extendedMessageFormat16.setLocale(locale46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat9.setLocale(locale54);
        java.util.Locale locale57 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        java.util.Locale locale70 = null;
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70, map71);
        java.text.Format[] formatArray73 = extendedMessageFormat72.getFormatsByArgumentIndex();
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map76);
        java.util.Locale locale78 = extendedMessageFormat77.getLocale();
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale78, map79);
        extendedMessageFormat72.setLocale(locale78);
        java.lang.String str82 = extendedMessageFormat72.toPattern();
        java.lang.Object[] objArray84 = extendedMessageFormat72.parse("hi!");
        java.text.Format[] formatArray85 = extendedMessageFormat72.getFormats();
        java.lang.String str86 = extendedMessageFormat68.format((java.lang.Object) formatArray85);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatsByArgumentIndex(formatArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNull(locale24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray73);
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(formatArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.text.Format[] formatArray50 = extendedMessageFormat3.getFormats();
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = extendedMessageFormat3.format((java.lang.Object) (short) 1, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.String str19 = extendedMessageFormat8.format((java.lang.Object) formatArray17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        extendedMessageFormat8.setLocale(locale26);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale33 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map35);
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map41);
        java.lang.Object[] objArray44 = extendedMessageFormat42.parse("hi!");
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.lang.String str48 = extendedMessageFormat47.toPattern();
        java.lang.Object[] objArray50 = extendedMessageFormat47.parse("hi!");
        java.text.Format[] formatArray51 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = extendedMessageFormat42.formatToCharacterIterator((java.lang.Object) formatArray51);
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        java.lang.String str54 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray51);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat36.setFormats(formatArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        extendedMessageFormat26.applyPattern("");
        java.lang.String str29 = extendedMessageFormat26.toPattern();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.lang.Object[] objArray36 = extendedMessageFormat33.parse("hi!");
        java.text.Format[] formatArray37 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Locale locale39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.lang.String str42 = extendedMessageFormat33.format((java.lang.Object) locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        extendedMessageFormat45.applyPattern("");
        java.util.Locale locale50 = null;
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.lang.String str53 = extendedMessageFormat52.toPattern();
        java.text.Format[] formatArray54 = extendedMessageFormat52.getFormats();
        java.lang.String str55 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray54);
        java.lang.String str56 = extendedMessageFormat45.format((java.lang.Object) formatArray54);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map65);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63);
        extendedMessageFormat45.setLocale(locale63);
        extendedMessageFormat33.setLocale(locale63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        extendedMessageFormat26.setLocale(locale63);
        java.util.Locale locale73 = null;
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale73, map74);
        java.lang.String str76 = extendedMessageFormat75.toPattern();
        java.util.Locale locale77 = extendedMessageFormat75.getLocale();
        extendedMessageFormat75.applyPattern("hi!");
        java.lang.Object obj81 = extendedMessageFormat75.parseObject("hi!");
        java.text.Format[] formatArray82 = extendedMessageFormat75.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = extendedMessageFormat26.formatToCharacterIterator((java.lang.Object) formatArray82);
        java.lang.String str84 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray82);
        java.lang.StringBuffer stringBuffer85 = null;
        java.text.FieldPosition fieldPosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer87 = extendedMessageFormat9.format((java.lang.Object[]) formatArray82, stringBuffer85, fieldPosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNull(locale41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(locale77);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(formatArray82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = extendedMessageFormat42.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.lang.String str49 = extendedMessageFormat48.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray51 = extendedMessageFormat48.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        extendedMessageFormat3.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.lang.Object[] objArray24 = extendedMessageFormat21.parse("hi!");
        java.text.Format[] formatArray25 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Locale locale27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.lang.String str30 = extendedMessageFormat21.format((java.lang.Object) locale29);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        extendedMessageFormat33.applyPattern("");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.text.Format[] formatArray42 = extendedMessageFormat40.getFormats();
        java.lang.String str43 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray42);
        java.lang.String str44 = extendedMessageFormat33.format((java.lang.Object) formatArray42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        extendedMessageFormat33.setLocale(locale51);
        extendedMessageFormat21.setLocale(locale51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59);
        extendedMessageFormat15.setLocale(locale59);
        java.text.Format[] formatArray62 = extendedMessageFormat15.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray62);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNull(locale29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat15.parse("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray59 = extendedMessageFormat38.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray61 = extendedMessageFormat38.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray59);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        extendedMessageFormat9.setLocale(locale27);
        extendedMessageFormat4.setLocale(locale27);
        java.util.Locale locale34 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat38.applyPattern("");
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.text.Format[] formatArray58 = extendedMessageFormat56.getFormats();
        java.text.Format[] formatArray59 = extendedMessageFormat56.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormat((int) '#', (java.text.Format) extendedMessageFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray59);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        extendedMessageFormat3.applyPattern("");
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat3.parse("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat19.setLocale(locale28);
        java.text.Format[] formatArray30 = extendedMessageFormat19.getFormats();
        java.util.Locale locale31 = extendedMessageFormat19.getLocale();
        java.lang.String str32 = extendedMessageFormat19.toPattern();
        java.text.Format[] formatArray33 = extendedMessageFormat19.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        java.lang.Object obj16 = extendedMessageFormat14.clone();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        boolean boolean51 = extendedMessageFormat43.equals((java.lang.Object) extendedMessageFormat49);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.lang.Class<?> wildcardClass23 = locale13.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        boolean boolean26 = extendedMessageFormat12.equals((java.lang.Object) str25);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        extendedMessageFormat5.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.lang.String str55 = extendedMessageFormat45.toPattern();
        extendedMessageFormat45.applyPattern("hi!");
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        extendedMessageFormat63.setLocale(locale69);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map75);
        extendedMessageFormat45.setLocale(locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        extendedMessageFormat39.setLocale(locale69);
        java.util.Locale locale81 = extendedMessageFormat39.getLocale();
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map83);
        java.text.Format[] formatArray85 = extendedMessageFormat84.getFormats();
        java.lang.StringBuffer stringBuffer86 = null;
        java.text.FieldPosition fieldPosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer88 = extendedMessageFormat39.format((java.lang.Object) extendedMessageFormat84, stringBuffer86, fieldPosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray85);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        extendedMessageFormat42.applyPattern("");
        extendedMessageFormat42.applyPattern("hi!");
        extendedMessageFormat42.applyPattern("");
        java.text.Format[] formatArray49 = extendedMessageFormat42.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormatsByArgumentIndex(formatArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray49);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        extendedMessageFormat20.applyPattern("");
        java.lang.String str23 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormats();
        java.text.Format[] formatArray25 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat20, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(formatArray25);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        extendedMessageFormat17.setLocale(locale26);
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        extendedMessageFormat33.setLocale(locale39);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        extendedMessageFormat46.setLocale(locale60);
        extendedMessageFormat17.setLocale(locale60);
        java.text.Format[] formatArray64 = extendedMessageFormat17.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat13.setFormatsByArgumentIndex(formatArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat4.getFormats();
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Locale locale18 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = extendedMessageFormat19.parseObject("", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        extendedMessageFormat12.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map31);
        java.lang.Class<?> wildcardClass33 = extendedMessageFormat32.getClass();
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat15.parse("", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat1.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map16);
        java.lang.Class<?> wildcardClass18 = extendedMessageFormat17.getClass();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.lang.String str19 = extendedMessageFormat16.toPattern();
        java.util.Locale locale20 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = extendedMessageFormat21.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map19);
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        extendedMessageFormat41.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map71);
        java.text.Format[] formatArray73 = extendedMessageFormat72.getFormats();
        java.lang.String str74 = extendedMessageFormat59.format((java.lang.Object) formatArray73);
        java.text.Format[] formatArray75 = extendedMessageFormat59.getFormats();
        extendedMessageFormat59.applyPattern("");
        java.lang.String str78 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray79 = extendedMessageFormat59.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatsByArgumentIndex(formatArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(formatArray79);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.text.Format[] formatArray18 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = extendedMessageFormat2.parseObject("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        extendedMessageFormat9.setLocale(locale27);
        extendedMessageFormat4.setLocale(locale27);
        java.util.Locale locale34 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map41);
        java.text.Format[] formatArray43 = extendedMessageFormat42.getFormatsByArgumentIndex();
        java.text.Format[] formatArray44 = extendedMessageFormat42.getFormats();
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        extendedMessageFormat42.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat42.setLocale(locale65);
        java.text.Format[] formatArray69 = extendedMessageFormat42.getFormatsByArgumentIndex();
        java.text.Format[] formatArray70 = extendedMessageFormat42.getFormats();
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = extendedMessageFormat38.format((java.lang.Object[]) formatArray70, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertNotNull(formatArray70);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat9.applyPattern("hi!");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat9.setLocale(locale32);
        java.util.Locale locale39 = extendedMessageFormat9.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat9.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat5.setFormats(formatArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale17 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray18 = extendedMessageFormat3.getFormats();
        java.text.Format[] formatArray19 = extendedMessageFormat3.getFormats();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat34.setLocale(locale40);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map46);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        extendedMessageFormat47.setLocale(locale61);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map64);
        extendedMessageFormat26.setLocale(locale61);
        java.text.Format[] formatArray67 = extendedMessageFormat26.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray67);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat3.toPattern();
        java.util.Locale locale20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat21.applyPattern("hi!");
        java.util.Locale locale24 = extendedMessageFormat21.getLocale();
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = extendedMessageFormat3.format((java.lang.Object) locale24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(locale24);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale32 = extendedMessageFormat1.getLocale();
        java.util.Locale locale35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        extendedMessageFormat36.applyPattern("hi!");
        java.text.Format[] formatArray39 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = extendedMessageFormat1.format((java.lang.Object[]) formatArray39, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.String str43 = extendedMessageFormat1.toPattern();
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat1.parse("", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat11.format((java.lang.Object) formatArray18);
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        boolean boolean40 = extendedMessageFormat11.equals((java.lang.Object) locale39);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        extendedMessageFormat36.applyPattern("hi!");
        java.text.Format[] formatArray39 = extendedMessageFormat36.getFormats();
        boolean boolean40 = extendedMessageFormat11.equals((java.lang.Object) formatArray39);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat23.setLocale(locale35);
        extendedMessageFormat9.setLocale(locale35);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map88);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat90.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormat((int) 'a', (java.text.Format) extendedMessageFormat90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat35.setLocale(locale49);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map52);
        extendedMessageFormat14.setLocale(locale49);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map56);
        java.lang.String str58 = extendedMessageFormat57.toPattern();
        java.lang.Object[] objArray60 = extendedMessageFormat57.parse("hi!");
        java.text.Format[] formatArray61 = extendedMessageFormat57.getFormatsByArgumentIndex();
        java.util.Locale locale63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.lang.String str66 = extendedMessageFormat57.format((java.lang.Object) locale65);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        extendedMessageFormat69.applyPattern("");
        java.util.Locale locale74 = null;
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map75);
        java.lang.String str77 = extendedMessageFormat76.toPattern();
        java.text.Format[] formatArray78 = extendedMessageFormat76.getFormats();
        java.lang.String str79 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray78);
        java.lang.String str80 = extendedMessageFormat69.format((java.lang.Object) formatArray78);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map85);
        java.util.Locale locale87 = extendedMessageFormat86.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale87);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale87, map89);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale87);
        extendedMessageFormat69.setLocale(locale87);
        extendedMessageFormat57.setLocale(locale87);
        extendedMessageFormat14.setLocale(locale87);
        java.util.Map map95 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat96 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale87, map95);
        java.text.Format[] formatArray97 = extendedMessageFormat96.getFormats();
        java.lang.String str98 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray97);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNull(locale65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(formatArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        extendedMessageFormat18.applyPattern("hi!");
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormats();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.text.Format[] formatArray40 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.lang.String str41 = extendedMessageFormat33.format((java.lang.Object) formatArray40);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormats(formatArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map56);
        java.text.Format[] formatArray58 = extendedMessageFormat57.getFormats();
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = extendedMessageFormat44.format((java.lang.Object) formatArray58, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray58);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormats();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map67);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        extendedMessageFormat68.setLocale(locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82);
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82, map87);
        java.text.Format[] formatArray89 = extendedMessageFormat88.getFormats();
        java.text.Format[] formatArray90 = extendedMessageFormat88.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormats(formatArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray89);
        org.junit.Assert.assertNotNull(formatArray90);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.Object obj6 = extendedMessageFormat3.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat1.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = extendedMessageFormat32.parseObject("", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.lang.Object obj20 = extendedMessageFormat18.clone();
        java.lang.Class<?> wildcardClass21 = extendedMessageFormat18.getClass();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat1.format((java.lang.Object) str9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        java.lang.String str37 = extendedMessageFormat23.format((java.lang.Object) map35);
        java.util.Locale locale38 = extendedMessageFormat23.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormats();
        java.text.Format[] formatArray42 = extendedMessageFormat40.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat17.setFormatsByArgumentIndex(formatArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.text.Format[] formatArray7 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.lang.Object obj10 = extendedMessageFormat2.parseObject("hi!");
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormats();
        java.lang.StringBuffer stringBuffer24 = null;
        java.text.FieldPosition fieldPosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer26 = extendedMessageFormat2.format((java.lang.Object) formatArray23, stringBuffer24, fieldPosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.lang.Object obj7 = extendedMessageFormat2.clone();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.lang.String str27 = extendedMessageFormat25.toPattern();
        extendedMessageFormat25.applyPattern("");
        java.lang.String str30 = extendedMessageFormat25.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = extendedMessageFormat25.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat32.applyPattern("hi!");
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale42 = null;
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormats();
        java.lang.String str47 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray46);
        java.lang.String str48 = extendedMessageFormat37.format((java.lang.Object) formatArray46);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        extendedMessageFormat37.setLocale(locale55);
        extendedMessageFormat32.setLocale(locale55);
        extendedMessageFormat30.setLocale(locale55);
        java.lang.String str63 = extendedMessageFormat30.toPattern();
        java.util.Locale locale64 = extendedMessageFormat30.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatByArgumentIndex(1, (java.text.Format) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        extendedMessageFormat46.setLocale(locale52);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map58);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map71);
        java.util.Locale locale73 = extendedMessageFormat72.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale73);
        extendedMessageFormat59.setLocale(locale73);
        java.util.Locale locale76 = extendedMessageFormat59.getLocale();
        extendedMessageFormat40.setLocale(locale76);
        java.text.Format[] formatArray78 = extendedMessageFormat40.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormats(formatArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray78);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        extendedMessageFormat9.setLocale(locale27);
        extendedMessageFormat4.setLocale(locale27);
        java.util.Locale locale34 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.Object obj39 = null;
        boolean boolean40 = extendedMessageFormat38.equals(obj39);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        extendedMessageFormat42.applyPattern("");
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.text.Format[] formatArray51 = extendedMessageFormat49.getFormats();
        java.lang.String str52 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        java.lang.String str53 = extendedMessageFormat42.format((java.lang.Object) formatArray51);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map62);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60);
        extendedMessageFormat42.setLocale(locale60);
        extendedMessageFormat37.setLocale(locale60);
        java.util.Locale locale67 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = extendedMessageFormat34.formatToCharacterIterator((java.lang.Object) formatArray70);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map48);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        extendedMessageFormat49.setLocale(locale63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63, map70);
        java.text.Format[] formatArray72 = extendedMessageFormat71.getFormatsByArgumentIndex();
        java.lang.String str73 = extendedMessageFormat71.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat23.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.lang.String str47 = extendedMessageFormat14.toPattern();
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58, map59);
        java.lang.String str61 = extendedMessageFormat60.toPattern();
        java.text.Format[] formatArray62 = extendedMessageFormat60.getFormats();
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map67);
        java.text.Format[] formatArray69 = extendedMessageFormat68.getFormatsByArgumentIndex();
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map75);
        extendedMessageFormat68.setLocale(locale74);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map80);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map86);
        java.util.Locale locale88 = extendedMessageFormat87.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map90);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88);
        extendedMessageFormat81.setLocale(locale88);
        java.text.Format[] formatArray94 = extendedMessageFormat81.getFormatsByArgumentIndex();
        java.util.Locale locale95 = extendedMessageFormat81.getLocale();
        extendedMessageFormat60.setLocale(locale95);
        boolean boolean97 = extendedMessageFormat14.equals((java.lang.Object) locale95);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray94);
        org.junit.Assert.assertNotNull(locale95);
        org.junit.Assert.assertEquals(locale95.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.Object obj7 = extendedMessageFormat1.parseObject("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.lang.Object[] objArray21 = extendedMessageFormat19.parse("hi!");
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map44);
        extendedMessageFormat19.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        extendedMessageFormat10.setLocale(locale35);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((-1), (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.lang.Object[] objArray53 = extendedMessageFormat50.parse("hi!");
        java.text.Format[] formatArray54 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Locale locale56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.lang.String str59 = extendedMessageFormat50.format((java.lang.Object) locale58);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        extendedMessageFormat62.applyPattern("");
        java.util.Locale locale67 = null;
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        java.lang.String str70 = extendedMessageFormat69.toPattern();
        java.text.Format[] formatArray71 = extendedMessageFormat69.getFormats();
        java.lang.String str72 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray71);
        java.lang.String str73 = extendedMessageFormat62.format((java.lang.Object) formatArray71);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80);
        extendedMessageFormat62.setLocale(locale80);
        extendedMessageFormat50.setLocale(locale80);
        extendedMessageFormat7.setLocale(locale80);
        java.text.Format[] formatArray88 = extendedMessageFormat7.getFormats();
        java.lang.String str89 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray88);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNull(locale58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat3.applyPattern("");
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormats();
        java.lang.Object[] objArray8 = new java.lang.Object[] { formatArray7 };
        java.lang.String str9 = java.text.MessageFormat.format("hi!", objArray8);
        java.lang.String str10 = java.text.MessageFormat.format("hi!", objArray8);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[[]]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj32 = extendedMessageFormat1.parseObject("hi!");
        java.util.Locale locale34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.lang.String str40 = extendedMessageFormat35.format((java.lang.Object) locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        extendedMessageFormat43.applyPattern("hi!");
        java.lang.Object[] objArray49 = extendedMessageFormat43.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = extendedMessageFormat35.formatToCharacterIterator((java.lang.Object) objArray49);
        java.text.Format[] formatArray51 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = extendedMessageFormat1.format((java.lang.Object[]) formatArray51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(formatArray51);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat12.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map24);
        java.lang.String str26 = extendedMessageFormat12.format((java.lang.Object) map24);
        java.util.Locale locale27 = extendedMessageFormat12.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormats();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormats();
        boolean boolean32 = extendedMessageFormat6.equals((java.lang.Object) extendedMessageFormat29);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat40.setFormats(formatArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        extendedMessageFormat59.setLocale(locale68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        extendedMessageFormat43.setLocale(locale71);
        extendedMessageFormat40.setLocale(locale71);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map85);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        extendedMessageFormat40.setLocale(locale81);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Locale locale43 = extendedMessageFormat1.getLocale();
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat1.parse("", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = extendedMessageFormat2.getLocale();
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = extendedMessageFormat20.parseObject("", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        extendedMessageFormat31.applyPattern("hi!");
        java.lang.String str36 = extendedMessageFormat31.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat31.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) formatArray37);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        extendedMessageFormat49.setLocale(locale61);
        java.lang.String str67 = extendedMessageFormat49.toPattern();
        extendedMessageFormat49.applyPattern("hi!");
        java.text.Format[] formatArray70 = extendedMessageFormat49.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatsByArgumentIndex(formatArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(formatArray70);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale17 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray18 = extendedMessageFormat3.getFormats();
        java.text.Format[] formatArray19 = extendedMessageFormat3.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer27 = null;
        java.text.FieldPosition fieldPosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer29 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat25, stringBuffer27, fieldPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        extendedMessageFormat24.setLocale(locale38);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map41);
        extendedMessageFormat3.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map45);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray49 = extendedMessageFormat46.parse("hi!", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        extendedMessageFormat5.setLocale(locale14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat19.parse("", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        extendedMessageFormat25.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormats();
        java.lang.String str58 = extendedMessageFormat43.format((java.lang.Object) formatArray57);
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) formatArray57);
        java.text.Format[] formatArray60 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass61 = formatArray60.getClass();
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat13.setLocale(locale20);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        java.lang.String str35 = extendedMessageFormat34.toPattern();
        java.util.Locale locale36 = extendedMessageFormat34.getLocale();
        extendedMessageFormat34.applyPattern("hi!");
        java.lang.Object obj40 = extendedMessageFormat34.parseObject("hi!");
        java.text.Format[] formatArray41 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.text.Format[] formatArray42 = extendedMessageFormat34.getFormats();
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = extendedMessageFormat30.format((java.lang.Object[]) formatArray42, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(locale36);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map60);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        extendedMessageFormat61.setLocale(locale75);
        extendedMessageFormat41.setLocale(locale75);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.text.Format[] formatArray8 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        extendedMessageFormat20.setLocale(locale27);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map33);
        extendedMessageFormat6.setLocale(locale27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat38.applyPattern("hi!");
        extendedMessageFormat38.applyPattern("");
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        extendedMessageFormat59.applyPattern("");
        java.util.Locale locale62 = extendedMessageFormat59.getLocale();
        java.util.Locale locale65 = null;
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map66);
        java.text.Format[] formatArray68 = extendedMessageFormat67.getFormatsByArgumentIndex();
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map71);
        java.util.Locale locale73 = extendedMessageFormat72.getLocale();
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale73, map74);
        extendedMessageFormat67.setLocale(locale73);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale73, map77);
        extendedMessageFormat59.setLocale(locale73);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale73, map80);
        java.lang.String str82 = extendedMessageFormat38.format((java.lang.Object) map80);
        java.text.Format[] formatArray83 = extendedMessageFormat38.getFormats();
        java.text.Format[] formatArray84 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.lang.String str85 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator86 = extendedMessageFormat6.formatToCharacterIterator((java.lang.Object) str85);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray68);
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(formatArray83);
        org.junit.Assert.assertNotNull(formatArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale59 = null;
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59, map60);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        extendedMessageFormat61.setLocale(locale67);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67, map73);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map86);
        java.util.Locale locale88 = extendedMessageFormat87.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88);
        extendedMessageFormat74.setLocale(locale88);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88, map91);
        extendedMessageFormat10.setLocale(locale88);
        java.lang.Object obj94 = extendedMessageFormat10.clone();
        java.lang.Class<?> wildcardClass95 = extendedMessageFormat10.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat1.getFormats();
        java.util.Locale locale8 = extendedMessageFormat1.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat3.parseObject("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat3.getFormats();
        java.text.Format[] formatArray20 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.lang.String str7 = extendedMessageFormat1.toPattern();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.lang.Object[] objArray25 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat23.getFormats();
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.text.Format[] formatArray28 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = extendedMessageFormat18.format((java.lang.Object) extendedMessageFormat23, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        extendedMessageFormat47.applyPattern("hi!");
        java.lang.String str52 = extendedMessageFormat47.toPattern();
        java.lang.String str53 = extendedMessageFormat47.toPattern();
        java.text.Format[] formatArray54 = extendedMessageFormat47.getFormats();
        extendedMessageFormat47.applyPattern("hi!");
        boolean boolean57 = extendedMessageFormat43.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.lang.Object[] objArray13 = extendedMessageFormat10.parse("hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Locale locale16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.lang.String str19 = extendedMessageFormat10.format((java.lang.Object) locale18);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        extendedMessageFormat22.applyPattern("");
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormats();
        java.lang.String str32 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray31);
        java.lang.String str33 = extendedMessageFormat22.format((java.lang.Object) formatArray31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40);
        extendedMessageFormat22.setLocale(locale40);
        extendedMessageFormat10.setLocale(locale40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        extendedMessageFormat4.setLocale(locale48);
        java.text.Format[] formatArray51 = extendedMessageFormat4.getFormats();
        java.lang.String str52 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNull(locale18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }
}

