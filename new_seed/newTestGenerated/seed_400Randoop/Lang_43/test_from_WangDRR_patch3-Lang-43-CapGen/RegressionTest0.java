import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14);
        java.text.Format[] formatArray16 = new java.text.Format[] { extendedMessageFormat5, extendedMessageFormat10, extendedMessageFormat15 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        boolean boolean8 = extendedMessageFormat2.equals((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.lang.Object[] objArray17 = new java.lang.Object[] { 10.0f, "", (byte) 10, false, (short) 100, locale14 };
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat3.format(objArray17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[10.0, , 10, false, 100, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[10.0, , 10, false, 100, null]");
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator6 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = new java.text.Format[] { extendedMessageFormat6 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.util.Locale locale6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((-1), (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.lang.Object obj9 = null;
        boolean boolean10 = extendedMessageFormat2.equals(obj9);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.lang.Object[] objArray9 = null;
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat2.format(objArray9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4);
        java.text.Format[] formatArray6 = new java.text.Format[] { extendedMessageFormat5 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = extendedMessageFormat2.format(objArray5, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object[] objArray9 = new java.lang.Object[] { (short) 0, (byte) 100, (short) 100 };
        java.lang.String str10 = java.text.MessageFormat.format("hi!", objArray9);
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = extendedMessageFormat3.format(objArray9, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 100, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat3.parseObject("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Locale locale11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((-1), (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.Class<?> wildcardClass4 = extendedMessageFormat3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator11 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = extendedMessageFormat2.format((java.lang.Object) (-1.0d), stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object obj5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator6 = extendedMessageFormat3.formatToCharacterIterator(obj5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.lang.Object[] objArray9 = new java.lang.Object[] {};
        java.lang.String str10 = java.text.MessageFormat.format("hi!", objArray9);
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = extendedMessageFormat2.format(objArray9, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.lang.Class<?> wildcardClass9 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        extendedMessageFormat12.applyPattern("");
        extendedMessageFormat12.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        extendedMessageFormat9.applyPattern("hi!");
        java.lang.Object obj14 = null;
        java.lang.String str15 = extendedMessageFormat9.format(obj14);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat5.parseObject("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        extendedMessageFormat5.applyPattern("");
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = extendedMessageFormat5.parse("", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = extendedMessageFormat8.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        boolean boolean5 = extendedMessageFormat3.equals((java.lang.Object) 100.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.text.Format[] formatArray8 = extendedMessageFormat6.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.String str13 = extendedMessageFormat8.toPattern();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.text.Format[] formatArray18 = new java.text.Format[] { extendedMessageFormat8, extendedMessageFormat16 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat8.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator8 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Float cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat2.format((java.lang.Object[]) formatArray9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer10 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat7, stringBuffer8, fieldPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        boolean boolean17 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat16);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator3 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat8.format((java.lang.Object[]) formatArray14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat8.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator14 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        extendedMessageFormat5.applyPattern("");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat5.setFormat(10, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.lang.String str14 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray13);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = new java.lang.Object[] { formatArray13, str24, 1 };
        java.lang.String str27 = java.text.MessageFormat.format("", objArray26);
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat6.format(objArray26, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[[], , 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        boolean boolean10 = extendedMessageFormat2.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.lang.Object obj6 = extendedMessageFormat5.clone();
        boolean boolean7 = extendedMessageFormat1.equals(obj6);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray11 = extendedMessageFormat8.parse("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        extendedMessageFormat5.applyPattern("hi!");
        java.lang.String str10 = extendedMessageFormat5.toPattern();
        boolean boolean11 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = extendedMessageFormat10.parseObject("hi!", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat3.parseObject("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray16 = extendedMessageFormat3.parse("hi!", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat10.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        java.lang.String str40 = extendedMessageFormat30.toPattern();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat45.applyPattern("");
        java.text.Format[] formatArray48 = new java.text.Format[] { extendedMessageFormat15, extendedMessageFormat20, extendedMessageFormat26, extendedMessageFormat30, extendedMessageFormat43, extendedMessageFormat45 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(formatArray48);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = extendedMessageFormat2.format((java.lang.Object) map10, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = extendedMessageFormat5.parseObject("hi!", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormats(formatArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.lang.Object[] objArray1 = null;
        java.lang.String str2 = java.text.MessageFormat.format("hi!", objArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.lang.Object[] objArray2 = new java.lang.Object[] {};
        java.lang.String str3 = java.text.MessageFormat.format("hi!", objArray2);
        java.lang.String str4 = java.text.MessageFormat.format("hi!", objArray2);
        java.lang.Class<?> wildcardClass5 = objArray2.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.Class<?> wildcardClass14 = locale11.getClass();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat5.format((java.lang.Object) wildcardClass14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        extendedMessageFormat18.applyPattern("hi!");
        boolean boolean21 = extendedMessageFormat5.equals((java.lang.Object) extendedMessageFormat18);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat6.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray8);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        extendedMessageFormat25.setLocale(locale34);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map51);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59, map64);
        java.text.Format[] formatArray66 = new java.text.Format[] { extendedMessageFormat20, extendedMessageFormat25, extendedMessageFormat38, extendedMessageFormat52, extendedMessageFormat65 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatsByArgumentIndex(formatArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray66);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.text.Format[] formatArray32 = new java.text.Format[] { extendedMessageFormat6, extendedMessageFormat11, extendedMessageFormat14, extendedMessageFormat24, extendedMessageFormat31 };
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray32);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format format8 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatByArgumentIndex((int) (short) 0, format8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        extendedMessageFormat5.applyPattern("");
        java.lang.Object obj8 = extendedMessageFormat5.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat3.format((java.lang.Object[]) formatArray17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.lang.String str29 = extendedMessageFormat23.format((java.lang.Object) formatArray28);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = extendedMessageFormat2.format((java.lang.Object) false, stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray11 = extendedMessageFormat9.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map15);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) 'a', (java.text.Format) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (short) -1, (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.lang.Object obj4 = extendedMessageFormat2.clone();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormat((int) '#', (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = extendedMessageFormat6.format((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat(10, (java.text.Format) extendedMessageFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray3 = extendedMessageFormat1.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = extendedMessageFormat2.format((java.lang.Object) (byte) 100, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.lang.Object obj10 = extendedMessageFormat9.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator11 = extendedMessageFormat3.formatToCharacterIterator(obj10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        boolean boolean17 = extendedMessageFormat3.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormats(formatArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        extendedMessageFormat8.setLocale(locale17);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        extendedMessageFormat23.applyPattern("hi!");
        java.lang.Class<?> wildcardClass26 = extendedMessageFormat23.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator27 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) wildcardClass26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.lang.Object obj6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator7 = extendedMessageFormat2.formatToCharacterIterator(obj6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.Object[] objArray15 = new java.lang.Object[] {};
        java.lang.String str16 = java.text.MessageFormat.format("hi!", objArray15);
        java.lang.String str17 = java.text.MessageFormat.format("", objArray15);
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat11.format(objArray15, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) '4', (java.text.Format) extendedMessageFormat6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat2.format(obj9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Object cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map14);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator16 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.lang.Class<?> wildcardClass6 = extendedMessageFormat5.getClass();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.lang.String str22 = extendedMessageFormat16.format((java.lang.Object) formatArray21);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        extendedMessageFormat19.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormat((int) '4', (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        extendedMessageFormat5.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat5.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.lang.String str13 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        extendedMessageFormat14.applyPattern("hi!");
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat11.format((java.lang.Object) extendedMessageFormat14, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        java.lang.String str6 = java.text.MessageFormat.format("hi!", objArray5);
        java.lang.String str7 = java.text.MessageFormat.format("hi!", objArray5);
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer10 = extendedMessageFormat2.format(objArray5, stringBuffer8, fieldPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        boolean boolean28 = extendedMessageFormat14.equals((java.lang.Object) locale27);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = extendedMessageFormat8.parseObject("hi!", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.Object[] objArray14 = extendedMessageFormat8.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((-1), (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        boolean boolean18 = extendedMessageFormat9.equals((java.lang.Object) extendedMessageFormat16);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj20 = null;
        java.lang.String str21 = extendedMessageFormat15.format(obj20);
        java.lang.Object obj22 = extendedMessageFormat15.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = extendedMessageFormat12.format(obj22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = extendedMessageFormat3.format((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.lang.Object obj13 = extendedMessageFormat12.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray17 = extendedMessageFormat15.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray12 = extendedMessageFormat8.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat2.parseObject("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat9.applyPattern("hi!");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat9.setLocale(locale32);
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat9, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = extendedMessageFormat3.parseObject("hi!", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        boolean boolean13 = extendedMessageFormat2.equals((java.lang.Object) formatArray12);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator12 = extendedMessageFormat8.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.lang.String str46 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        java.lang.Object[] objArray8 = extendedMessageFormat5.parse("hi!");
        java.text.Format[] formatArray9 = extendedMessageFormat5.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator10 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) extendedMessageFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.lang.Object obj7 = extendedMessageFormat5.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.lang.String str21 = extendedMessageFormat11.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat(100, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator10 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = extendedMessageFormat1.format((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat1.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.text.Format[] formatArray10 = extendedMessageFormat8.getFormats();
        java.lang.String str11 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray10);
        boolean boolean12 = extendedMessageFormat2.equals((java.lang.Object) "");
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        extendedMessageFormat31.setLocale(locale45);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map48);
        extendedMessageFormat10.setLocale(locale45);
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat10, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat12.parseObject("", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat2.parseObject("", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74, map77);
        extendedMessageFormat39.setLocale(locale74);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat(100, (java.text.Format) extendedMessageFormat39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = extendedMessageFormat1.format((java.lang.Object[]) formatArray39, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        boolean boolean19 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat18);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        extendedMessageFormat12.applyPattern("");
        extendedMessageFormat12.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = extendedMessageFormat20.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        boolean boolean19 = extendedMessageFormat15.equals((java.lang.Object) 'a');
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat3.parseObject("hi!", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map14);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator16 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        extendedMessageFormat8.setLocale(locale17);
        java.text.Format[] formatArray19 = extendedMessageFormat8.getFormats();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat1.format((java.lang.Object[]) formatArray19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat7.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        java.lang.String str21 = extendedMessageFormat10.format((java.lang.Object) formatArray19);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        extendedMessageFormat13.applyPattern("");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormats();
        java.lang.String str23 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray22);
        java.lang.String str24 = extendedMessageFormat13.format((java.lang.Object) formatArray22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        extendedMessageFormat13.setLocale(locale31);
        extendedMessageFormat9.setLocale(locale31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat(0, (java.text.Format) extendedMessageFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.Object obj13 = extendedMessageFormat8.clone();
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat8, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = extendedMessageFormat11.format((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.lang.String str18 = extendedMessageFormat8.toPattern();
        extendedMessageFormat8.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator6 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = extendedMessageFormat5.format((java.lang.Object[]) formatArray10, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map33);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = extendedMessageFormat23.format((java.lang.Object) "", stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat20, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = extendedMessageFormat3.parseObject("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        extendedMessageFormat31.setLocale(locale45);
        boolean boolean48 = extendedMessageFormat3.equals((java.lang.Object) locale45);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray36 = extendedMessageFormat18.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat32.parse("hi!", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = extendedMessageFormat1.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat8.format((java.lang.Object[]) formatArray17, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.lang.Class<?> wildcardClass48 = locale42.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator49 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) locale42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat3.parseObject("", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.lang.Class<?> wildcardClass14 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat29.setLocale(locale41);
        java.lang.String str47 = extendedMessageFormat29.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = extendedMessageFormat15.format((java.lang.Object) str47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = extendedMessageFormat9.format((java.lang.Object) locale18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        java.util.Locale locale13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.lang.String str19 = extendedMessageFormat14.format((java.lang.Object) locale16);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormat((int) (short) 100, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat18.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj31 = extendedMessageFormat1.clone();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        boolean boolean27 = extendedMessageFormat15.equals((java.lang.Object) formatArray25);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatsByArgumentIndex(formatArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.lang.String str21 = extendedMessageFormat15.format((java.lang.Object) formatArray20);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat1.parseObject("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.Object obj9 = extendedMessageFormat8.clone();
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray16 = extendedMessageFormat14.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.lang.Object[] objArray12 = null;
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = extendedMessageFormat10.format(objArray12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator12 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormats();
        boolean boolean23 = extendedMessageFormat15.equals((java.lang.Object) extendedMessageFormat21);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat3.format((java.lang.Object[]) formatArray19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) '#', (java.text.Format) extendedMessageFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex(100, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = extendedMessageFormat10.parseObject("", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat1.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        extendedMessageFormat3.applyPattern("");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.String str13 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        java.lang.String str14 = extendedMessageFormat3.format((java.lang.Object) formatArray12);
        java.lang.String str15 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        java.lang.Class<?> wildcardClass16 = formatArray12.getClass();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        extendedMessageFormat34.setLocale(locale48);
        java.text.Format[] formatArray51 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = extendedMessageFormat15.format((java.lang.Object[]) formatArray51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("");
        extendedMessageFormat11.applyPattern("hi!");
        java.lang.String str16 = extendedMessageFormat11.toPattern();
        java.lang.String str17 = extendedMessageFormat11.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat11.getFormats();
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat2.format((java.lang.Object[]) formatArray18, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.String str13 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        java.lang.String str14 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        boolean boolean15 = extendedMessageFormat3.equals((java.lang.Object) str14);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator6 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.text.Format[] formatArray10 = extendedMessageFormat8.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.lang.Object[] objArray9 = extendedMessageFormat7.parse("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat7.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = extendedMessageFormat20.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = extendedMessageFormat2.format((java.lang.Object[]) formatArray23, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.lang.String str31 = extendedMessageFormat25.format((java.lang.Object) formatArray30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = extendedMessageFormat11.format((java.lang.Object) str31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        boolean boolean13 = extendedMessageFormat11.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat10.setLocale(locale32);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((-1), (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat35.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = extendedMessageFormat14.format((java.lang.Object) extendedMessageFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray11 = extendedMessageFormat2.parse("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat36.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator39 = extendedMessageFormat18.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("hi!");
        extendedMessageFormat37.applyPattern("");
        boolean boolean42 = extendedMessageFormat18.equals((java.lang.Object) extendedMessageFormat37);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat15.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat3.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        extendedMessageFormat20.applyPattern("");
        extendedMessageFormat20.applyPattern("hi!");
        java.lang.String str25 = extendedMessageFormat20.toPattern();
        java.lang.String str26 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat20.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.lang.Object[] objArray40 = extendedMessageFormat22.parse("hi!");
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = extendedMessageFormat3.format(objArray40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat3.parseObject("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map34);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        extendedMessageFormat35.setLocale(locale42);
        java.text.Format[] formatArray48 = extendedMessageFormat35.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray11 = extendedMessageFormat6.parse("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.lang.Class<?> wildcardClass6 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("");
        boolean boolean16 = extendedMessageFormat12.equals((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat2.parseObject("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator12 = extendedMessageFormat9.formatToCharacterIterator((java.lang.Object) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        boolean boolean17 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat15);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray28 = extendedMessageFormat3.parse("", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat13.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatByArgumentIndex((-1), (java.text.Format) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.lang.String str24 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat14.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) 'a', (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        extendedMessageFormat13.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) 'a', (java.text.Format) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray29);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat3.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat6.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormats();
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = extendedMessageFormat12.parseObject("", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.lang.Object obj6 = extendedMessageFormat5.clone();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat18.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.lang.Object[] objArray11 = extendedMessageFormat9.parse("hi!");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray18 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = extendedMessageFormat9.formatToCharacterIterator((java.lang.Object) formatArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator20 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) attributedCharacterIterator19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.text.AttributedString$AttributedStringIterator cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.lang.String str48 = extendedMessageFormat47.toPattern();
        java.text.Format[] formatArray49 = extendedMessageFormat47.getFormats();
        java.lang.String str50 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray49);
        java.lang.String str51 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray49);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormatsByArgumentIndex(formatArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Locale locale19 = extendedMessageFormat15.getLocale();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat38.setLocale(locale52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = extendedMessageFormat15.format((java.lang.Object) extendedMessageFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        extendedMessageFormat16.applyPattern("hi!");
        java.lang.Object obj21 = extendedMessageFormat16.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj32 = extendedMessageFormat1.parseObject("hi!");
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = extendedMessageFormat1.parseObject("", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat1.parse("", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator5 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Float cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.lang.Object obj34 = extendedMessageFormat33.clone();
        boolean boolean35 = extendedMessageFormat18.equals(obj34);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat21.applyPattern("");
        java.lang.String str24 = extendedMessageFormat21.toPattern();
        java.util.Locale locale25 = extendedMessageFormat21.getLocale();
        java.util.Locale locale26 = extendedMessageFormat21.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (byte) 1, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        boolean boolean60 = extendedMessageFormat18.equals((java.lang.Object) extendedMessageFormat58);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat10.applyPattern("");
        java.lang.String str13 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat10.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray34 = extendedMessageFormat1.parse("hi!", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map60);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68);
        extendedMessageFormat61.setLocale(locale68);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat9.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        extendedMessageFormat3.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.lang.String str7 = extendedMessageFormat6.toPattern();
        java.lang.Object[] objArray9 = extendedMessageFormat6.parse("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Locale locale12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.lang.String str15 = extendedMessageFormat6.format((java.lang.Object) locale14);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.lang.String str28 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        java.lang.String str29 = extendedMessageFormat18.format((java.lang.Object) formatArray27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        extendedMessageFormat18.setLocale(locale36);
        extendedMessageFormat6.setLocale(locale36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = extendedMessageFormat2.format((java.lang.Object) locale36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat47.applyPattern("hi!");
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        extendedMessageFormat52.applyPattern("");
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        java.lang.String str60 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray61 = extendedMessageFormat59.getFormats();
        java.lang.String str62 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray61);
        java.lang.String str63 = extendedMessageFormat52.format((java.lang.Object) formatArray61);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map72);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70);
        extendedMessageFormat52.setLocale(locale70);
        extendedMessageFormat47.setLocale(locale70);
        extendedMessageFormat45.setLocale(locale70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = extendedMessageFormat10.format((java.lang.Object) locale70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat15.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.Class<?> wildcardClass15 = extendedMessageFormat14.getClass();
        boolean boolean16 = extendedMessageFormat2.equals((java.lang.Object) wildcardClass15);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.lang.Object[] objArray15 = null;
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = extendedMessageFormat3.format(objArray15, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = extendedMessageFormat2.format((java.lang.Object[]) formatArray11, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = extendedMessageFormat10.parseObject("", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.String str13 = extendedMessageFormat10.toPattern();
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat10, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        java.lang.String str44 = extendedMessageFormat43.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat43.getFormats();
        java.lang.String str46 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray45);
        java.lang.String str47 = extendedMessageFormat36.format((java.lang.Object) formatArray45);
        java.lang.String str48 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray45);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat32.setFormats(formatArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = extendedMessageFormat3.parseObject("", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = extendedMessageFormat10.parseObject("", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray44 = extendedMessageFormat37.parse("hi!", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        extendedMessageFormat3.applyPattern("");
        java.lang.Object obj8 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map23);
        boolean boolean25 = extendedMessageFormat10.equals((java.lang.Object) map23);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.Object obj16 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        extendedMessageFormat24.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormats();
        java.lang.String str57 = extendedMessageFormat42.format((java.lang.Object) formatArray56);
        boolean boolean58 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat42);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        extendedMessageFormat11.setLocale(locale24);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray8);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat2.parseObject("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormatsByArgumentIndex(formatArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat34.setLocale(locale40);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map46);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        extendedMessageFormat47.setLocale(locale61);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map64);
        boolean boolean66 = extendedMessageFormat10.equals((java.lang.Object) extendedMessageFormat65);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = extendedMessageFormat2.parseObject("hi!", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.lang.String str20 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map40);
        extendedMessageFormat10.setLocale(locale34);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (byte) 100, (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = extendedMessageFormat2.parseObject("", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray29 = extendedMessageFormat10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray14 = null;
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat3.format(objArray14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat6.applyPattern("");
        java.lang.String str9 = extendedMessageFormat6.toPattern();
        java.text.Format[] formatArray10 = extendedMessageFormat6.getFormats();
        java.lang.StringBuffer stringBuffer11 = null;
        java.text.FieldPosition fieldPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer13 = extendedMessageFormat3.format((java.lang.Object[]) formatArray10, stringBuffer11, fieldPosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat2.format((java.lang.Object) locale19, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat14.format((java.lang.Object[]) formatArray27, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        extendedMessageFormat18.applyPattern("hi!");
        java.lang.Object[] objArray24 = extendedMessageFormat18.parse("hi!");
        extendedMessageFormat18.applyPattern("");
        boolean boolean27 = extendedMessageFormat14.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator18 = extendedMessageFormat13.formatToCharacterIterator((java.lang.Object) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.lang.Class<?> wildcardClass4 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale14 = extendedMessageFormat3.getLocale();
        java.text.Format format16 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat(1, format16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale14);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = extendedMessageFormat5.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.StringBuffer stringBuffer24 = null;
        java.text.FieldPosition fieldPosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer26 = extendedMessageFormat3.format((java.lang.Object[]) formatArray23, stringBuffer24, fieldPosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format format6 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) -1, format6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat12.applyPattern("hi!");
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.lang.String str27 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray26);
        java.lang.String str28 = extendedMessageFormat17.format((java.lang.Object) formatArray26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        extendedMessageFormat17.setLocale(locale35);
        extendedMessageFormat12.setLocale(locale35);
        java.util.Locale locale42 = extendedMessageFormat12.getLocale();
        java.util.Locale locale43 = extendedMessageFormat12.getLocale();
        java.text.Format[] formatArray44 = extendedMessageFormat12.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        java.lang.Object obj59 = extendedMessageFormat38.clone();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat20.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.lang.Class<?> wildcardClass7 = extendedMessageFormat3.getClass();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.lang.String str16 = extendedMessageFormat6.toPattern();
        java.lang.Object[] objArray18 = extendedMessageFormat6.parse("hi!");
        java.text.Format[] formatArray19 = extendedMessageFormat6.getFormats();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat2.format((java.lang.Object[]) formatArray19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        extendedMessageFormat24.applyPattern("");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.lang.String str32 = extendedMessageFormat31.toPattern();
        java.text.Format[] formatArray33 = extendedMessageFormat31.getFormats();
        java.lang.String str34 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray33);
        java.lang.String str35 = extendedMessageFormat24.format((java.lang.Object) formatArray33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        extendedMessageFormat24.setLocale(locale42);
        extendedMessageFormat20.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.lang.String str26 = extendedMessageFormat16.toPattern();
        java.lang.Object[] objArray28 = extendedMessageFormat16.parse("hi!");
        java.lang.String str29 = extendedMessageFormat16.toPattern();
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat10.format((java.lang.Object) str29, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.lang.Object[] objArray44 = extendedMessageFormat41.parse("hi!");
        java.text.Format[] formatArray45 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass46 = extendedMessageFormat41.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator47 = extendedMessageFormat38.formatToCharacterIterator((java.lang.Object) wildcardClass46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.lang.String str22 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray21);
        boolean boolean23 = extendedMessageFormat10.equals((java.lang.Object) formatArray21);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = extendedMessageFormat37.parseObject("hi!", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = extendedMessageFormat1.parseObject("", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (short) 10, (java.text.Format) extendedMessageFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale14 = extendedMessageFormat3.getLocale();
        boolean boolean16 = extendedMessageFormat3.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray43 = extendedMessageFormat40.parse("", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormats();
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = extendedMessageFormat2.format((java.lang.Object[]) formatArray11, stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Locale locale19 = extendedMessageFormat15.getLocale();
        java.util.Locale locale20 = extendedMessageFormat15.getLocale();
        java.lang.Object obj21 = extendedMessageFormat15.clone();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        extendedMessageFormat2.applyPattern("");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = extendedMessageFormat6.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map32);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40);
        extendedMessageFormat33.setLocale(locale40);
        boolean boolean46 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat33);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        java.text.Format[] formatArray38 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray38);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat6.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = extendedMessageFormat1.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map56);
        extendedMessageFormat18.setLocale(locale53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = extendedMessageFormat10.format((java.lang.Object) extendedMessageFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.Object obj14 = extendedMessageFormat13.clone();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        boolean boolean27 = extendedMessageFormat15.equals((java.lang.Object) locale26);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.lang.StringBuffer stringBuffer12 = null;
        java.text.FieldPosition fieldPosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer14 = extendedMessageFormat3.format((java.lang.Object) "", stringBuffer12, fieldPosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat15.parseObject("", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.String str13 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray12);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat2.parseObject("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat15.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat15.getFormats();
        java.text.Format[] formatArray20 = extendedMessageFormat15.getFormats();
        boolean boolean21 = extendedMessageFormat2.equals((java.lang.Object) formatArray20);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map31);
        java.lang.String str33 = extendedMessageFormat32.toPattern();
        java.lang.Object obj34 = extendedMessageFormat32.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator35 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        extendedMessageFormat31.setLocale(locale45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.text.Format[] formatArray51 = extendedMessageFormat49.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.util.Locale locale19 = extendedMessageFormat17.getLocale();
        extendedMessageFormat17.applyPattern("hi!");
        java.lang.Object obj23 = extendedMessageFormat17.parseObject("hi!");
        boolean boolean24 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat17);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(locale19);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.lang.Object[] objArray13 = extendedMessageFormat11.parse("hi!");
        extendedMessageFormat11.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) locale13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat2.format((java.lang.Object[]) formatArray9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat15.setLocale(locale52);
        java.lang.Object obj61 = extendedMessageFormat15.clone();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format format12 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormat((int) (short) -1, format12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = extendedMessageFormat3.format((java.lang.Object) formatArray12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) '4', (java.text.Format) extendedMessageFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.lang.Object obj3 = extendedMessageFormat1.clone();
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat10.setLocale(locale33);
        java.util.Locale locale40 = extendedMessageFormat10.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat2.parse("", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.Object obj43 = extendedMessageFormat1.clone();
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.StringBuffer stringBuffer17 = null;
        java.text.FieldPosition fieldPosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer19 = extendedMessageFormat2.format((java.lang.Object[]) formatArray15, stringBuffer17, fieldPosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        extendedMessageFormat11.setLocale(locale24);
        boolean boolean31 = extendedMessageFormat6.equals((java.lang.Object) extendedMessageFormat11);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.util.Locale locale19 = extendedMessageFormat17.getLocale();
        extendedMessageFormat17.applyPattern("hi!");
        java.lang.Object obj23 = extendedMessageFormat17.parseObject("hi!");
        java.text.Format[] formatArray24 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = extendedMessageFormat2.format((java.lang.Object[]) formatArray24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(locale19);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(formatArray24);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map37);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45);
        extendedMessageFormat38.setLocale(locale45);
        java.text.Format[] formatArray51 = extendedMessageFormat38.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = extendedMessageFormat18.format((java.lang.Object) extendedMessageFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("hi!");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat2.parseObject("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        extendedMessageFormat25.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormats();
        java.lang.String str58 = extendedMessageFormat43.format((java.lang.Object) formatArray57);
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) formatArray57);
        java.util.Locale locale64 = null;
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64, map65);
        java.text.Format[] formatArray67 = extendedMessageFormat66.getFormatsByArgumentIndex();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map70);
        java.util.Locale locale72 = extendedMessageFormat71.getLocale();
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map73);
        extendedMessageFormat66.setLocale(locale72);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map77);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 0, (java.text.Format) extendedMessageFormat78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(formatArray67);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_US");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.lang.Object obj6 = extendedMessageFormat1.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.lang.Object obj12 = extendedMessageFormat11.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        extendedMessageFormat49.applyPattern("");
        java.lang.String str52 = extendedMessageFormat49.toPattern();
        java.util.Locale locale53 = extendedMessageFormat49.getLocale();
        extendedMessageFormat1.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        extendedMessageFormat31.setLocale(locale45);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map48);
        extendedMessageFormat10.setLocale(locale45);
        java.util.Locale locale51 = extendedMessageFormat10.getLocale();
        boolean boolean52 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat23.setLocale(locale35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.text.Format[] formatArray52 = extendedMessageFormat50.getFormats();
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray52);
        java.lang.String str54 = extendedMessageFormat43.format((java.lang.Object) formatArray52);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61);
        extendedMessageFormat43.setLocale(locale61);
        extendedMessageFormat23.setLocale(locale61);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormats();
        java.text.Format[] formatArray10 = extendedMessageFormat8.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray10);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.text.FieldPosition fieldPosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer6 = extendedMessageFormat2.format((java.lang.Object) (short) 10, stringBuffer4, fieldPosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat8.parseObject("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        extendedMessageFormat20.applyPattern("");
        extendedMessageFormat20.applyPattern("hi!");
        java.lang.Object[] objArray26 = extendedMessageFormat20.parse("hi!");
        extendedMessageFormat20.applyPattern("");
        java.text.Format[] formatArray29 = extendedMessageFormat20.getFormats();
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat20, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray29);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat2.parseObject("", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.lang.Object[] objArray53 = extendedMessageFormat51.parse("hi!");
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.lang.Object[] objArray59 = extendedMessageFormat56.parse("hi!");
        java.text.Format[] formatArray60 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = extendedMessageFormat51.formatToCharacterIterator((java.lang.Object) formatArray60);
        java.lang.String str62 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray60);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        extendedMessageFormat3.applyPattern("hi!");
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat3.parse("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat1.format((java.lang.Object) locale16, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray16 = extendedMessageFormat11.parse("", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex((int) (byte) 1, (java.text.Format) extendedMessageFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat2.setLocale(locale20);
        java.lang.String str26 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = extendedMessageFormat2.parseObject("", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray21 = extendedMessageFormat18.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.lang.Object obj33 = extendedMessageFormat32.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = extendedMessageFormat3.format((java.lang.Object) 10L, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map41);
        java.text.Format[] formatArray43 = extendedMessageFormat42.getFormatsByArgumentIndex();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        extendedMessageFormat42.setLocale(locale51);
        java.text.Format[] formatArray53 = extendedMessageFormat42.getFormats();
        java.util.Locale locale54 = extendedMessageFormat42.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) (short) -1, (java.text.Format) extendedMessageFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.lang.String str47 = extendedMessageFormat14.toPattern();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        java.text.Format[] formatArray63 = extendedMessageFormat62.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatsByArgumentIndex(formatArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray63);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat3.parseObject("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        extendedMessageFormat5.applyPattern("hi!");
        java.lang.Object[] objArray11 = extendedMessageFormat5.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) '4', (java.text.Format) extendedMessageFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat8.applyPattern("");
        java.lang.String str11 = extendedMessageFormat8.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormats(formatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        extendedMessageFormat32.setLocale(locale46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormats();
        java.lang.String str65 = extendedMessageFormat50.format((java.lang.Object) formatArray64);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.lang.Class<?> wildcardClass11 = extendedMessageFormat10.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str8 = extendedMessageFormat3.toPattern();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.lang.Object[] objArray14 = extendedMessageFormat12.parse("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat22.applyPattern("hi!");
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        extendedMessageFormat27.applyPattern("");
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        java.lang.String str35 = extendedMessageFormat34.toPattern();
        java.text.Format[] formatArray36 = extendedMessageFormat34.getFormats();
        java.lang.String str37 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray36);
        java.lang.String str38 = extendedMessageFormat27.format((java.lang.Object) formatArray36);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45);
        extendedMessageFormat27.setLocale(locale45);
        extendedMessageFormat22.setLocale(locale45);
        java.util.Locale locale52 = extendedMessageFormat22.getLocale();
        java.util.Locale locale53 = extendedMessageFormat22.getLocale();
        java.text.Format[] formatArray54 = extendedMessageFormat22.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatsByArgumentIndex(formatArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray54);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormats();
        java.text.Format[] formatArray34 = extendedMessageFormat32.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(formatArray34);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator22 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat17.applyPattern("");
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat14.format((java.lang.Object) extendedMessageFormat17, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.lang.Object obj13 = null;
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = extendedMessageFormat11.format(obj13, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat8.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat5.setFormat((int) '4', (java.text.Format) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!");
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        java.lang.String str24 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str25 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str26 = java.text.MessageFormat.format("", objArray23);
        java.lang.String str27 = extendedMessageFormat15.format((java.lang.Object) objArray23);
        java.lang.Class<?> wildcardClass28 = extendedMessageFormat15.getClass();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormat((int) '#', (java.text.Format) extendedMessageFormat39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        extendedMessageFormat29.applyPattern("");
        extendedMessageFormat29.applyPattern("hi!");
        java.lang.Object[] objArray35 = extendedMessageFormat29.parse("hi!");
        java.lang.String str36 = java.text.MessageFormat.format("hi!", objArray35);
        java.lang.StringBuffer stringBuffer37 = null;
        java.text.FieldPosition fieldPosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer39 = extendedMessageFormat3.format(objArray35, stringBuffer37, fieldPosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        extendedMessageFormat59.setLocale(locale68);
        java.text.Format[] formatArray70 = extendedMessageFormat59.getFormats();
        java.util.Locale locale71 = extendedMessageFormat59.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormat((int) (short) 1, (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object obj14 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat2.setLocale(locale24);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray33 = extendedMessageFormat2.parse("hi!", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        boolean boolean14 = extendedMessageFormat10.equals((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormats();
        java.lang.String str47 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray46);
        java.lang.StringBuffer stringBuffer48 = null;
        java.text.FieldPosition fieldPosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer50 = extendedMessageFormat40.format((java.lang.Object[]) formatArray46, stringBuffer48, fieldPosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.lang.String str13 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer15 = null;
        java.text.FieldPosition fieldPosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer17 = extendedMessageFormat3.format((java.lang.Object[]) formatArray14, stringBuffer15, fieldPosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map15);
        extendedMessageFormat16.applyPattern("hi!");
        java.text.Format[] formatArray19 = extendedMessageFormat16.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat18.format((java.lang.Object) formatArray35, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.text.Format format10 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormatByArgumentIndex((int) (byte) 100, format10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray40);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.text.Format[] formatArray35 = extendedMessageFormat33.getFormats();
        java.lang.String str36 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray35);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map32);
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        java.lang.Object[] objArray39 = extendedMessageFormat37.parse("hi!");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map62);
        extendedMessageFormat37.setLocale(locale53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = extendedMessageFormat33.format((java.lang.Object) extendedMessageFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.lang.String str41 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray40);
        java.lang.String str42 = extendedMessageFormat31.format((java.lang.Object) formatArray40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        extendedMessageFormat31.setLocale(locale49);
        extendedMessageFormat11.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.lang.Object obj57 = extendedMessageFormat56.clone();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map45);
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map49);
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.lang.String str52 = extendedMessageFormat46.format((java.lang.Object) formatArray51);
        java.lang.String str53 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = extendedMessageFormat1.parseObject("hi!", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat1.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.String str43 = extendedMessageFormat1.toPattern();
        java.lang.Class<?> wildcardClass44 = extendedMessageFormat1.getClass();
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat35.applyPattern("hi!");
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        extendedMessageFormat40.applyPattern("");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.lang.String str48 = extendedMessageFormat47.toPattern();
        java.text.Format[] formatArray49 = extendedMessageFormat47.getFormats();
        java.lang.String str50 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray49);
        java.lang.String str51 = extendedMessageFormat40.format((java.lang.Object) formatArray49);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map60);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58);
        extendedMessageFormat40.setLocale(locale58);
        extendedMessageFormat35.setLocale(locale58);
        java.util.Locale locale65 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (byte) 1, (java.text.Format) extendedMessageFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray13 = extendedMessageFormat2.parse("", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormatsByArgumentIndex(formatArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.Class<?> wildcardClass13 = extendedMessageFormat11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator14 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.lang.String str32 = extendedMessageFormat22.toPattern();
        extendedMessageFormat22.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormat(100, (java.text.Format) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.Object obj2 = extendedMessageFormat1.clone();
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.lang.String str41 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray40);
        java.lang.String str42 = extendedMessageFormat31.format((java.lang.Object) formatArray40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        extendedMessageFormat31.setLocale(locale49);
        extendedMessageFormat11.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.util.Locale locale72 = null;
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map73);
        java.text.Format[] formatArray75 = extendedMessageFormat74.getFormatsByArgumentIndex();
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map81);
        extendedMessageFormat74.setLocale(locale80);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        extendedMessageFormat68.setLocale(locale80);
        java.lang.String str86 = extendedMessageFormat68.toPattern();
        extendedMessageFormat68.applyPattern("hi!");
        java.lang.StringBuffer stringBuffer89 = null;
        java.text.FieldPosition fieldPosition90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer91 = extendedMessageFormat56.format((java.lang.Object) "hi!", stringBuffer89, fieldPosition90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat18.parse("hi!", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        extendedMessageFormat31.setLocale(locale45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator49 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map32);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator49 = extendedMessageFormat33.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        extendedMessageFormat7.setLocale(locale16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        extendedMessageFormat18.applyPattern("hi!");
        java.lang.Object obj22 = extendedMessageFormat18.parseObject("hi!");
        java.lang.Object[] objArray26 = new java.lang.Object[] {};
        java.lang.String str27 = java.text.MessageFormat.format("hi!", objArray26);
        java.lang.String str28 = java.text.MessageFormat.format("hi!", objArray26);
        java.lang.String str29 = java.text.MessageFormat.format("", objArray26);
        java.lang.String str30 = extendedMessageFormat18.format((java.lang.Object) objArray26);
        java.lang.StringBuffer stringBuffer31 = null;
        java.text.FieldPosition fieldPosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer33 = extendedMessageFormat2.format(objArray26, stringBuffer31, fieldPosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object obj5 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.lang.Object[] objArray14 = extendedMessageFormat12.parse("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormats();
        java.lang.String str16 = extendedMessageFormat12.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormat(100, (java.text.Format) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.lang.Class<?> wildcardClass18 = locale14.getClass();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map52);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        extendedMessageFormat53.setLocale(locale67);
        java.text.Format[] formatArray70 = extendedMessageFormat53.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray70);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.text.Format[] formatArray7 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object obj15 = null;
        java.lang.String str16 = extendedMessageFormat10.format(obj15);
        boolean boolean17 = extendedMessageFormat2.equals((java.lang.Object) str16);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.lang.Object[] objArray24 = extendedMessageFormat22.parse("hi!");
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.lang.String str28 = extendedMessageFormat27.toPattern();
        java.lang.Object[] objArray30 = extendedMessageFormat27.parse("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = extendedMessageFormat22.formatToCharacterIterator((java.lang.Object) formatArray31);
        java.util.Locale locale33 = extendedMessageFormat22.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        extendedMessageFormat36.applyPattern("hi!");
        java.lang.String str41 = extendedMessageFormat36.toPattern();
        java.lang.String str42 = extendedMessageFormat36.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat36.getFormats();
        java.lang.String str44 = extendedMessageFormat22.format((java.lang.Object) formatArray43);
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = extendedMessageFormat18.format((java.lang.Object[]) formatArray43, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNull(locale33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat18.formatToCharacterIterator((java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat37.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormats();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.lang.Object[] objArray17 = extendedMessageFormat15.parse("hi!");
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.lang.Object[] objArray23 = extendedMessageFormat20.parse("hi!");
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) formatArray24);
        java.util.Locale locale26 = extendedMessageFormat15.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNull(locale26);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.lang.String str19 = extendedMessageFormat17.toPattern();
        java.lang.Object obj20 = extendedMessageFormat17.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator21 = extendedMessageFormat2.formatToCharacterIterator(obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.lang.String str25 = extendedMessageFormat15.toPattern();
        java.lang.Object[] objArray27 = extendedMessageFormat15.parse("hi!");
        java.lang.String str28 = java.text.MessageFormat.format("hi!", objArray27);
        boolean boolean29 = extendedMessageFormat10.equals((java.lang.Object) objArray27);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat3.setLocale(locale26);
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.lang.String str38 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        java.lang.String str48 = extendedMessageFormat47.toPattern();
        java.lang.Object[] objArray50 = new java.lang.Object[] { formatArray37, str48, 1 };
        java.lang.String str51 = java.text.MessageFormat.format("", objArray50);
        java.lang.String str52 = java.text.MessageFormat.format("hi!", objArray50);
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = extendedMessageFormat3.format(objArray50, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[], , 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat4.applyPattern("");
        java.lang.String str7 = extendedMessageFormat4.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormats();
        java.text.Format[] formatArray9 = extendedMessageFormat4.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.lang.String str26 = extendedMessageFormat3.toPattern();
        java.lang.Object obj27 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.text.Format[] formatArray54 = extendedMessageFormat53.getFormats();
        java.lang.String str55 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray54);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormatsByArgumentIndex(formatArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = extendedMessageFormat1.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat21.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        java.lang.String str53 = extendedMessageFormat43.toPattern();
        java.lang.Object[] objArray55 = extendedMessageFormat43.parse("hi!");
        java.text.Format[] formatArray56 = extendedMessageFormat43.getFormats();
        java.lang.String str57 = extendedMessageFormat43.toPattern();
        java.util.Locale locale58 = extendedMessageFormat43.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat39.formatToCharacterIterator((java.lang.Object) locale58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.lang.String str44 = extendedMessageFormat43.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object obj7 = null;
        java.lang.String str8 = extendedMessageFormat2.format(obj7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        extendedMessageFormat41.applyPattern("hi!");
        java.text.Format[] formatArray44 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = extendedMessageFormat10.format((java.lang.Object[]) formatArray44, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.lang.Object obj14 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        extendedMessageFormat2.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat11.setLocale(locale34);
        java.util.Locale locale41 = extendedMessageFormat11.getLocale();
        extendedMessageFormat11.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat12.format((java.lang.Object) formatArray17);
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray17);
        java.lang.Class<?> wildcardClass20 = formatArray17.getClass();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.lang.String str7 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat1.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatsByArgumentIndex(formatArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormatsByArgumentIndex();
        boolean boolean32 = extendedMessageFormat25.equals((java.lang.Object) extendedMessageFormat29);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj32 = extendedMessageFormat1.parseObject("hi!");
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray35 = extendedMessageFormat1.parse("", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        java.lang.String str14 = extendedMessageFormat11.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.String str16 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) str16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        extendedMessageFormat58.applyPattern("");
        extendedMessageFormat58.applyPattern("hi!");
        java.lang.Object[] objArray64 = extendedMessageFormat58.parse("hi!");
        extendedMessageFormat58.applyPattern("");
        java.text.Format[] formatArray67 = extendedMessageFormat58.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(formatArray67);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.lang.Object obj34 = extendedMessageFormat1.clone();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormat(0, (java.text.Format) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = extendedMessageFormat39.parseObject("", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        extendedMessageFormat36.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50, map55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50, map57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) '#', (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        extendedMessageFormat44.applyPattern("");
        extendedMessageFormat44.applyPattern("hi!");
        java.lang.Object[] objArray50 = extendedMessageFormat44.parse("hi!");
        java.lang.Object obj51 = extendedMessageFormat44.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = extendedMessageFormat41.format(obj51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormats();
        java.lang.String str32 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray31);
        java.lang.StringBuffer stringBuffer33 = null;
        java.text.FieldPosition fieldPosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer35 = extendedMessageFormat2.format((java.lang.Object[]) formatArray31, stringBuffer33, fieldPosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale59 = null;
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59, map60);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        extendedMessageFormat61.setLocale(locale67);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67, map73);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map86);
        java.util.Locale locale88 = extendedMessageFormat87.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88);
        extendedMessageFormat74.setLocale(locale88);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88, map91);
        extendedMessageFormat10.setLocale(locale88);
        java.lang.Class<?> wildcardClass94 = locale88.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        extendedMessageFormat23.setLocale(locale34);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormat((int) 'a', (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat18.setLocale(locale25);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.lang.String str32 = extendedMessageFormat30.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat2.parseObject("hi!", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        extendedMessageFormat12.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator22 = extendedMessageFormat12.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str49 = extendedMessageFormat48.toPattern();
        java.text.Format[] formatArray50 = extendedMessageFormat48.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormats(formatArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map44);
        extendedMessageFormat37.setLocale(locale43);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map49);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64);
        extendedMessageFormat50.setLocale(locale64);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64, map67);
        extendedMessageFormat29.setLocale(locale64);
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = extendedMessageFormat20.format((java.lang.Object) extendedMessageFormat29, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        extendedMessageFormat18.setLocale(locale27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        extendedMessageFormat29.applyPattern("hi!");
        java.lang.Object obj33 = extendedMessageFormat29.parseObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormat((int) (byte) 100, (java.text.Format) extendedMessageFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.lang.String str28 = extendedMessageFormat18.toPattern();
        java.lang.Object[] objArray30 = extendedMessageFormat18.parse("hi!");
        java.text.Format[] formatArray31 = extendedMessageFormat18.getFormats();
        java.lang.StringBuffer stringBuffer32 = null;
        java.text.FieldPosition fieldPosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer34 = extendedMessageFormat3.format((java.lang.Object[]) formatArray31, stringBuffer32, fieldPosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat29.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        extendedMessageFormat49.applyPattern("");
        java.util.Locale locale54 = null;
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        java.lang.String str57 = extendedMessageFormat56.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat56.getFormats();
        java.lang.String str59 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray58);
        java.lang.String str60 = extendedMessageFormat49.format((java.lang.Object) formatArray58);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67);
        extendedMessageFormat49.setLocale(locale67);
        extendedMessageFormat29.setLocale(locale67);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67);
        java.text.Format[] formatArray75 = extendedMessageFormat74.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray75);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray30 = extendedMessageFormat28.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        extendedMessageFormat50.applyPattern("");
        java.lang.String str53 = extendedMessageFormat50.toPattern();
        java.util.Locale locale54 = extendedMessageFormat50.getLocale();
        extendedMessageFormat2.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map65);
        extendedMessageFormat66.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat56.setFormatByArgumentIndex((int) (short) 10, (java.text.Format) extendedMessageFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        extendedMessageFormat17.setLocale(locale26);
        java.text.Format[] formatArray28 = extendedMessageFormat17.getFormats();
        java.util.Locale locale29 = extendedMessageFormat17.getLocale();
        java.lang.String str30 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat17.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        extendedMessageFormat22.setLocale(locale31);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map50);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        extendedMessageFormat51.setLocale(locale65);
        extendedMessageFormat22.setLocale(locale65);
        java.lang.Object obj69 = extendedMessageFormat22.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator70 = extendedMessageFormat18.formatToCharacterIterator((java.lang.Object) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.lang.String str31 = extendedMessageFormat25.format((java.lang.Object) formatArray30);
        java.lang.String str32 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat12.getFormats();
        java.util.Locale locale19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex((int) '4', (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNull(locale21);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat3.parseObject("", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.lang.Class<?> wildcardClass87 = extendedMessageFormat6.getClass();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        java.util.Locale locale66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66);
        java.util.Locale locale69 = null;
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map70);
        java.lang.String str72 = extendedMessageFormat67.format((java.lang.Object) locale69);
        java.lang.StringBuffer stringBuffer73 = null;
        java.text.FieldPosition fieldPosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer75 = extendedMessageFormat64.format((java.lang.Object) str72, stringBuffer73, fieldPosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map60);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        extendedMessageFormat61.setLocale(locale75);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map87);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map89);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map91);
        java.text.Format[] formatArray93 = extendedMessageFormat92.getFormats();
        java.lang.String str94 = extendedMessageFormat79.format((java.lang.Object) formatArray93);
        java.text.Format[] formatArray95 = extendedMessageFormat79.getFormats();
        extendedMessageFormat79.applyPattern("");
        java.lang.String str98 = extendedMessageFormat79.toPattern();
        boolean boolean99 = extendedMessageFormat40.equals((java.lang.Object) str98);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNotNull(formatArray95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.text.Format[] formatArray87 = extendedMessageFormat6.getFormats();
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map91);
        java.util.Locale locale93 = extendedMessageFormat92.getLocale();
        java.util.Map map94 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat95 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale93, map94);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormat((int) '4', (java.text.Format) extendedMessageFormat95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray87);
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "en_US");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat64.setFormat((int) (short) 1, (java.text.Format) extendedMessageFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray49 = extendedMessageFormat46.parse("hi!", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map51);
        java.text.Format[] formatArray53 = extendedMessageFormat52.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormats(formatArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray53);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        extendedMessageFormat43.applyPattern("");
        extendedMessageFormat43.applyPattern("hi!");
        java.lang.Object[] objArray49 = extendedMessageFormat43.parse("hi!");
        extendedMessageFormat43.applyPattern("");
        java.text.Format[] formatArray52 = extendedMessageFormat43.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormatsByArgumentIndex(formatArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(formatArray52);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.lang.Object obj7 = extendedMessageFormat2.clone();
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat18.applyPattern("");
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = extendedMessageFormat15.format((java.lang.Object) "", stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat15.setLocale(locale52);
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        java.lang.String str65 = extendedMessageFormat64.toPattern();
        java.util.Locale locale66 = extendedMessageFormat64.getLocale();
        extendedMessageFormat64.applyPattern("hi!");
        java.lang.Object obj70 = extendedMessageFormat64.parseObject("hi!");
        java.text.Format[] formatArray71 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) formatArray71);
        java.util.Locale locale75 = null;
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale75, map76);
        java.lang.String str78 = extendedMessageFormat77.toPattern();
        java.text.Format[] formatArray79 = extendedMessageFormat77.getFormats();
        java.lang.String str80 = extendedMessageFormat77.toPattern();
        java.text.Format[] formatArray81 = extendedMessageFormat77.getFormatsByArgumentIndex();
        java.lang.String str82 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray81);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatsByArgumentIndex(formatArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(locale66);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(formatArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        extendedMessageFormat19.applyPattern("");
        java.lang.String str22 = extendedMessageFormat19.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat19.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        extendedMessageFormat37.applyPattern("");
        java.lang.String str40 = extendedMessageFormat37.toPattern();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.lang.Object[] objArray47 = extendedMessageFormat44.parse("hi!");
        java.text.Format[] formatArray48 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.util.Locale locale50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        java.lang.String str53 = extendedMessageFormat44.format((java.lang.Object) locale52);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        extendedMessageFormat56.applyPattern("");
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        java.lang.String str64 = extendedMessageFormat63.toPattern();
        java.text.Format[] formatArray65 = extendedMessageFormat63.getFormats();
        java.lang.String str66 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray65);
        java.lang.String str67 = extendedMessageFormat56.format((java.lang.Object) formatArray65);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map76);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74);
        extendedMessageFormat56.setLocale(locale74);
        extendedMessageFormat44.setLocale(locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat37.setLocale(locale74);
        extendedMessageFormat20.setLocale(locale74);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex(10, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNull(locale52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.String str14 = extendedMessageFormat12.toPattern();
        java.lang.Object obj15 = extendedMessageFormat12.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator16 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        boolean boolean9 = extendedMessageFormat3.equals((java.lang.Object) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = extendedMessageFormat41.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("hi!");
        extendedMessageFormat15.applyPattern("hi!");
        java.text.Format[] formatArray20 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.text.Format[] formatArray21 = extendedMessageFormat15.getFormats();
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = extendedMessageFormat2.format((java.lang.Object[]) formatArray21, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(locale3);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.lang.Class<?> wildcardClass13 = extendedMessageFormat11.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.lang.Object obj5 = extendedMessageFormat2.clone();
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        java.text.Format[] formatArray59 = extendedMessageFormat58.getFormats();
        java.lang.String str60 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray59);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = extendedMessageFormat33.format((java.lang.Object) formatArray39, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        extendedMessageFormat34.setLocale(locale48);
        java.util.Locale locale51 = extendedMessageFormat34.getLocale();
        boolean boolean52 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat34);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat8.parseObject("hi!", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = extendedMessageFormat5.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat11.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormats(formatArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat1.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        java.util.Locale locale59 = null;
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59, map60);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        java.util.Locale locale67 = extendedMessageFormat66.getLocale();
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        extendedMessageFormat61.setLocale(locale67);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale67, map73);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale82, map86);
        java.util.Locale locale88 = extendedMessageFormat87.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88);
        extendedMessageFormat74.setLocale(locale88);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale88, map91);
        extendedMessageFormat10.setLocale(locale88);
        java.util.Map map95 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat96 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map95);
        java.text.Format[] formatArray97 = extendedMessageFormat96.getFormats();
        java.text.Format[] formatArray98 = extendedMessageFormat96.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray97);
        org.junit.Assert.assertNotNull(formatArray98);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        java.lang.Class<?> wildcardClass7 = formatArray6.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }
}

