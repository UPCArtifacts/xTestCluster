/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 15 16:14:25 GMT 2022
 */

package org.apache.commons.math.stat.descriptive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.stat.descriptive.StatisticalSummary;
import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic;
import org.apache.commons.math.stat.descriptive.SummaryStatistics;
import org.apache.commons.math.stat.descriptive.moment.GeometricMean;
import org.apache.commons.math.stat.descriptive.moment.Kurtosis;
import org.apache.commons.math.stat.descriptive.moment.Mean;
import org.apache.commons.math.stat.descriptive.moment.SecondMoment;
import org.apache.commons.math.stat.descriptive.moment.StandardDeviation;
import org.apache.commons.math.stat.descriptive.moment.Variance;
import org.apache.commons.math.stat.descriptive.rank.Max;
import org.apache.commons.math.stat.descriptive.summary.Product;
import org.apache.commons.math.stat.descriptive.summary.Sum;
import org.apache.commons.math.stat.descriptive.summary.SumOfLogs;
import org.apache.commons.math.stat.descriptive.summary.SumOfSquares;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SummaryStatistics_ESTest extends SummaryStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Mean mean0 = new Mean();
      summaryStatistics0.setVarianceImpl(mean0);
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      assertEquals(0L, summaryStatistics1.getN());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      summaryStatistics0.hashCode();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.n = (-113L);
      summaryStatistics0.toString();
      assertEquals((-113L), summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-3.295268490032475E179));
      summaryStatistics0.getVarianceImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-518.7326717439));
      summaryStatistics0.getVariance();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumsqImpl((StorelessUnivariateStatistic) null);
      summaryStatistics0.getSumsqImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.1220467571570283E-7);
      summaryStatistics0.getSumsqImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.1220467571570283E-7);
      summaryStatistics0.getSumsq();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Mean mean0 = new Mean();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-518.7326717439);
      mean0.incrementAll(doubleArray0);
      summaryStatistics0.setSumsqImpl(mean0);
      summaryStatistics0.getSumsq();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-3.295268490032475E179));
      summaryStatistics0.getSummary();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.n = (-113L);
      summaryStatistics0.getSummary();
      assertEquals((-113L), summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1787.81667);
      double double0 = summaryStatistics0.getSumOfLogs();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(7.488750416919488, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      summaryStatistics0.getSumOfLogs();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumLogImpl((StorelessUnivariateStatistic) null);
      summaryStatistics0.getSumLogImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      summaryStatistics0.getSumLogImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumImpl((StorelessUnivariateStatistic) null);
      summaryStatistics0.getSumImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.1220467571570283E-7);
      double double0 = summaryStatistics0.getSum();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(1.1220467571570283E-7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-10.931665526637786));
      double double0 = summaryStatistics0.getSum();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals((-10.931665526637786), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(75.89502600211941);
      summaryStatistics0.addValue((-10.931665526637786));
      double double0 = summaryStatistics0.getStandardDeviation();
      assertEquals(2L, summaryStatistics0.getN());
      assertEquals(61.39574236797677, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      summaryStatistics0.getSecondMoment();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      summaryStatistics0.getPopulationVariance();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.7971707127788596);
      summaryStatistics0.addValue(0.0);
      double double0 = summaryStatistics0.getPopulationVariance();
      assertEquals(2L, summaryStatistics0.getN());
      assertEquals(0.8074556427175186, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(2064.19540553);
      long long0 = summaryStatistics0.getN();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.n = (-3958705157555305932L);
      long long0 = summaryStatistics0.getN();
      assertEquals((-3958705157555305932L), long0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      summaryStatistics0.getMinImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      summaryStatistics0.getMinImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      double double0 = summaryStatistics0.getMin();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1531.6614133);
      double double0 = summaryStatistics0.getMin();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(1531.6614133, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-39.99544330669709));
      double double0 = summaryStatistics0.getMin();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals((-39.99544330669709), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(2226.38593375);
      summaryStatistics0.getMeanImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      summaryStatistics0.getMean();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.8267512321472168);
      double double0 = summaryStatistics0.getMean();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(1.8267512321472168, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      double double0 = summaryStatistics0.getMean();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals((-56.8852110756835), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1531.6614133);
      summaryStatistics0.getMaxImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(2.437270128671546);
      double double0 = summaryStatistics0.getMax();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(2.437270128671546, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      double double0 = summaryStatistics0.getMax();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals((-56.8852110756835), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1787.81667);
      double double0 = summaryStatistics0.getGeometricMean();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(1787.8166699999997, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setGeoMeanImpl((StorelessUnivariateStatistic) null);
      summaryStatistics0.getGeoMeanImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(1.1220467571570283E-7);
      summaryStatistics0.getGeoMeanImpl();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      summaryStatistics0.copy();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(Double.NaN);
      // Undeclared exception!
      try { 
        summaryStatistics0.setSumsqImpl((StorelessUnivariateStatistic) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SumOfLogs sumOfLogs0 = new SumOfLogs();
      summaryStatistics0.addValue(0.4849066734313965);
      // Undeclared exception!
      try { 
        summaryStatistics0.setSumLogImpl(sumOfLogs0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = summaryStatistics0.getSumImpl();
      // Undeclared exception!
      try { 
        summaryStatistics0.setSumImpl(storelessUnivariateStatistic0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-360.2));
      // Undeclared exception!
      try { 
        summaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-56.8852110756835));
      Product product0 = new Product();
      // Undeclared exception!
      try { 
        summaryStatistics0.setMeanImpl(product0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-3630.4210686524));
      SumOfSquares sumOfSquares0 = summaryStatistics0.sumsq;
      // Undeclared exception!
      try { 
        summaryStatistics0.setMaxImpl(sumOfSquares0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Max max0 = new Max();
      summaryStatistics0.n = 4373L;
      // Undeclared exception!
      try { 
        summaryStatistics0.setGeoMeanImpl(max0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4,373 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.getSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.secondMoment = null;
      // Undeclared exception!
      try { 
        summaryStatistics0.getPopulationVariance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setGeoMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.getGeometricMean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      summaryStatistics1.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.equals(summaryStatistics1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      try { 
        SummaryStatistics.copy((SummaryStatistics) null, (SummaryStatistics) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SecondMoment secondMoment0 = new SecondMoment();
      StandardDeviation standardDeviation0 = new StandardDeviation(true, secondMoment0);
      summaryStatistics0.setSumLogImpl(standardDeviation0);
      // Undeclared exception!
      try { 
        SummaryStatistics.copy(summaryStatistics0, summaryStatistics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math.stat.descriptive.moment.StandardDeviation cannot be cast to org.apache.commons.math.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.sumsq = null;
      // Undeclared exception!
      try { 
        summaryStatistics0.copy();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SumOfLogs sumOfLogs0 = summaryStatistics0.sumLog;
      GeometricMean geometricMean0 = new GeometricMean(sumOfLogs0);
      summaryStatistics0.setSumLogImpl(geometricMean0);
      // Undeclared exception!
      try { 
        summaryStatistics0.copy();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math.stat.descriptive.moment.GeometricMean cannot be cast to org.apache.commons.math.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumsqImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setMeanImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.addValue(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = null;
      try {
        summaryStatistics0 = new SummaryStatistics((SummaryStatistics) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setGeoMeanImpl((StorelessUnivariateStatistic) null);
      SummaryStatistics summaryStatistics1 = null;
      try {
        summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      SummaryStatistics.copy(summaryStatistics0, summaryStatistics1);
      assertEquals(0L, summaryStatistics1.getN());
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      GeometricMean geometricMean0 = summaryStatistics0.geoMean;
      summaryStatistics0.setMeanImpl(geometricMean0);
      SummaryStatistics.copy(summaryStatistics0, summaryStatistics0);
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-10.931665526637786));
      summaryStatistics0.addValue((-10.931665526637786));
      double double0 = summaryStatistics0.getStandardDeviation();
      assertEquals(2L, summaryStatistics0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      double double0 = summaryStatistics0.getStandardDeviation();
      assertEquals(0L, summaryStatistics0.getN());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-10.931665526637786));
      double double0 = summaryStatistics0.getStandardDeviation();
      assertEquals(1L, summaryStatistics0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getSum();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      long long0 = summaryStatistics0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getVarianceImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getSumsq();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getSumOfLogs();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getGeoMeanImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      StandardDeviation standardDeviation0 = new StandardDeviation();
      summaryStatistics0.setGeoMeanImpl(standardDeviation0);
      SummaryStatistics.copy(summaryStatistics0, summaryStatistics0);
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Mean mean0 = new Mean();
      summaryStatistics0.setVarianceImpl(mean0);
      SummaryStatistics.copy(summaryStatistics0, summaryStatistics0);
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue((-1766.9426419702));
      SecondMoment secondMoment0 = summaryStatistics0.secondMoment;
      StandardDeviation standardDeviation0 = new StandardDeviation(true, secondMoment0);
      // Undeclared exception!
      try { 
        summaryStatistics0.setVarianceImpl(standardDeviation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1 values have been added before statistic is configured
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics();
      assertTrue(summaryStatistics1.equals((Object)summaryStatistics0));
      
      Product product0 = new Product();
      summaryStatistics0.setVarianceImpl(product0);
      boolean boolean0 = summaryStatistics1.equals(summaryStatistics0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      assertTrue(summaryStatistics1.equals((Object)summaryStatistics0));
      
      SecondMoment secondMoment0 = new SecondMoment();
      summaryStatistics0.setSumsqImpl(secondMoment0);
      boolean boolean0 = summaryStatistics0.equals(summaryStatistics1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      assertTrue(summaryStatistics1.equals((Object)summaryStatistics0));
      
      GeometricMean geometricMean0 = new GeometricMean();
      summaryStatistics1.setGeoMeanImpl(geometricMean0);
      boolean boolean0 = summaryStatistics0.equals(summaryStatistics1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics();
      summaryStatistics1.n = (-134L);
      boolean boolean0 = summaryStatistics1.equals(summaryStatistics0);
      assertEquals((-134L), summaryStatistics1.getN());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SumOfLogs sumOfLogs0 = summaryStatistics0.sumLog;
      summaryStatistics0.setMeanImpl(sumOfLogs0);
      SummaryStatistics summaryStatistics1 = new SummaryStatistics();
      boolean boolean0 = summaryStatistics0.equals(summaryStatistics1);
      assertEquals(0L, summaryStatistics1.getN());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics();
      assertTrue(summaryStatistics1.equals((Object)summaryStatistics0));
      
      SumOfLogs sumOfLogs0 = summaryStatistics1.sumLog;
      summaryStatistics1.setMaxImpl(sumOfLogs0);
      boolean boolean0 = summaryStatistics0.equals(summaryStatistics1);
      assertFalse(summaryStatistics1.equals((Object)summaryStatistics0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      boolean boolean0 = summaryStatistics1.equals(summaryStatistics0);
      assertEquals(1L, summaryStatistics0.getN());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Variance variance0 = new Variance();
      boolean boolean0 = summaryStatistics0.equals(variance0);
      assertFalse(boolean0);
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      boolean boolean0 = summaryStatistics0.equals(summaryStatistics0);
      assertEquals(0L, summaryStatistics0.getN());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Variance variance0 = new Variance();
      summaryStatistics0.variance = variance0;
      summaryStatistics0.clear();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Variance variance0 = new Variance(true);
      summaryStatistics0.setMeanImpl(variance0);
      summaryStatistics0.clear();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Kurtosis kurtosis0 = new Kurtosis();
      summaryStatistics0.setGeoMeanImpl(kurtosis0);
      summaryStatistics0.addValue((-3149.1747641));
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Mean mean0 = new Mean();
      summaryStatistics0.setVarianceImpl(mean0);
      summaryStatistics0.addValue((-3.275360514112964E-9));
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.addValue(0.0);
      summaryStatistics0.getGeometricMean();
      assertEquals(1L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setMinImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        SummaryStatistics.copy(summaryStatistics0, summaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = summaryStatistics0.getSumsqImpl();
      summaryStatistics0.setMaxImpl(storelessUnivariateStatistic0);
      summaryStatistics0.getMax();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getMeanImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getMaxImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      StatisticalSummary statisticalSummary0 = summaryStatistics0.getSummary();
      assertEquals(0L, statisticalSummary0.getN());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Product product0 = new Product();
      summaryStatistics0.setVarianceImpl(product0);
      summaryStatistics0.getVariance();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getSumImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.getSumLogImpl();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      Sum sum0 = new Sum();
      summaryStatistics0.setSumLogImpl(sum0);
      SummaryStatistics summaryStatistics1 = null;
      try {
        summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math.stat.descriptive.summary.Sum cannot be cast to org.apache.commons.math.stat.descriptive.summary.SumOfLogs
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.hashCode();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      summaryStatistics0.setSumImpl((StorelessUnivariateStatistic) null);
      // Undeclared exception!
      try { 
        summaryStatistics0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      StorelessUnivariateStatistic storelessUnivariateStatistic0 = summaryStatistics0.getMinImpl();
      summaryStatistics0.setMeanImpl(storelessUnivariateStatistic0);
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = summaryStatistics0.copy();
      assertNotSame(summaryStatistics1, summaryStatistics0);
      assertEquals(0L, summaryStatistics1.getN());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = new SummaryStatistics();
      SummaryStatistics summaryStatistics1 = new SummaryStatistics(summaryStatistics0);
      boolean boolean0 = summaryStatistics1.equals(summaryStatistics0);
      assertTrue(boolean0);
      assertEquals(0L, summaryStatistics1.getN());
  }
}
