/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 11 02:11:16 GMT 2022
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.util.Locale;
import java.util.SimpleTimeZone;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.Timeline;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.SeriesDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.WindDataset;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("", "ae_%a4f(!!p*", "g", defaultTableXYDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2802, 0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("Unrecognised title position.", waferMapDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("", 10, 15);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart("4V|V,y=dGJ", "", "", matrixSeriesCollection0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("", "yLGgwHd2GUhIT2q", "", timeTableXYDataset0, plotOrientation0, false, false, true);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) categoryToPieDataset0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = new Locale("");
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("LV_Iv", (PieDataset) null, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("org.jfree.chart.urls.StandardXYURLGenerator", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("Si[F9{Pm^", "red", (String) null, defaultCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", (OHLCDataset) combinedDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(15, 5305, 5305);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("'B4 hH", "1A)", "", (OHLCDataset) null, (Timeline) segmentedTimeline0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("11P!(%H2Q)", "11P!(%H2Q)", (String) null, (OHLCDataset) combinedDataset0, (Timeline) segmentedTimeline0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      JFreeChart jFreeChart0 = ChartFactory.createCandlestickChart("", "xldUI<", "]:L9/ ,#Q~v4=Gg,y", combinedDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(combinedRangeCategoryPlot0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      ChartFactory.createXYLineChart(".{$6Y", "", "Null 'rowData' argument.", xYSeriesCollection0, plotOrientation0, false, true, true);
      // Undeclared exception!
      ChartFactory.createXYStepChart("Null 'rowData' argument.", "Null 'rowData' argument.", "", xYSeriesCollection0, plotOrientation0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Minute minute0 = new Minute();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 15, minute0, minute0.DEFAULT_TIME_ZONE);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.5F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart("RZD~E}?18;>Hu)K6", "RZD~E}?18;>Hu)K6", "RZD~E}?18;>Hu)K6", dynamicTimeSeriesCollection0, plotOrientation0, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      // Undeclared exception!
      ChartFactory.createXYStepAreaChart("\u00B0C", "09S=F8Jn@1Q?P_O(", "09S=F8Jn@1Q?P_O(", (XYDataset) null, plotOrientation0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(4, 4);
      PolarPlot polarPlot0 = new PolarPlot(dynamicTimeSeriesCollection0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepAreaChart("", "~", "p\"S<=ww", dynamicTimeSeriesCollection0, plotOrientation0, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createWaterfallChart("4V|V,y=dGJ", "4V|V,y=dGJ", "4V|V,y=dGJ", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, false, true);
      ChartFactory.createTimeSeriesChart("", "4V|V,y=dGJ", "4V|V,y=dGJ", (XYDataset) null, false, true, true);
      // Undeclared exception!
      ChartFactory.createXYLineChart("4V|V,y=dGJ", (String) null, "", (XYDataset) null, plotOrientation0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      MockDate mockDate0 = new MockDate(206, 206, 206);
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      Week week0 = new Week(mockDate0, zoneInfo0);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 1, week0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYLineChart("+", "+", "+", dynamicTimeSeriesCollection0, plotOrientation0, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createLineChart3D("-UFXIHP8y:!(#?C", "-UFXIHP8y:!(#?C", "-UFXIHP8y:!(#?C", defaultKeyedValues2DDataset0, plotOrientation0, true, true, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
      ChartFactory.createXYBarChart("-UFXIHP8y:!(#?C", "-UFXIHP8y:!(#?C", true, "*NhE5qjsr8", timeTableXYDataset0, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("4y `GD+.6&h", (OHLCDataItem[]) null);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultOHLCDataset0, (ValueAxis) null, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("}EH;?$Bt=x sZYvdp", "", "Pie_3D_Plot", defaultOHLCDataset0, plotOrientation0, true, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("4V|V,=dGJ");
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createWaterfallChart("", "", "", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, false, false);
      ChartFactory.createBoxAndWhiskerChart("4V|V,=dGJ", "4V|V,=dGJ", "4V|V,=dGJ", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      ChartFactory.createXYLineChart("", "", "", defaultBoxAndWhiskerXYDataset0, plotOrientation0, false, false, false);
      // Undeclared exception!
      ChartFactory.createWaterfallChart("", "", (String) null, defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("4V|V,=dGJ", "[left=", "[left=", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[5];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("", "org.jfree.chart.plot.ValueMarker", "#5}_*?Z]&9Ez@J", defaultIntervalCategoryDataset0, plotOrientation0, false, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("-UFXIHP8y:!(#?C", (WaferMapDataset) null, plotOrientation0, false, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createLineChart3D("", (String) null, (String) null, defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      ChartFactory.createLineChart(";eI4-)<l~EYRe6", "Null 'labelAnchor' argument.", "Null 'orientation' argument.", defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      XYSeries xYSeries0 = new XYSeries(1.0F, false, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      // Undeclared exception!
      ChartFactory.createTimeSeriesChart("Null 'labelAnchor' argument.", "", (String) null, xYSeriesCollection0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, 0);
      // Undeclared exception!
      try { 
        ChartFactory.createTimeSeriesChart("zi$Y2'tLA{", "", "{3} - {4}", dynamicTimeSeriesCollection0, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      ChartFactory.createHistogram("", "", "", (IntervalXYDataset) null, plotOrientation0, false, false, false);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(3);
      ChartFactory.createBoxAndWhiskerChart("", "", "", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      ChartFactory.createStackedBarChart3D(" sikfq!nhA_}>3b/rj", "", "ZiK4@CYy$T", taskSeriesCollection0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      String[] stringArray0 = new String[5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart3D("", "", "", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      ChartFactory.createXYLineChart("", "sI C", "", timeTableXYDataset0, plotOrientation0, true, false, false);
      ChartFactory.createCandlestickChart((String) null, (String) null, "org.jfree.data.xy.DefaultOHLCDataset", (OHLCDataset) null, false);
      // Undeclared exception!
      ChartFactory.createStackedBarChart("org.jfree.data.xy.DefaultOHLCDataset", "sI C", "", jDBCCategoryDataset0, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("ZY%ell~7D'IT", "ZY%ell~7D'IT", "", defaultIntervalCategoryDataset0, plotOrientation0, true, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2144986573), "*i*EK\"BD*RDrPDCFM");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ChartFactory.createXYBarChart("", "-UFXIHP8y:!(#?C", true, "", timeTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createPolarChart("-UFXIHP8y:!(#?C", timeTableXYDataset0, true, true, false);
      ChartFactory.createWaterfallChart("", "", "-UFXIHP8y:!(#?C", (CategoryDataset) null, plotOrientation0, false, false, true);
      ChartFactory.createBarChart3D("*i*EK\"BD*RDrPDCFM", "-UFXIHP8y:!(#?C", "", (CategoryDataset) null, plotOrientation0, false, true, false);
      // Undeclared exception!
      ChartFactory.createStackedAreaChart("7$b=~VxfiF;dnZz", (String) null, "", (CategoryDataset) null, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createLineChart3D("", (String) null, (String) null, defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      ChartFactory.createLineChart(";eI4-)<l~EYRe6", "Null 'labelAnchor' argument.", "Null 'orientation' argument.", defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      // Undeclared exception!
      ChartFactory.createScatterPlot((String) null, "", "U", matrixSeriesCollection0, plotOrientation0, true, true, false);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(15, 1);
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot("", "", "0;ok]\"|6iYX6@_U&IM)", dynamicTimeSeriesCollection0, plotOrientation0, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createRingChart("eG5(wnrn|S`", (PieDataset) defaultKeyedValuesDataset0, false, false, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("4V|V,=dGJ");
      ChartFactory.createBoxAndWhiskerChart("4V|V,=dGJ", "4V|V,=dGJ", "4V|V,=dGJ", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYBarChart("gnnTF@z=!Sk]7rkK+$", "(", false, "4V|V,=dGJ", xYIntervalSeriesCollection0, plotOrientation0, true, false, true);
      // Undeclared exception!
      ChartFactory.createPolarChart("", xYIntervalSeriesCollection0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("IG~ZUSykUl$Z}[", (PieDataset) defaultPieDataset0, true, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset1 = new JDBCPieDataset(connection1);
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("org.jfree.data.general.DatasetChangeEvent", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset1, 274, false, true, true, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: 400
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("4V|V,=dGJ", (PieDataset) null, (PieDataset) null, 1879, false, true, false, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      Locale locale0 = Locale.US;
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("", (PieDataset) jDBCPieDataset0, (PieDataset) defaultKeyedValuesDataset0, (-2146856095), false, false, false, locale0, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: 400
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("org.jfree.data.jdbc.JDBCPieDataset", (PieDataset) null, (PieDataset) null, (-1982292598), false, true, true, locale0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Number[][] numberArray0 = new Number[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, (byte)12);
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("Null 'rotationAnchor' argument.", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, (int) (byte)12, true, false, true, locale0, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      ChartFactory.createXYBarChart("4V|V,=dGJ", "IG~ZUSykUl$Z}[", true, "IG~ZUSykUl$Z}[", (IntervalXYDataset) null, plotOrientation0, false, true, false);
      ChartFactory.createXYAreaChart(") should be in the range 0 to 3.", "IG~ZUSykUl$Z}[", "IG~ZUSykUl$Z}[", (XYDataset) null, plotOrientation0, true, true, false);
      Number[][] numberArray0 = new Number[4][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      ChartFactory.createLineChart(")", "IG~ZUSykUl$Z}[", "", defaultIntervalCategoryDataset0, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      double[][] doubleArray0 = new double[5][5];
      double[] doubleArray1 = new double[2];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("Q^f+*%Pv,", "Q^f+*%Pv,", "Q^f+*%Pv,", defaultIntervalCategoryDataset0, plotOrientation0, true, false, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot1.getOrientation();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      ChartFactory.createHistogram("", "F,!{:.rCy?w!CvAsSPT", "org.jfree.data.category.DefaultCategoryDataset", (IntervalXYDataset) null, plotOrientation0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Hour hour0 = new Hour();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(500, 1, hour0);
      // Undeclared exception!
      try { 
        ChartFactory.createHistogram("", "SansSerif", "", dynamicTimeSeriesCollection0, plotOrientation0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      ChartFactory.createStackedXYAreaChart("a4=i2Cht.q&V>(", "Null 'domainAxis' argument.", "7mVZ-_MrM,", timeTableXYDataset0, plotOrientation0, true, true, false);
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      ChartFactory.createHighLowChart("a4=i2Cht.q&V>(", "7mVZ-_MrM,", "#uzaWp}.tL8./=@F", (OHLCDataset) combinedDataset0, false);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.add((SeriesDataset) null, (-5));
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", (OHLCDataset) combinedDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double[][] doubleArray0 = new double[0][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      int[] intArray0 = new int[2];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultIntervalCategoryDataset0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("", "", "aKclxZz", (OHLCDataset) subSeriesDataset0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.category.DefaultIntervalCategoryDataset cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartFactory.createWaterfallChart("Series Title", "Series Title", "$9_506K94-Mv7=I1RU", taskSeriesCollection0, plotOrientation0, true, true, true);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      ChartFactory.createStackedXYAreaChart("$9_506K94-Mv7=I1RU", "Series Title", "Series Title", defaultTableXYDataset0, plotOrientation0, true, true, false);
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      ChartFactory.createHighLowChart("Series Title", "org.jfree.chart.PolarChartPanel", "", (OHLCDataset) combinedDataset0, (Timeline) null, true);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart(")~p<,[j._DQFwUb!E", "", ")~p<,[j._DQFwUb!E", (OHLCDataset) combinedDataset0, (Timeline) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int[] intArray0 = new int[4];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newMondayThroughFridayTimeline();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("%, Bright ", "%, Bright ", "%, Bright ", (OHLCDataset) subSeriesDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("", true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(xYSeriesCollection0, 1);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newMondayThroughFridayTimeline();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart((String) null, "^4", "", (OHLCDataset) subSeriesDataset0, (Timeline) segmentedTimeline0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.XYSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(0L, (-553), 220);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart(")~p<,[j._DQFwUb!E", "nVQq$vL:\"rL`yn", ")~p<,[j._DQFwUb!E", (OHLCDataset) combinedDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.jfree.chart.axis.SegmentedTimeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{am\"<} rWi9r.:,Y?<@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      ChartFactory.createScatterPlot("c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", defaultXYZDataset0, plotOrientation0, true, false, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createBarChart("w", "~I:}mYC", "", defaultKeyedValues2DDataset0, plotOrientation0, false, true, false);
      ChartFactory.createStackedBarChart3D("", "7ZAn!*D>ER4NLvvA", ",pNj)~9LxOJnIz#}\"", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
      ChartFactory.createAreaChart(".3bdY.@P $J", "c:t?_T,5)[Y\"", "{am\"<} rWi9r.:,Y?<@", defaultKeyedValues2DDataset0, plotOrientation0, true, true, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      ChartFactory.createGanttChart("~I:}mYC", "`5Ixpn.[BH7)&", "mRm`hK", taskSeriesCollection0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[2];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart("?T5Ta5D6,%?", "J?)E^q.rf4@:!?,'", "JWy$) hZry]U", defaultIntervalCategoryDataset0, true, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartFactory.createBoxAndWhiskerChart("", "", "", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      ChartFactory.createStackedAreaChart("", "", "", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, true);
      SeriesDataset[] seriesDatasetArray0 = new SeriesDataset[1];
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      seriesDatasetArray0[0] = (SeriesDataset) defaultXYZDataset0;
      CombinedDataset combinedDataset0 = new CombinedDataset(seriesDatasetArray0);
      // Undeclared exception!
      ChartFactory.createCandlestickChart("", "", "LIjd.dF7pX^", combinedDataset0, true);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset((SeriesDataset) null, 1266);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("", (String) null, (String) null, subSeriesDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(timePeriodValuesCollection0, 210);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("", "Series Title", "&+svV", subSeriesDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 'series' out of range.
         //
         verifyException("org.jfree.data.time.TimePeriodValuesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int[] intArray0 = new int[3];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(taskSeriesCollection0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("", "", "%, Bright ", subSeriesDataset0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.gantt.TaskSeriesCollection cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      ChartFactory.createLineChart3D((String) null, (String) null, "UAh=ak+{Fmh(AeLx%T", defaultCategoryDataset0, plotOrientation0, false, false, true);
      ChartFactory.createLineChart((String) null, "", ".G", defaultCategoryDataset0, plotOrientation0, true, false, false);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      // Undeclared exception!
      ChartFactory.createBoxAndWhiskerChart("", "", "", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      ChartFactory.createLineChart3D((String) null, (String) null, "UAh=ak+{Fmh(AeLx%T", defaultCategoryDataset0, plotOrientation0, false, false, true);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      ChartFactory.createStackedXYAreaChart("s;}nkzd", "RectangleConstraint[", "`^J", timeTableXYDataset0, plotOrientation0, false, true, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      ChartFactory.createBoxAndWhiskerChart("Series Title", "`^J", "RectangleConstraint[", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][6];
      Number[] numberArray1 = new Number[3];
      numberArray0[2] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart3D("", "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", "2X(b\"Jg<dqFG+>'", defaultIntervalCategoryDataset0, plotOrientation0, true, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Comparable<String>[] comparableArray0 = (Comparable<String>[]) Array.newInstance(Comparable.class, 2);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ChartFactory.createAreaChart("CcLG~ZXK", "CcLG~ZXK", "org.jfree.chart.text.TextBlock", defaultIntervalCategoryDataset0, plotOrientation0, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2171), (-2171), integer0);
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("3<A+_<T{S-pf[M@2w2", waferMapDataset0, (PlotOrientation) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{am\"<} rWi9r.:,Y?<@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(15, 10, 0.0F);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("{am\"<} rWi9r.:,Y?<@", waferMapDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("iI", "iI", "%Z3E2sj[", (WindDataset) null, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("R-zHq1", "R-zHq1", "lz%", defaultWindDataset0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("R-zHq1", "R-zHq1", "lz%", defaultWindDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("", "M$CcGe;?JS>>&rE,P4R", "MO", timeTableXYDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int[] intArray0 = new int[9];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(taskSeriesCollection0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHistogram("", "LXIemXlsdgr<", "?GEG/", subSeriesDataset0, plotOrientation0, false, true, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.gantt.TaskSeriesCollection cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createHistogram("", "{3} - {4}", "Requires lowerBound < upperBound.", (IntervalXYDataset) null, (PlotOrientation) null, true, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      ChartFactory.createHistogram("4V|V,y=dGJ", (String) null, "auPMM~DSD$3;;^&='p1", histogramDataset0, plotOrientation0, false, false, false);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      ChartFactory.createWindPlot("auPMM~DSD$3;;^&='p1", "g-44e]p@jd!H>Er", (String) null, defaultWindDataset0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart((String) null, "}L>^7,i,PA", "[DS'8", matrixSeriesCollection0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createBubbleChart("86,j9U=)!#{WI0o:ePR", "", (String) null, defaultXYZDataset0, (PlotOrientation) null, true, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("k", "sVQ 1QnFXc+&&oxw\"", "", matrixSeriesCollection0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart((String) null, "v", "Null 'description' argument.", matrixSeriesCollection0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultXYZDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("\u00B0C", "\u00B0C", "@", defaultXYZDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepAreaChart(" version ", "+", "+", defaultXYZDataset0, (PlotOrientation) null, true, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      PeriodAxis periodAxis0 = new PeriodAxis("o>e\"N8i>IP3U)r", fixedMillisecond0, fixedMillisecond0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, periodAxis0, periodAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("o>e\"N8i>IP3U)r", "o>e\"N8i>IP3U)r", "", combinedDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("mX", "", "mX", combinedDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("P,\"zk 5F{", false, false);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart("", "P,\"zk 5F{", "", xYSeriesCollection0, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYLineChart("", "", "", defaultTableXYDataset0, plotOrientation0, true, true, true);
      CombinedDataset combinedDataset0 = new CombinedDataset();
      ChartFactory.createHighLowChart("", "", "", (OHLCDataset) combinedDataset0, true);
      // Undeclared exception!
      ChartFactory.createStackedXYAreaChart((String) null, (String) null, "", defaultTableXYDataset0, plotOrientation0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      // Undeclared exception!
      try { 
        ChartFactory.createXYLineChart("+", "org.jfree.data.time.FixedMillisecond", "+", xIntervalSeriesCollection0, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("", "The 'directory' argument is not a directory.", "cHaA|i1}N%w", defaultTableXYDataset0, plotOrientation0, false, false, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      ChartFactory.createStackedXYAreaChart("xdD", "xdD", "xdD", timeTableXYDataset0, plotOrientation0, false, false, false);
      ChartFactory.createXYStepChart((String) null, "MO", "xdD", (XYDataset) null, plotOrientation0, false, false, false);
      // Undeclared exception!
      ChartFactory.createXYAreaChart("MO", "NOID", "MO", timeTableXYDataset0, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createStackedXYAreaChart(">mxdD", "JkN}g?Ov$&.", ">mxdD", (TableXYDataset) null, (PlotOrientation) null, true, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart(">mxdD", ">mxdD", (String) null, timeTableXYDataset0, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("", "*T=~l7+rfc'x<nu+", "*T=~l7+rfc'x<nu+", defaultWindDataset0, (PlotOrientation) null, true, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset("Unknown 'category' key.");
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("Unknown 'category' key.", "", "Z$Y<<LD<C?\"|?<RF3", simpleHistogramDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(601, 601);
      // Undeclared exception!
      try { 
        ChartFactory.createXYBarChart("iG|LOU8)3", "", true, "", dynamicTimeSeriesCollection0, plotOrientation0, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(98, "");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("", "-UFXIHP8y:!(#?C", false, "", timeTableXYDataset0, plotOrientation0, false, true, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      // Undeclared exception!
      try { 
        ChartFactory.createXYBarChart("The 'height' argument must be > 0.0", "Null 'maximumDate' argument.", true, "Null 'maximumDate' argument.", xYSeriesCollection0, (PlotOrientation) null, true, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("ABCxyz", "G6", "ehOS", defaultTableXYDataset0, plotOrientation0, true, true, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot("", "", "", defaultXYZDataset0, (PlotOrientation) null, true, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{am\"<} rWi9r.:,Y?<@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      ChartFactory.createScatterPlot("c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", defaultXYZDataset0, plotOrientation0, true, false, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createBarChart("w", "~I:}mYC", "", defaultKeyedValues2DDataset0, plotOrientation0, true, false, false);
      ChartFactory.createStackedBarChart3D("", "7ZAn!*D>ER4NLvvA", ",pNj)~9LxOJnIz#}\"", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
      ChartFactory.createPolarChart("cX", defaultXYZDataset0, true, false, false);
      // Undeclared exception!
      ChartFactory.createBarChart("~I:}mYC", "7ZAn!*D>ER4NLvvA", "", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("wXSA_j1Y%f^< l", "^SEozTP>{a/R~\"{ Uf", "org.jfree.data.jdbc.JDBCPieDataset", jDBCCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("*i*EK\"BD*RDrPDCFM", ">mxdD", "lM~|GHnBY", taskSeriesCollection0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("mTx?U!ORfTF", "mTx?U!ORfTF", "mTx?U!ORfTF", (IntervalCategoryDataset) null, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createLineChart3D("-UFXIHP8y:!(#?C", "-UFXIHP8y:!(#?C", "-UFXIHP8y:!(#?C", defaultKeyedValues2DDataset0, plotOrientation0, true, true, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartFactory.createBarChart("-UFXIHP8y:!(#?C", "CONTRACT", "&R4b", defaultKeyedValues2DDataset0, plotOrientation0, true, false, true);
      // Undeclared exception!
      ChartFactory.createAreaChart("", "-UFXIHP8y:!(#?C", (String) null, defaultKeyedValues2DDataset0, plotOrientation0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart3D("4V|V,=dGJ", "4V|V,=dGJ", "<np", defaultCategoryDataset0, (PlotOrientation) null, true, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Number[][] numberArray0 = new Number[0][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("green", "", "3G9y)ps$*19X*apdYJ?", defaultIntervalCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        ChartFactory.createStackedAreaChart("d!xFl", "", (String) null, taskSeriesCollection0, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("7$b=~VxfiF;dnZz", (String) null, "", (CategoryDataset) null, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("", ":}I+%SR'[,6Mrf", "", (CategoryDataset) null, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createAreaChart("=change >=+", "=change >=+", "", defaultBoxAndWhiskerCategoryDataset0, (PlotOrientation) null, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("org.jfree.chart.annotations.XYPolygonAnnotation", ">mxdD", "*i*EK\"BD*RDrPDCFM", (CategoryDataset) null, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart3D((String) null, "8=i@H/)(", (String) null, defaultIntervalCategoryDataset0, (PlotOrientation) null, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("", "", "", jDBCCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("4V|V,=dGJ", "4V|V,=dGJ", "4V|V,=dGJ", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("", "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", "2X(b\"Jg<dqFG+>'", defaultIntervalCategoryDataset0, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart3D("S6xgZKRlJfK", "", "T$h;&P)!xd[", defaultBoxAndWhiskerCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart3D((String) null, (String) null, "^.", defaultIntervalCategoryDataset0, plotOrientation0, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("TextAnchor.TOP_RIGHT", "TextAnchor.TOP_RIGHT", "TextAnchor.TOP_RIGHT", taskSeriesCollection0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("", "", "", defaultBoxAndWhiskerCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("&ng", "", "&ng", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("N/,0", "N/,0", "N/,0", taskSeriesCollection0, plotOrientation0, true, false, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart("", "4V|V,=dGJ", "", defaultBoxAndWhiskerCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createBarChart("", ":@#uH8s(^>{", "u=z |Y)<Mn", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, true);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(0.5F);
      ChartFactory.createBoxAndWhiskerChart("g^2~lXUJ", "", "W", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      // Undeclared exception!
      ChartFactory.createBubbleChart("k", "sVQ 1QnFXc+&&oxw\"", "", matrixSeriesCollection0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("org.jfree.data.general.DefaultKeyedValuesDataset", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, false, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D((String) null, defaultBoxAndWhiskerCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart3D("", taskSeriesCollection0, (TableOrder) null, true, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 10);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) categoryToPieDataset0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.forLanguageTag("20)$5pzhM");
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) jDBCPieDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D(">mxdD", (PieDataset) jDBCPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("4V|V,=dGJ", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("4V|V,=dGJ", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart("green", (CategoryDataset) null, (TableOrder) null, true, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("4V|V,=dGJ", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultKeyedValuesDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("bR+!Y#'dg5X'8S", (PieDataset) defaultPieDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.CANADA;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("-UFXIHP8y:!(#?C", (PieDataset) jDBCPieDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Locale locale0 = Locale.US;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) null, true, false, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, Double.POSITIVE_INFINITY);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("FP^yE4M_L", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 1108, true, false, true, true, true, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("FP^yE4M_L", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 1108, true, false, true, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1609), false, false, false, false, true, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      jDBCPieDataset0.setValue((Comparable) "%,=B_ightG", (Number) null);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart(">s]kYz", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 4, false, true, true, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      jDBCPieDataset0.setValue((Comparable) "%,=B_ightG", (Number) null);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%,=B_ightG", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 1, true, true, true, true, true, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      jDBCPieDataset0.setValue((Comparable) "%,=B_ightG", (Number) null);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%,=B_ightG", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 1, false, false, false, false, false, false);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      Locale locale0 = Locale.KOREA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("org.jfree.data.jdbc.JDBCPieDataset", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-2146856095), false, true, true, locale0, true, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      jDBCPieDataset0.setValue((Comparable) "%,=B_ightG", (Number) null);
      Locale locale0 = new Locale("; u<C:BZ1QWRLu", "%,=B_ightG", "%,=B_ightG");
      jDBCPieDataset0.insertValue(1, (Comparable) "; u<C:BZ1QWRLu", 1.5707963267948966);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%,=B_ightG", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 15, false, false, true, locale0, false, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      jDBCPieDataset0.setValue((Comparable) "%,=B_ightG", (Number) null);
      Locale locale0 = new Locale("; u<C:BZ1QWRLu", "%,=B_ightG", "%,=B_ightG");
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%,=B_ightG", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 15, true, true, true, locale0, true, true);
      assertEquals(2, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      jDBCPieDataset0.setValue((Comparable) integer0, (Number) integer0);
      Locale locale0 = Locale.US;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1153), true, false, false, locale0, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("}]w')]0To>G.", (PieDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("=change >=+", (PieDataset) defaultKeyedValuesDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.FRENCH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultPieDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ChartFactory.createPolarChart((String) null, matrixSeriesCollection0, false, false, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("v");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createBarChart((String) null, "org.jfree.chart.ChartFactory", "", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, false, true);
      ChartFactory.createTimeSeriesChart((String) null, "v", "Null 'description' argument.", matrixSeriesCollection0, false, false, false);
      // Undeclared exception!
      ChartFactory.createBarChart3D("^u(Facb&~S^D<:", "", "wBCeqYxyjkTj", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(taskSeriesCollection0, (-1021));
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("N\"XahZ?Efx];?2cz", "b'xB5yJMm>AWVh", "Null 'font' argument.", (OHLCDataset) subSeriesDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.gantt.TaskSeriesCollection cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      int[] intArray0 = new int[1];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(xIntervalSeriesCollection0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("35g&nC<uUG>Y", "n)N^Qs8^26duN", "35g&nC<uUG>Y", (OHLCDataset) subSeriesDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.XIntervalSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(combinedDataset0, 2508);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("", "", "", subSeriesDataset0, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2508, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
