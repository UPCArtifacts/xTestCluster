/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 11 00:15:16 GMT 2022
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.apache.commons.math.distribution.TDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TDistributionImpl tDistributionImpl0 = new TDistributionImpl(0.5);
      double double0 = tDistributionImpl0.inverseCumulativeProbability(0.5);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      normalDistributionImpl0.setMean((-208.365017761859));
      double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.9999999999999971);
      assertEquals((-200.3650258633115), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TDistributionImpl tDistributionImpl0 = new TDistributionImpl(1.0E-6);
      // Undeclared exception!
      tDistributionImpl0.inverseCumulativeProbability(1.0E-6);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TDistributionImpl tDistributionImpl0 = new TDistributionImpl(1.7976931348623157E308);
      // Undeclared exception!
      try { 
        tDistributionImpl0.inverseCumulativeProbability(1.7976931348623157E308);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 out of [0, 1] range
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      // Undeclared exception!
      try { 
        normalDistributionImpl0.inverseCumulativeProbability((-406.38946264661));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -406.389 out of [0, 1] range
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TDistributionImpl tDistributionImpl0 = new TDistributionImpl(1.7976931348623157E308);
      double double0 = tDistributionImpl0.inverseCumulativeProbability(0.5);
      assertEquals(1.0, double0, 0.01);
  }
}
