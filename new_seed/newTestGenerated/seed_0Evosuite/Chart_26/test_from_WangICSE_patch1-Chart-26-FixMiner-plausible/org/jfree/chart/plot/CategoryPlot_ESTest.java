/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 14 20:48:46 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.MemoryImageSource;
import java.awt.image.PixelGrabber;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.WritableRaster;
import java.sql.Connection;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.TreeSet;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.plaf.multi.MultiTabbedPaneUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnits;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.SortOrder;
import org.jfree.chart.util.UnitType;
import org.jfree.data.DefaultKeyedValue;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Second;
import org.jfree.data.time.SerialDate;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      point0.clone();
      Point point1 = jViewport0.toViewCoordinates(point0);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point1);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      categoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1005.4), 1.0E-8, "(C*");
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      float[][] floatArray0 = new float[0][5];
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation1 = fastScatterPlot0.getOrientation();
      combinedRangeCategoryPlot2.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation1, (-2700.648420421716), cyclicNumberAxis0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, fastScatterPlot0.DEFAULT_BACKGROUND_PAINT);
      DefaultKeyedValue defaultKeyedValue0 = new DefaultKeyedValue(true, 1.0F);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(defaultKeyedValue0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultKeyedValueDataset0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 2347.0275223904614);
      combinedDomainCategoryPlot1.removeAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainAxis();
      combinedRangeCategoryPlot2.getRangeAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-1369), (CategoryAxis) categoryAxis3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 10, 10, 15, false, false, false, false, true, true);
      chartPanel0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((-45.0), plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, subCategoryAxis0, valueAxis0, categoryStepRenderer0);
      categoryPlot0.isRangeZoomable();
      categoryPlot0.getRendererForDataset(jDBCCategoryDataset0);
      categoryPlot0.setDomainGridlineStroke(subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      categoryPlot0.getRenderer();
      categoryPlot0.getDomainAxisCount();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[2];
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      categoryAxisArray0[1] = (CategoryAxis) subCategoryAxis0;
      categoryPlot0.setDomainAxes(categoryAxisArray0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      UnitType unitType0 = UnitType.ABSOLUTE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 2338.0, 3536.9, 10, 10);
      combinedDomainCategoryPlot0.setAxisOffset(rectangleInsets0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("P<", simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setDataset(0, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}LhnQg+#MT=P");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      categoryPlot0.removeChangeListener(combinedRangeCategoryPlot0);
      categoryPlot0.getLegendItems();
      categoryPlot0.getDatasetRenderingOrder();
      JFreeChart jFreeChart0 = new JFreeChart("<\"M2pri,|(:E!L7sD?", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 479);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "}LhnQg+#MT=P";
      stringArray0[1] = "3bsE132L,EzZ";
      combinedDomainXYPlot0.setInsets(combinedRangeCategoryPlot0.DEFAULT_INSETS, true);
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'annotation' argument.", stringArray0);
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, defaultCaret0, plotOrientation0, 0.5F, symbolAxis0, categoryPlot0.DEFAULT_OUTLINE_STROKE, categoryPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      System.setCurrentTimeMillis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1879, 500);
      waferMapDataset0.getGroup();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D(", url=");
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D2);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 500);
      DatasetGroup datasetGroup0 = waferMapDataset0.getGroup();
      jDBCCategoryDataset0.setGroup(datasetGroup0);
      combinedDomainCategoryPlot0.setDataset(500, (CategoryDataset) jDBCCategoryDataset0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      // Undeclared exception!
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1879, 500);
      DatasetGroup datasetGroup0 = waferMapDataset0.getGroup();
      jDBCCategoryDataset0.setGroup(datasetGroup0);
      combinedDomainCategoryPlot0.setDataset(500, (CategoryDataset) jDBCCategoryDataset0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      categoryAxis3D0.setTickMarkPaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[5] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      // Undeclared exception!
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1029.35145981424), "");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1840, (-11));
      waferMapDataset0.getGroup();
      combinedDomainCategoryPlot0.setDataset(10, (CategoryDataset) jDBCCategoryDataset0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, axisSpace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getItemFillPaint(1854, 10);
      ValueMarker valueMarker0 = new ValueMarker(349.713330689, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultPolarItemRenderer0.DEFAULT_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(3, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      combinedRangeCategoryPlot0.getOrientation();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot1.getDomainAxisEdge(10);
      combinedDomainCategoryPlot1.equals(rectangleEdge0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("7;4ySG09F");
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setColumnRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(10, 1846, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte) (-69);
      byteArray0[7] = (byte)28;
      byteArray0[8] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedRangeCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle0, (AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1876.84107898), 0.0, "");
      combinedDomainCategoryPlot0.setRangeAxis(0, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot1.getDatasetRenderingOrder();
      combinedDomainCategoryPlot1.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(1539L);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      combinedDomainCategoryPlot1.setDataset(4147, (CategoryDataset) jDBCCategoryDataset0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 0, layer1);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(jDBCCategoryDataset0);
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      combinedRangeCategoryPlot0.clearDomainMarkers(10);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      combinedRangeCategoryPlot1.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      combinedRangeCategoryPlot0.getRangeAxisForDataset(500);
      System.setCurrentTimeMillis(240L);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      Point2D.Float point2D_Float0 = new Point2D.Float((-1644.754F), (-1644.754F));
      combinedRangeCategoryPlot0.zoomRangeAxes((-1.0), (double) 1.0F, (PlotRenderingInfo) null, (Point2D) point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      Point2D.Float point2D_Float0 = new Point2D.Float((-1644.754F), (-3.0F));
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes((-1.0), (-1005.4), (PlotRenderingInfo) null, (Point2D) point2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-1.05) <= upper (-1055.67).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawAxes((Graphics2D) null, (Rectangle2D) null, (Rectangle2D) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("Null 'annotation' argument.", simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDataset(0, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart("<0rb$`2t)yd-Yh*?", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(76, 2001, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 2.0F);
      Point2D.Double point2D_Double0 = new Point2D.Double((-4.0), 0.05);
      Point2D point2D0 = affineTransform0.inverseTransform((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      Point2D point2D1 = affineTransform0.transform(point2D0, (Point2D) point2D_Double0);
      rectangle2D0.setFrameFromCenter(point2D1, (Point2D) point2D_Double0);
      combinedRangeCategoryPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, (PlotRenderingInfo) null);
      combinedRangeCategoryPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, (AxisSpace) null);
      combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.setValue((Number) 10, (Comparable) true, (Comparable) 1.0F);
      combinedRangeCategoryPlot0.setDataset(2661, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getWeight();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = new Point();
      point0.clone();
      jViewport0.toViewCoordinates(point0);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, dateAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      combinedDomainCategoryPlot0.clearRangeMarkers(0);
      int int0 = 2;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte) (-6);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(2, 18, byteArray0, byteArray0, byteArray0, 1036);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CategoryAxis categoryAxis0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3318.264059481186, (-853.13), "");
      cyclicNumberAxis0.centerRange(20000.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, cyclicNumberAxis0, statisticalBarRenderer0);
      cyclicNumberAxis0.setTickMarkInsideLength(1377.5844F);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 152;
      Paint paint0 = defaultPolarItemRenderer0.getItemFillPaint(11, 152);
      ValueMarker valueMarker0 = new ValueMarker(50000.0, paint0, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker(500, (Marker) valueMarker0, (Layer) null);
      categoryPlot0.equals(paint0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'annotation' argument.", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      int int1 = 2652;
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2652, 3);
      bufferedImage0.createGraphics();
      MultiTabbedPaneUI multiTabbedPaneUI0 = new MultiTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(15, 11);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3318.264059481186, (-853.13), "");
      cyclicNumberAxis0.centerRange(20000.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, cyclicNumberAxis0, statisticalBarRenderer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      cyclicNumberAxis0.setTickMarkInsideLength(1377.5844F);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 11;
      Paint paint0 = defaultPolarItemRenderer0.getItemFillPaint(11, 152);
      ValueMarker valueMarker0 = new ValueMarker(50000.0, paint0, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker(500, (Marker) valueMarker0, (Layer) null);
      categoryPlot0.equals(paint0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'annotation' argument.", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2652, 3);
      int[] intArray0 = new int[3];
      intArray0[0] = 500;
      intArray0[1] = 2652;
      intArray0[2] = 500;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        bufferedImage0.getData(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers((-1810), layer0);
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker((-2365), categoryMarker0, layer1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToRangeAxis((-2365), 83);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers((-30), layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      AWTEventMulticaster.add((MouseListener) null, (MouseListener) null);
      combinedDomainCategoryPlot0.configureRangeAxes();
      jScrollPane0.addMouseListener((MouseListener) null);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.setValue((Number) 10, (Comparable) true, (Comparable) 1.0F);
      combinedRangeCategoryPlot0.setDataset(2661, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = null;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addRangeMarker((Marker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(352, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      NumberAxis numberAxis0 = new NumberAxis("");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart("<0rb$`2t)yd-Yh*?", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(76, 2001, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      combinedRangeCategoryPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("*pS3~tIP2&-O8Gm", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.drawRangeMarkers(graphics2D0, rectangle2D1, 270, layer0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boolean boolean0 = CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedRangeCategoryPlot1.DEFAULT_GRIDLINE_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'layer' not permitted.", combinedRangeCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      combinedRangeCategoryPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("*pS3~tIP2&-O8Gm", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      jFreeChart0.setNotify(true);
      jFreeChart0.createBufferedImage(10, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(500, 500, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3318.264059481186, (-853.13), "");
      cyclicNumberAxis0.centerRange(20000.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, cyclicNumberAxis0, statisticalBarRenderer0);
      categoryPlot0.getDatasetRenderingOrder();
      cyclicNumberAxis0.setTickMarkInsideLength(1377.5844F);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemFillPaint(11, 152);
      ValueMarker valueMarker0 = new ValueMarker(50000.0, paint0, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker(500, (Marker) valueMarker0, (Layer) null);
      categoryPlot0.equals(paint0);
      categoryPlot0.getOrientation();
      categoryPlot0.getDomainAxisEdge(152);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      categoryAxisArray0[0] = null;
      categoryPlot0.setDomainAxes(categoryAxisArray0);
      categoryPlot0.equals(valueMarker0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("7;4ySG09F");
      categoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        categoryPlot0.handleClick((-1), 152, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(10, layer1);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis((String) null, simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setDataset(0, (CategoryDataset) defaultKeyedValues2DDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("P<", simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setDataset(0, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRendererForDataset(jDBCCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("U", simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedRangeCategoryPlot0.setDataset(0, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getWeight();
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "";
      stringArray0[7] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      categoryPlot0.equals(symbolAxis0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.setDataset(10, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 3948.169181, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(10, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'orientation' argument.", (Range) null);
      arrayList0.add(moduloAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.axis.ModuloAxis cannot be cast to org.jfree.chart.axis.ValueTick
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      combinedDomainCategoryPlot0.clearDomainAxes();
      String string0 = "Null 'marker' not permitted.";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2893.53734, "(C*");
      combinedDomainCategoryPlot0.setRangeAxis(383, (ValueAxis) cyclicNumberAxis0, true);
      Graphics2D graphics2D0 = null;
      JTree jTree0 = new JTree();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      synthTreeUI0.getPathForRow(jTree0, 10);
      jTree0.getPathBounds((TreePath) null);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, cyclicNumberAxis0, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2893.53734, "(C*");
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, cyclicNumberAxis0, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2, "(C*");
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, cyclicNumberAxis0, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, "Null 'stroke' not permitted.");
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'stroke' not permitted.", 2.0F, 0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Size2D size2D0 = new Size2D();
      MockDate mockDate0 = new MockDate((-2677L));
      SerialDate serialDate0 = SerialDate.createInstance((Date) mockDate0);
      CategoryMarker categoryMarker0 = new CategoryMarker(serialDate0, categoryAxis3D1.DEFAULT_TICK_LABEL_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      categoryMarker0.setDrawAsLine(false);
      RectangleAnchor rectangleAnchor0 = categoryMarker0.getLabelAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.0, 0.0, rectangleAnchor0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D0, 3909, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, (List) null);
      Line2D.Double line2D_Double0 = new Line2D.Double(710.0326631680704, (-203.668505287837), 0.0, (-511.13648864809));
      Rectangle2D rectangle2D1 = line2D_Double0.getBounds2D();
      combinedDomainCategoryPlot1.drawAnnotations((Graphics2D) null, rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlinePaint();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(488, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Polygon polygon0 = new Polygon();
      polygon0.getBounds2D();
      ICC_ColorSpace iCC_ColorSpace0 = null;
      try {
        iCC_ColorSpace0 = new ICC_ColorSpace((ICC_Profile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.color.ICC_ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = new Point();
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      Point point1 = new Point(point0);
      point0.clone();
      jViewport0.toViewCoordinates(point1);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue((double) 0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, dateAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = new Point();
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      Point point1 = new Point(point0);
      point1.clone();
      Point point2 = jViewport0.toViewCoordinates(point1);
      categoryPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, (Point2D) point2);
      categoryPlot0.setRangeCrosshairValue(1579.54, false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      point0.clone();
      Point point1 = jViewport0.toViewCoordinates(point0);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = new Point();
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      Point point1 = new Point(point0);
      point1.clone();
      Point point2 = jViewport0.toViewCoordinates(point1);
      categoryPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, (Point2D) point2);
      categoryPlot0.setRangeCrosshairValue(1579.54, false);
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker(true, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, (-562.44F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      Paint paint0 = combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, paint0);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) waterfallBarRenderer0;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedBarRenderer3D0;
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(false);
      categoryItemRendererArray0[2] = (CategoryItemRenderer) stackedBarRenderer3D1;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      AxisSpace axisSpace0 = new AxisSpace();
      combinedDomainCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      BasicStroke basicStroke0 = (BasicStroke)PolarPlot.DEFAULT_GRIDLINE_STROKE;
      combinedRangeCategoryPlot0.setRangeGridlineStroke(basicStroke0);
      CategoryMarker categoryMarker1 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'orientation' argument.", (Range) null);
      arrayList0.add(moduloAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.axis.ModuloAxis cannot be cast to org.jfree.chart.axis.ValueTick
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 3948.169181, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(10, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'orientation' argument.", (Range) null);
      arrayList0.add(moduloAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.axis.ModuloAxis cannot be cast to org.jfree.chart.axis.ValueTick
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxis(0);
      combinedDomainCategoryPlot0.clearRangeMarkers();
      combinedDomainCategoryPlot0.getRangeAxisEdge();
      combinedDomainCategoryPlot0.getDomainAxisLocation(813);
      combinedDomainCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("=WcIK}%B@'lg^JAE:Ih");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 832, 481, 10, 10, 300, true, false, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1356, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(500, 0.85F, 10, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Stroke stroke0 = stackedAreaRenderer0.getItemOutlineStroke(10, 10);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getSubrangePaint(800);
      combinedRangeCategoryPlot1.drawRangeLine(graphics2D0, rectangle2D0, (-1.0), stroke0, paint0);
      combinedRangeCategoryPlot1.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.equals(thermometerPlot0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "3");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawRangeLine((Graphics2D) null, (Rectangle2D) null, 10, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'marker' not permitted.");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'marker' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot3 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot3.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double[][] doubleArray0 = new double[2][7];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 2.5E9;
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = 175.41360469525;
      doubleArray1[3] = (-1128.96);
      doubleArray1[4] = 3735.709031662055;
      doubleArray1[5] = (-2615.858649);
      doubleArray1[6] = (-1163.2);
      doubleArray1[7] = (-1005.4);
      doubleArray1[8] = 354.95613294;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, numberAxis3D0, stackedAreaRenderer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      PolarPlot polarPlot0 = new PolarPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(polarPlot0, jDBCCategoryDataset0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      extendedCategoryAxis0.setTickMarkPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      PolarPlot polarPlot0 = new PolarPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      extendedCategoryAxis0.setTickMarkPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.setFixedRangeAxisSpace((AxisSpace) null);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(2.0F, 1.0E-8, true, 0.05, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainCategoryPlot1.removeAnnotation(categoryLineAnnotation0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "i1NE@w");
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("i1NE@w", 10, 1191.96);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'position' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.removeAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot1.getDomainAxisIndex(extendedCategoryAxis0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.getColumnKeys();
      combinedRangeCategoryPlot0.setDataset(2661, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getRangeAxisLocation(180);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker((-2944), (CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", true, 1.0E7);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Size2D size2D0 = new Size2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, categoryTextAnnotation0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      categoryMarker0.setDrawAsLine(true);
      RectangleAnchor rectangleAnchor0 = categoryMarker0.getLabelAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0F, 0.0F, rectangleAnchor0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D0, 2630, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getDomainAxisEdge();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, (List) null);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2652.0, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      arrayList0.add((ModuloAxis) null);
      combinedRangeCategoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 3948.169181, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(10, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      combinedRangeCategoryPlot1.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedRangeCategoryPlot1.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2893.53734, "(C*");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, cyclicNumberAxis0, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 3948.169181, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(10, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1307.0), "(C*");
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 537.0, cyclicNumberAxis0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultKeyedValues2DDataset0);
      combinedRangeCategoryPlot1.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("n<~.:u0\"eeklwPH", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(244, 10, chartRenderingInfo0);
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(10, (-1428), (int[]) null, 58, 500);
      PixelGrabber pixelGrabber0 = new PixelGrabber(memoryImageSource0, 15, 10, 10, 244, (int[]) null, 77, (-1428));
      ColorModel colorModel0 = pixelGrabber0.getColorModel();
      BufferedImage bufferedImage1 = colorConvertOp0.createCompatibleDestImage(bufferedImage0, colorModel0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers(graphics2D0, rectangle2D_Float0, 58, layer0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.drawRangeMarkers((Graphics2D) null, (Rectangle2D) null, 500, layer0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.getColumnKeys();
      combinedRangeCategoryPlot0.setDataset(2661, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(180);
      combinedRangeCategoryPlot0.setDomainAxisLocation(280, axisLocation0, false);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.setDataset(500, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.setValue((Number) 10, (Comparable) true, (Comparable) 1.0F);
      combinedRangeCategoryPlot0.setDataset(2661, (CategoryDataset) jDBCCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.getWeight();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("kg6UG=2");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDataset(500, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      combinedRangeCategoryPlot0.setRenderer(1, (CategoryItemRenderer) lineAndShapeRenderer0, false);
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1822));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.getRenderer();
      combinedDomainCategoryPlot0.getAnchorValue();
      combinedRangeCategoryPlot0.clearDomainMarkers();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getWeight();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("nC?U,>DM~`JF", 10, 1.0F, (-1073.2060641733801));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis(0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 10, (ValueAxis) null, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis0);
      combinedRangeCategoryPlot0.handleClick(82, 9, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxisEdge((-1658));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) dateAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.isRangeCrosshairVisible();
      combinedRangeCategoryPlot1.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot1.setRangeGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F);
      combinedRangeCategoryPlot1.setDomainGridlinesVisible(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValues2DDataset0, defaultKeyedValues2DDataset0);
      combinedRangeCategoryPlot1.datasetChanged(datasetChangeEvent0);
      combinedRangeCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      CategoryAxis categoryAxis1 = combinedRangeCategoryPlot0.getDomainAxis(1);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis(2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainXYPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot1.clearDomainMarkers(50);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      categoryAxisArray0[0] = categoryAxis0;
      categoryAxisArray0[1] = categoryAxis0;
      categoryAxisArray0[2] = categoryAxis0;
      categoryAxisArray0[3] = categoryAxis0;
      categoryAxisArray0[4] = categoryAxis0;
      categoryAxisArray0[5] = categoryAxis0;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      categoryAxisArray0[6] = (CategoryAxis) extendedCategoryAxis0;
      categoryAxisArray0[7] = categoryAxis0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      categoryAxisArray0[0] = categoryAxis0;
      categoryAxisArray0[1] = categoryAxis0;
      categoryAxisArray0[2] = categoryAxis0;
      categoryAxisArray0[3] = categoryAxis0;
      categoryAxisArray0[4] = categoryAxis0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DateAxis dateAxis1 = new DateAxis();
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) dateAxis1);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis1 = new CategoryAxis("Null 'paint' argument.");
      categoryAxis0.setMaximumCategoryLabelWidthRatio(650.611F);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis1);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker("Null 'paint' argument.");
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JTree jTree0 = new JTree();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'category1' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainAxis(1040);
      combinedRangeCategoryPlot1.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(":#V");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      subCategoryAxis0.getTickLabelPaint((Comparable) false);
      combinedDomainCategoryPlot0.getFixedLegendItems();
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      int int0 = 63;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(63, 9973, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeCrosshairValue(1579.54, false);
      categoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      combinedRangeCategoryPlot0.setRenderer(15, (CategoryItemRenderer) lineAndShapeRenderer0, true);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.getDomainAxisCount();
      combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2);
      AxisLocation.getOpposite(axisLocation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot2.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot2.setDomainGridlinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainCategoryPlot0.clearRangeMarkers(1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      ValueMarker valueMarker0 = new ValueMarker((-430.0));
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 0.2;
      doubleArray1[1] = (double) 0.0F;
      doubleArray1[2] = 0.05;
      doubleArray1[3] = (double) 2.0F;
      doubleArray1[4] = 0.05;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("I>");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, logarithmicAxis0, lineRenderer3D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisForDataset((-2146));
      combinedRangeCategoryPlot1.clearDomainMarkers();
      combinedRangeCategoryPlot1.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      rectangle2D_Float1.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.getRangeAxisCount();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainMarkers(10);
      combinedDomainCategoryPlot0.getRangeAxisCount();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(105.7028275, 1);
      combinedDomainCategoryPlot0.setRenderer(1, (CategoryItemRenderer) stackedBarRenderer3D0, true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.getDomainAxis();
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, (-485), (-1891), (-485), 15, true, true, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 2979.41636894296);
      combinedDomainCategoryPlot0.zoomDomainAxes((double) areaRenderer0.ZERO, plotRenderingInfo0, (Point2D) point2D_Double0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(areaRenderer0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      categoryAxis0.setUpperMargin(10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.setRangeCrosshairStroke(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getDomainAxisEdge();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot3);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      chartPanel0.getAnchor();
      combinedDomainCategoryPlot3.zoomDomainAxes(1.0E-8, plotRenderingInfo0, (Point2D) null);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setLabelFont(categoryAxis0.DEFAULT_TICK_LABEL_FONT);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(15);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis("~lh&");
      combinedDomainCategoryPlot0.getDomainAxisCount();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot1.getRangeAxisLocation(1);
      AxisLocation.getOpposite(axisLocation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedDomainCategoryPlot1.DEFAULT_OUTLINE_PAINT);
      combinedDomainCategoryPlot1.clearRangeMarkers(1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureRangeAxes();
      int int0 = 357913942;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(357913942, (CategoryDataset) taskSeriesCollection0);
      combinedDomainCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getDomainAxisEdge(357913942);
      combinedDomainCategoryPlot0.isRangeGridlinesVisible();
      combinedDomainCategoryPlot0.getRenderer(357913942);
      // Undeclared exception!
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesOutlineStroke();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1872.407, 2.0, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.setRangeGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      combinedRangeCategoryPlot1.getDomainAxis(10);
      combinedRangeCategoryPlot1.setDomainGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis((-1944));
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-1455), (CategoryItemRenderer) stackedBarRenderer3D0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4.0), 10, "R6d]IUz2am;!");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.getRenderer((-3));
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-1064), (CategoryItemRenderer) statisticalBarRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      NumberAxis numberAxis1 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis1);
      combinedRangeCategoryPlot0.getDomainAxis(500);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(numberAxis1.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis(1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, "!6KY`|YO3<i:Q");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot1.getRangeAxis(300);
      combinedRangeCategoryPlot1.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      rectangle0.width = (-4341);
      JTree jTree0 = new JTree();
      Rectangle rectangle1 = new Rectangle((-4341), 10, 1, 1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((-925), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(1366, categoryMarker1, layer1);
      combinedRangeCategoryPlot0.zoom(0.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(layer1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0F);
      cyclicNumberAxis0.setFixedAutoRange(0.0);
      combinedDomainCategoryPlot1.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot1.setAxisOffset(combinedRangeCategoryPlot0.DEFAULT_INSETS);
      combinedDomainCategoryPlot1.isRangeZoomable();
      combinedRangeCategoryPlot0.getDomainAxis(10);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot1.getDomainAxisForDataset(500);
      combinedRangeCategoryPlot0.getDomainAxis((-925));
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 1366;
      floatArray0[1] = 2.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = (float) 51;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-1707), 51, floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("j>P]dt;fp&SPP6d&^");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) numberAxis0);
      categoryAxis0.setTickMarkPaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryAxis categoryAxis1 = new CategoryAxis((String) null);
      categoryAxis1.setMaximumCategoryLabelWidthRatio(0.0F);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis1.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot1.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      combinedRangeCategoryPlot1.getDomainAxis(10);
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      combinedRangeCategoryPlot1.setDomainGridlineStroke(basicStroke0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-739.577465), true, (-484.3), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot1.addAnnotation(categoryLineAnnotation0);
      combinedRangeCategoryPlot1.getDataset(200);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getWeight();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("nC?U,>DM~`JF", 10, 1.0F, (-1073.2060641733801));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis(11);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) intervalBarRenderer0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CategoryMarker categoryMarker1 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.getDomainAxis((-1944));
      combinedRangeCategoryPlot0.setDomainGridlineStroke(periodAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.getRangeAxis(300);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(251.69625013, 0.0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getBasePaint();
      intervalMarker0.setOutlinePaint(paint0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.BACKGROUND;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      int int0 = 2509;
      Layer layer2 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker(2509, (Marker) null, layer2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getSeriesFillPaint(90);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset((-1));
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot0.getRenderer(3);
      combinedDomainCategoryPlot0.getAxisOffset();
      Color.getColor("");
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, (Layer) null);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset((-1));
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot0.getRenderer(3);
      combinedDomainCategoryPlot0.getAxisOffset();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      Color.getColor("");
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(color0);
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, categoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, true);
      combinedRangeCategoryPlot0.getDomainAxis((-1091));
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairValue(0.0);
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ValueMarker valueMarker0 = new ValueMarker((-1.7549891306326608));
      CategoryAxis categoryAxis0 = new CategoryAxis("~lh&");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 0.0F, "+w)$");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, statisticalBarRenderer0);
      categoryPlot0.setRangeCrosshairValue(0.2);
      int int0 = 1;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      DatasetGroup datasetGroup0 = new DatasetGroup("org.jfree.chart.plot.CategoryPlot");
      datasetGroup0.clone();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 10);
      DatasetGroup datasetGroup1 = waferMapDataset0.getGroup();
      datasetGroup1.clone();
      int int1 = Plot.MINIMUM_WIDTH_TO_DRAW;
      combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(periodAxis0.DEFAULT_TICK_LABEL_PAINT);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[0] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.plot.CategoryPlot");
      categoryAxisArray0[1] = (CategoryAxis) categoryAxis3D0;
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("org.jfree.chart.plot.CategoryPlot");
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D1;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      categoryAxisArray0[3] = (CategoryAxis) subCategoryAxis0;
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis((String) null);
      categoryAxisArray0[4] = (CategoryAxis) subCategoryAxis1;
      CategoryAxis categoryAxis1 = new CategoryAxis((String) null);
      categoryAxisArray0[5] = categoryAxis1;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.isRangeZoomable();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      datasetGroup0.clone();
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation((-357));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      categoryPlot0.getDomainAxisForDataset((-3149));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis((-706L));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.mapDatasetToDomainAxis(23, 1732);
      combinedDomainCategoryPlot1.setColumnRenderingOrder(sortOrder0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      combinedDomainCategoryPlot0.setDataset(10, (CategoryDataset) jDBCCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 10, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      combinedDomainCategoryPlot0.setDataset(500, (CategoryDataset) jDBCCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds(1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 20, (double) (-3), 682.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeCategoryPlot0.drawBackground(graphics2D0, rectangle0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(152);
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainMarkers();
      Vector<CyclicNumberAxis> vector0 = new Vector<CyclicNumberAxis>();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      Color color0 = DebugGraphics.flashColor();
      numberAxis0.setAxisLinePaint(color0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.getAxisOffset();
      Color.getHSBColor(0.0F, (-2.0F), Float.POSITIVE_INFINITY);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getAxisOffset();
      Color.getHSBColor(0.0F, 1.0F, 0.0F);
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(categoryAxis0.DEFAULT_TICK_MARK_PAINT);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, (Layer) null);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset((-1));
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot0.getRenderer(3);
      combinedDomainCategoryPlot0.getAxisOffset();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(color0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'marker' not permitted.", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      // Undeclared exception!
      try { 
        categoryAxis3D0.reserveSpace((Graphics2D) null, combinedDomainCategoryPlot1, (Rectangle2D) null, rectangleEdge0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      CategoryAxis categoryAxis0 = new CategoryAxis(" 9.yf/OC4j<c*RKwkd");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryStepRenderer0.hasListener(combinedDomainCategoryPlot1);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) boxAndWhiskerRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot0.getIndexOf(categoryStepRenderer0);
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 2.0F, 2.0F);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-868));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot1.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.clearDomainMarkers(500);
      System.setCurrentTimeMillis((-900));
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(5, layer0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      CategoryAxis categoryAxis0 = new CategoryAxis(" 9.yf/OC4j<c*RKwkd");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryStepRenderer0.hasListener(combinedDomainCategoryPlot1);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) categoryStepRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT);
      combinedDomainCategoryPlot1.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis1);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.getAxisOffset();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      System.setCurrentTimeMillis(572L);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToDomainAxis((-2230), 9969);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getPlotType();
      combinedDomainCategoryPlot0.getDomainAxisLocation((-1831));
      combinedDomainCategoryPlot0.getDomainAxisLocation((-486));
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'defaultGroup' argument.", 1.0F, 1.0F);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      categoryTextAnnotation0.setTextAnchor(textAnchor0);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryAxis categoryAxis0 = combinedDomainCategoryPlot0.getDomainAxisForDataset(3);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeMarkers(491, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      CategoryAxis categoryAxis0 = new CategoryAxis(" 9.yf/OC4j<c*RKwkd");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      DateAxis dateAxis0 = new DateAxis(" 9.yf/OC4j<c*RKwkd");
      combinedDomainCategoryPlot0.setRangeAxis(0, (ValueAxis) dateAxis0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.getTickLabelPaint((Comparable) " 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      combinedDomainCategoryPlot0.getDomainMarkers(0, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'marker' not permitted.", " 9.yf/OC4j<c*RKwkd", 2.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedDomainCategoryPlot0.mapDatasetToRangeAxis(0, 0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDatasetGroup((DatasetGroup) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1880.439020368, 10);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      categoryMarker0.setLabelTextAnchor(textAnchor0);
      categoryMarker0.equals(intervalMarker0);
      combinedDomainCategoryPlot0.addDomainMarker(83, categoryMarker0, layer0);
      combinedDomainCategoryPlot0.setWeight(83);
      combinedDomainCategoryPlot0.getDomainMarkers((-1), layer0);
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(83);
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(2, 83);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDatasetGroup((DatasetGroup) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1880.439020368, 10);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      categoryMarker0.setLabelTextAnchor(textAnchor0);
      categoryMarker0.equals(intervalMarker0);
      combinedDomainCategoryPlot0.addDomainMarker(83, categoryMarker0, layer0);
      combinedDomainCategoryPlot0.setWeight(83);
      combinedDomainCategoryPlot0.getDomainMarkers((-1), layer0);
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      System.setCurrentTimeMillis(83);
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(2, 83);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.block.CenterArrangement");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      ValueAxis valueAxis0 = combinedRangeCategoryPlot0.getRangeAxisForDataset((-460));
      combinedRangeCategoryPlot0.setRangeCrosshairValue((-3488.4), true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-460));
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation1);
      logarithmicAxis0.setRangeWithMargins(valueAxis0.DEFAULT_RANGE, true, false);
      AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((-460), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlinePaint();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.FOREGROUND;
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedRangeCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1864.27224, (-900));
      combinedDomainCategoryPlot0.setRenderer(10, (CategoryItemRenderer) stackedBarRenderer3D0);
      combinedDomainCategoryPlot1.getOrientation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(500);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      CategoryAxis categoryAxis0 = new CategoryAxis("Category Plot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) boxAndWhiskerRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryItemRendererArray0[4] = (CategoryItemRenderer) categoryStepRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      categoryPlot0.clearAnnotations();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearAnnotations();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(1.0F, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("j>P]dt;fp&SPP6d&^");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) numberAxis0);
      categoryAxis0.setTickMarkPaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryAxis categoryAxis1 = new CategoryAxis((String) null);
      categoryAxis1.setMaximumCategoryLabelWidthRatio(0.0F);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis1.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot1.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      combinedRangeCategoryPlot1.setRenderer((CategoryItemRenderer) boxAndWhiskerRenderer0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CategoryMarker categoryMarker1 = new CategoryMarker(true);
      combinedRangeCategoryPlot1.getDomainAxis(10);
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      combinedRangeCategoryPlot1.setDomainGridlineStroke(basicStroke0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-739.577465), true, (-484.3), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot1.addAnnotation(categoryLineAnnotation0);
      combinedRangeCategoryPlot1.getDataset(200);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(1366, categoryMarker1, layer1);
      combinedRangeCategoryPlot0.zoom(0.0F);
      combinedRangeCategoryPlot0.getDomainAxis();
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("org.jfree.chart.plot.CategoryPlot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(0, (CategoryDataset) taskSeriesCollection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeCategoryPlot0.getDomainAxis();
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot1.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.clearDomainMarkers(10);
      System.setCurrentTimeMillis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      datasetGroup0.clone();
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      categoryPlot0.isRangeGridlinesVisible();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{2}");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(7);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker((CategoryMarker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Category Plot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setDomainAxis(0, (CategoryAxis) null, true);
      categoryAxis0.addCategoryLabelToolTip(areaRenderer0.ZERO, "Category Plot");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'marker' not permitted.", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = null;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-285), (CategoryItemRenderer) categoryStepRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      combinedDomainCategoryPlot0.setRenderer(10, (CategoryItemRenderer) categoryStepRenderer0);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      standardCategoryItemLabelGenerator0.clone();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2010.1786F, 2.0F, 0.0F, 1.0F);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{2}");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset(10);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot1.getRenderer();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainCategoryPlot1.getAnchorValue();
      categoryAxis0.setFixedDimension((-1.0));
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-852), (CategoryItemRenderer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      categoryPlot0.setRowRenderingOrder(sortOrder0);
      int int0 = (-289);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers((-289), layer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeCategoryPlot0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      TickUnits tickUnits0 = new TickUnits();
      // Undeclared exception!
      try { 
        tickUnits0.get(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot1.getRenderer();
      combinedDomainCategoryPlot1.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(0.1F);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker1 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) categoryStepRenderer0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CategoryMarker categoryMarker2 = new CategoryMarker(intervalBarRenderer0.ZERO);
      combinedRangeCategoryPlot0.getDomainAxis(2450);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeCategoryPlot0.setRangeCrosshairStroke(periodAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot1.getOrientation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.5E-6, "9@qS(V/k|(nv");
      combinedDomainCategoryPlot1.setRangeAxis(1740, (ValueAxis) null, true);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      AWTEventMulticaster.add((MouseListener) null, (MouseListener) null);
      combinedDomainCategoryPlot0.configureRangeAxes();
      jScrollPane0.addMouseListener((MouseListener) null);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot2.zoom(3.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.zoom(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getLegendItemToolTipGenerator();
      categoryStepRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      datasetGroup0.clone();
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      categoryPlot0.isRangeGridlinesVisible();
      categoryPlot0.getDatasetRenderingOrder();
      categoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "{2}";
      stringArray0[1] = "{2}";
      stringArray0[2] = "{2}";
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = null;
      stringArray0[6] = "{2}";
      stringArray0[7] = "{2}";
      stringArray0[8] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      combinedDomainCategoryPlot0.setRangeAxis(19, (ValueAxis) symbolAxis0, true);
      categoryPlot0.getRangeAxisForDataset(496);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      rectangle2D_Float1.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JTree jTree0 = new JTree();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(461);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      jFreeChart0.setNotify(true);
      jFreeChart0.createBufferedImage(10, 3);
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      Area area0 = new Area();
      area0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      TextTitle textTitle0 = new TextTitle();
      textTitle0.removeChangeListener(jFreeChart0);
      jFreeChart0.setTitle(textTitle0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.clear();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(1366, categoryMarker1, layer1);
      combinedRangeCategoryPlot0.zoom(0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisForDataset(10);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      combinedRangeCategoryPlot1.getCategories();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.1F, 10, 2.0F);
      chartRenderingInfo0.setChartArea(rectangle2D_Float0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-900));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearDomainAxes();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot1.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.clearDomainMarkers(10);
      System.setCurrentTimeMillis(10);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainMarkers(10);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      Area area0 = new Area();
      area0.getBounds();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedDomainCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      Point2D.Float point2D_Float0 = new Point2D.Float(10, 1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 10, (-637.9), plotRenderingInfo0, (Point2D) point2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (10.5) <= upper (-669.795).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      rectangle2D_Float1.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(0);
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation1, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Stroke stroke0 = stackedAreaRenderer0.getBaseOutlineStroke();
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[6];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) lineAndShapeRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot2.setRenderers(categoryItemRendererArray0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, ":i#P0z*K*4A/l4ts(}");
      combinedDomainCategoryPlot1.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, false);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("iLdy4$h5 Aj");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDataset((-1262), (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 484);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setRangeCrosshairStroke(stroke0);
      combinedRangeCategoryPlot0.setAnchorValue(4.5, false);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      combinedRangeCategoryPlot1.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedRangeCategoryPlot0.getRangeAxisEdge(1099);
      ValueMarker valueMarker0 = new ValueMarker((-1.0));
      combinedDomainCategoryPlot0.setDomainGridlinePaint(numberAxis0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDomainAxisLocation(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      datasetGroup0.clone();
      categoryPlot0.setDatasetGroup(datasetGroup0);
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      categoryPlot0.isRangeGridlinesVisible();
      categoryPlot0.getDatasetRenderingOrder();
      categoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      categoryPlot0.getRenderer(0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-8, 1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getRenderer(493);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getWeight();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("nC?U,>DM~`JF", 10, 1.0F, (-1073.2060641733801));
      CategoryAnchor categoryAnchor0 = categoryPointerAnnotation0.getCategoryAnchor();
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      categoryPlot0.getIndexOf(categoryStepRenderer0);
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      datasetGroup0.clone();
      categoryPlot0.setDatasetGroup(datasetGroup0);
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      categoryPlot0.isRangeGridlinesVisible();
      categoryPlot0.getDatasetRenderingOrder();
      categoryPlot0.clearRangeMarkers();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      categoryPlot0.getRenderer(480);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setFixedAutoRange(0.0F);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setBackgroundAlpha(3596.2F);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("kg6UG=2");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      combinedDomainCategoryPlot0.setDomainAxis(360, (CategoryAxis) categoryAxis3D0, true);
      categoryAxis3D0.addCategoryLabelToolTip(false, "{G+ Q]\"sCo4oe");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.getDataset(497);
      combinedDomainCategoryPlot0.getDomainAxisLocation(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      CategoryMarker categoryMarker1 = new CategoryMarker(false, color0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot1.addDomainMarker(categoryMarker1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot2.isRangeGridlinesVisible();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(10, (CategoryDataset) null);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot1.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      categoryMarker0.setDrawAsLine(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDataset(10);
      combinedDomainCategoryPlot0.getDomainAxisLocation(14);
      CategoryMarker categoryMarker1 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView(10);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      combinedDomainCategoryPlot0.setDomainAxis(360, (CategoryAxis) categoryAxis3D0, true);
      categoryAxis3D0.addCategoryLabelToolTip(false, "{G+ Q]\"sCo4oe");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(" 9.yf/OC4j<c*RKwkd");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot2.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot1.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.clearRangeMarkers();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.2, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedDomainCategoryPlot0.getIndexOf(stackedBarRenderer0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.getColumnIndex(1.0F);
      combinedDomainCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.equals(categoryStepRenderer0);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      categoryStepRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      categoryPlot0.getIndexOf(categoryStepRenderer0);
      DatasetGroup datasetGroup0 = new DatasetGroup("{2}");
      datasetGroup0.clone();
      categoryPlot0.setDatasetGroup(datasetGroup0);
      categoryPlot0.getDomainAxisCount();
      categoryPlot0.isRangeCrosshairLockedOnData();
      categoryPlot0.isRangeGridlinesVisible();
      categoryPlot0.getDatasetRenderingOrder();
      categoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      categoryPlot0.clearRangeAxes();
      categoryPlot0.setRangeAxis(500, (ValueAxis) numberAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Number[][] numberArray0 = new Number[1][6];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) (-3);
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, numberAxis0, (CategoryItemRenderer) null);
      categoryPlot0.clearRangeAxes();
      categoryPlot0.getAnchorValue();
      categoryPlot0.getDomainAxis(2501);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxis(1);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.clearDomainAxes();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 0.0F);
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getDataset((-1270));
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      periodAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      categoryMarker0.setDrawAsLine(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDataset(10);
      combinedDomainCategoryPlot0.getDomainAxisLocation(14);
      CategoryMarker categoryMarker1 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 2.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedDomainCategoryPlot0.getDomainAxisLocation(1366);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(1366, categoryMarker0, layer1);
      combinedRangeCategoryPlot0.zoom(0.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(layer1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0F);
      combinedDomainCategoryPlot1.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot1.setAxisOffset(combinedRangeCategoryPlot0.DEFAULT_INSETS);
      combinedDomainCategoryPlot1.isRangeZoomable();
      combinedDomainCategoryPlot1.setRangeCrosshairLockedOnData(true);
      combinedRangeCategoryPlot0.getDomainAxis(10);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      PolarPlot polarPlot0 = new PolarPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(polarPlot0, jDBCCategoryDataset0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      extendedCategoryAxis0.setTickMarkPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(658.73071, 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ZoneOffset.ofHoursMinutesSeconds(10, 10, 10);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(10, 10, 10);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      DateAxis dateAxis0 = new DateAxis("P<", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setDataset(500, (CategoryDataset) null);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeCategoryPlot0.addRangeMarker(3, (Marker) valueMarker0, (Layer) null);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("ve>^", true, (-2805.057575), 10);
      combinedRangeCategoryPlot0.equals(categoryPointerAnnotation0);
      combinedRangeCategoryPlot0.getOrientation();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(0.0, false);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "");
      combinedDomainCategoryPlot0.setRangeAxis(2024, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainCategoryPlot0.getDataset(500);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, true);
      Area area0 = new Area(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.getDataset(300);
      combinedDomainCategoryPlot0.getDomainAxisLocation(462);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.isRangeGridlinesVisible();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      Layer layer0 = Layer.BACKGROUND;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D1, (ValueAxis) null, statisticalLineAndShapeRenderer0);
      // Undeclared exception!
      try { 
        categoryPlot0.addDomainMarker((CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot1.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      extendedCategoryAxis0.setTickLabelFont((Comparable) "org.jfree.chart.plot.FastScatterPlot", font0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisCount();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, (-2.147483648E9), false, (-1.0), extendedCategoryAxis0.DEFAULT_AXIS_LINE_PAINT, extendedCategoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryLineAnnotation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.rendererChanged(rendererChangeEvent0);
      RendererChangeEvent rendererChangeEvent1 = new RendererChangeEvent("org.jfree.chart.plot.FastScatterPlot");
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(extendedCategoryAxis0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setAxisOffset(combinedDomainCategoryPlot1.DEFAULT_INSETS);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-1));
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) intervalMarker0, layer0);
      int int0 = 157;
      int int1 = 469;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(491, 157, 469);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 469
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(1366, categoryMarker1, layer1);
      combinedRangeCategoryPlot0.zoom(0.0F);
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 3621.3825605);
      Layer layer2 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) intervalMarker0, layer2);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker1, layer1);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(categoryMarker0, xYSeriesCollection0);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(false);
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.toLanguageTag();
      NumberAxis.createIntegerTickUnits(locale0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0F, "zh-TW");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.setAnchorValue((double) 10);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(479, categoryMarker0, layer0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      short[] shortArray0 = new short[0];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable(499, shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of components must  be at least 1
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      combinedDomainCategoryPlot0.getWeight();
      combinedDomainCategoryPlot0.getDomainAxisLocation(2);
      combinedDomainCategoryPlot0.getRenderer(463);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Locale locale0 = Locale.GERMAN;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) list0);
      locale0.toLanguageTag();
      NumberAxis.createIntegerTickUnits(locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.setAnchorValue(1.0E-8);
      CategoryMarker categoryMarker0 = new CategoryMarker(numberAxis3D0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-1289);
      shortArray0[1] = (short)120;
      short short0 = (short)241;
      shortArray0[2] = (short)241;
      shortArray0[3] = (short) (-331);
      shortArray0[4] = (short)705;
      shortArray0[5] = (short)2309;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setRangeCrosshairStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot2.getRangeAxisForDataset(0);
      combinedDomainCategoryPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      String string0 = "";
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.addCategoryLabelToolTip(false, "");
      combinedDomainCategoryPlot0.getRangeAxisLocation(2450);
      combinedDomainCategoryPlot0.getPlotType();
      combinedDomainCategoryPlot0.getRangeAxisForDataset(2450);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
      try { 
        defaultTableXYDataset0.getSeries((-1377));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset(633);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(999, (CategoryDataset) null);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDomainAxis(580, (CategoryAxis) null);
      categoryPlot0.setRangeCrosshairValue(2593.61456985742, true);
      categoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      combinedDomainCategoryPlot0.setDataset(489, (CategoryDataset) defaultCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.addCategoryLabelToolTip("ZOOM_OUT_BOTH", "PRINT");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(200, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(7, (CategoryDataset) taskSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.configureDomainAxes();
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      DateAxis dateAxis0 = new DateAxis(":!$cJ");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, dateAxis0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-2711), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Category Plot");
      extendedCategoryAxis0.addCategoryLabelToolTip(false, "org.jfree.chart.renderer.xy.DeviationRenderer$State");
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-535), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers(10, layer1);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category Plot");
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      xYSeriesCollection0.getDomainBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("?CU", (Range) null);
      CategoryPlot categoryPlot1 = null;
      try {
        categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, subCategoryAxis0, moduloAxis0, areaRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getRangeAxisEdge(1);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, numberAxis0, barRenderer3D0);
      categoryPlot0.setAnchorValue((-763.2528458629428), false);
      categoryPlot0.setForegroundAlpha(500);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, (double) 2.0F, 121.38668500898419, (-1379.4360228));
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, datasetRenderingOrder0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform1, renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      int int0 = 365;
      int int1 = 1854;
      int int2 = 462;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte) (-126);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(17, 48, byteArray0, byteArray0, byteArray0, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setAnchorValue(0.05, false);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      combinedDomainCategoryPlot0.getIndexOf(areaRenderer0);
      combinedDomainCategoryPlot0.getDomainAxis((-1));
      combinedDomainCategoryPlot0.clearRangeMarkers();
      combinedDomainCategoryPlot0.getRangeAxisEdge();
      combinedDomainCategoryPlot0.getDomainAxisLocation(1366);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("K@(jV^vJ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getAnchorValue();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[0] = valueAxis0;
      Day day0 = new Day();
      PeriodAxis periodAxis0 = new PeriodAxis("K@(jV^vJ", day0, day0);
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      valueAxisArray0[2] = (ValueAxis) numberAxis3D0;
      PeriodAxis periodAxis1 = new PeriodAxis("Category Plot", day0, day0);
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      ValueAxis[] valueAxisArray0 = new ValueAxis[16];
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("5&iDN");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-3135), (CategoryAxis) subCategoryAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(2074, categoryMarker0, layer0);
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getWeight();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      markerChangeEvent0.setChart(jFreeChart0);
      intervalMarker0.setLabel("");
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getWeight();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(8, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds((-3));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      Layer layer2 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds(360);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.2, "");
      cyclicNumberAxis0.setAdvanceLineStroke(categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(subCategoryAxis0);
      axisChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 221, 15, 15, 489, (-1), (-1390), true, true, false, true, true, false);
      Point point0 = chartPanel0.getLocation();
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomDomainAxes(1036.4919927062133, (double) 221, plotRenderingInfo0, (Point2D) point0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2500.0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot1.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("org.jfree.chart.axis.CategoryAxis3D");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle(3999.54866652);
      combinedDomainCategoryPlot0.setDomainAxis(10, categoryAxis0, false);
      categoryAxis0.addCategoryLabelToolTip(500, "hS&YBO\"gS-");
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation(10);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(10);
      axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.getDomainAxisEdge(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      rectangle0.setSize(1991, (-2204));
      JTree jTree0 = new JTree();
      jTree0.setAutoscrolls(false);
      jTree0.getRowBounds(1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'location' for index 0 not permitted.");
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis((String) null);
      CategoryAxis categoryAxis1 = new CategoryAxis("TextAnchor.BOTTOM_CENTER");
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultCategoryDataset0);
      CategoryTextAnnotation categoryTextAnnotation0 = null;
      try {
        categoryTextAnnotation0 = new CategoryTextAnnotation((String) null, 15, 0.05);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getOrientation();
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1722.069389723553));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 0.0F, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(481);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(500);
      categoryPlot0.setDomainAxisLocation(axisLocation0);
      categoryPlot0.clearRangeAxes();
      categoryPlot0.clearRangeMarkers(500);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      combinedRangeCategoryPlot0.getAnchorValue();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryAxis3D0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setRangeAxisLocation(496, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null, 680, 0, 0, (-1), 680, 500, false, true, false, true, true, true);
      Point point0 = chartPanel1.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes((double) 420, 0.0, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      String string0 = "org.jfree.chart.plot.FastScatterPlot";
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.plot.FastScatterPlot", 1.0F, 2.0, 1.0F);
      combinedDomainCategoryPlot0.removeAnnotation(categoryPointerAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(487, categoryMarker0, layer0);
      TimeZone.getDefault();
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(10, "org.jfree.chart.plot.FastScatterPlot", (-3993), (-3993), 10, (-3993), 489, 68, 10, (-3993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month -3993
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getOrientation();
      combinedDomainCategoryPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) intervalBarRenderer0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(1.0F, (-1.0), categoryAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, periodAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1454.049F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) null);
      Area area0 = new Area();
      area0.getBounds();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainCategoryPlot0.clone();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      categoryPlot0.setRangeCrosshairStroke(areaRenderer0.DEFAULT_STROKE);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(478);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer1 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer1);
      categoryPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(3);
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.getDomainAxisEdge(734);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      combinedRangeCategoryPlot0.getDomainAxisEdge(10);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(734);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      categoryPlot0.getDomainAxisEdge(0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2269.1659), 1128.73, 1.0F, 226.52);
      // Undeclared exception!
      try { 
        rectangle2D_Double0.createIntersection((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      JTree jTree0 = new JTree();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LegendItemCollection legendItemCollection0 = combinedRangeCategoryPlot0.getLegendItems();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getLegendItem(10, (-2177));
      legendItemCollection0.add((LegendItem) null);
      combinedRangeCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      combinedRangeCategoryPlot0.getAnchorValue();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.setAxisLineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.setDomainAxis(0, (CategoryAxis) extendedCategoryAxis0);
      String string0 = "TQAERm|K'r7ie";
      Hour.parseHour("TQAERm|K'r7ie");
      Minute minute0 = null;
      try {
        minute0 = new Minute(0, (Hour) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hour' argument.
         //
         verifyException("org.jfree.data.time.Minute", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("kg6UG=2");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, numberAxis0, defaultCategoryItemRenderer0);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      categoryPlot0.clone();
      axisLocation0.getOpposite();
      categoryPlot0.configureRangeAxes();
      categoryPlot0.getPlotType();
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxisLocation((-2513), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.configureDomainAxes();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-2382), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("kg6UG=2");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis0, defaultCategoryItemRenderer0);
      categoryPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getAnnotations();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker(1608, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 10, 1.0F, 1.0E-8, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(10, axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot0.setDomainAxisLocation(2643, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.clearRangeAxes();
      int int0 = 384;
      combinedDomainCategoryPlot0.getRangeMarkers(384, layer0);
      DateAxis dateAxis0 = new DateAxis("");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-481), (ValueAxis) dateAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedRangeAxisSpace();
      String string0 = "fV2$Ev";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "fV2$Ev");
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxis((-1), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRenderer(500, (CategoryItemRenderer) null, true);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) null, false);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) lineRenderer3D0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDomainAxis(580, (CategoryAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.setRangeGridlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) null);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot1.setRangeAxisLocation(10, axisLocation0);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainCategoryPlot1.clearRangeMarkers(10);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      combinedDomainCategoryPlot1.zoomDomainAxes((double) 1.0F, 2557.17286, plotRenderingInfo1, (Point2D) null);
      combinedDomainCategoryPlot1.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      Second second0 = new Second(mockDate0);
      categoryAxis0.getCategoryLabelToolTip(second0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 1.0F, "pnS&$");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(500);
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 0, 0, 0, 10, (-1), (-1), true, true, true, true, true, true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, (double) 500, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setLabelURL("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, "");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2652.0, "Null 'marker' not permitted.");
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = null;
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(2636, (CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("uQ9xgpZ0UJ?");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-5));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot1.getAnchorValue();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("uQ9xgpZ0UJ?", 10, 0.0F);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) boxAndWhiskerRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      categoryMarker0.setOutlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker((-2551), categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10.0F, 10, 10.0F, 1.0F, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      String string0 = "%z:`L9P{[i:M{S";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1991, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      Area area0 = new Area();
      area0.getBounds();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getDomainAxisEdge(10);
      combinedDomainCategoryPlot1.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(0.2);
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      categoryAxis3D0.setTickLabelFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      combinedDomainCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      combinedRangeCategoryPlot0.getDomainAxisEdge((-1));
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(1.0E-8, true);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(428);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) dateAxis0, true);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      JTree jTree0 = new JTree();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(15);
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clone();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 10, 1.0F, 1.0E-8, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-1), (ValueAxis) dateAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = 420;
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CategoryItemEntity: rowKey=";
      stringArray0[1] = "CategoryItemEntity: rowKey=";
      stringArray0[2] = "CategoryItemEntity: rowKey=";
      stringArray0[3] = "CategoryItemEntity: rowKey=";
      stringArray0[4] = "CategoryItemEntity: rowKey=";
      SymbolAxis symbolAxis0 = new SymbolAxis("CategoryItemEntity: rowKey=", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      combinedRangeCategoryPlot0.getRangeMarkers(10, layer0);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(12, layer0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      JTree jTree0 = new JTree();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(51);
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0, 36);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight((-1));
      combinedRangeCategoryPlot0.getPlotType();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, 3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ValueMarker valueMarker0 = new ValueMarker((-1.7549891306326608));
      NumberAxis numberAxis0 = new NumberAxis("~lh&");
      Color color0 = Color.black;
      numberAxis0.setAxisLinePaint(color0);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryAxis categoryAxis0 = new CategoryAxis("Category Plot");
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      combinedRangeCategoryPlot0.setAnchorValue(775.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.clearRangeMarkers(10);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, (Layer) null);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset(14);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("#i24");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(734, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      stackedBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, symbolAxis0, (Marker) null, rectangle2D0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      subCategoryAxis0.addChangeListener(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      categoryPlot1.setRangeCrosshairVisible(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      symbolAxis0.setVerticalTickLabels(true);
      subCategoryAxis0.setTickMarkInsideLength(1.0F);
      combinedDomainCategoryPlot0.setDomainAxisLocation(44, (AxisLocation) null, false);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      categoryPlot1.setDomainAxisLocation(500, axisLocation0);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.2, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.isRangeZoomable();
      combinedDomainCategoryPlot0.getRangeAxisLocation(1102);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis1);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker((-1.0));
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDomainAxis(580, (CategoryAxis) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisEdge();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation((-3419));
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick(0, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
