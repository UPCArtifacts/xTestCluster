/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 15 17:15:40 GMT 2022
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.FunctionNode;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.ScriptOrFnNode;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.BooleanLiteralSet;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ObjectType;
import java.io.CharArrayWriter;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      assertNotNull(node_SideEffectFlags0);
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals(31, node_SideEffectFlags0.valueOf());
      
      node_SideEffectFlags0.clearSideEffectFlags();
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals(31, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-888));
      assertNotNull(node_SideEffectFlags0);
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals((-888), node_SideEffectFlags0.valueOf());
      
      boolean boolean0 = node_SideEffectFlags0.areAllFlagsSet();
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals((-888), node_SideEffectFlags0.valueOf());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 20, 20);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(20, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(81940, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(20, node0.getCharno());
      
      Node node1 = new Node(24, node0);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertNotNull(node1);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(20, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(81940, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(20, node0.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(24, node1.getType());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DIV
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(392, (-2858), (-2858));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(392, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(392, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasOneChild());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(1, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertTrue(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      
      String string0 = node0.getQualifiedName();
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNull(string0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(392, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasOneChild());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(1, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertTrue(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString(142, "r");
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals(142, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      
      boolean boolean0 = node0.isEquivalentTo(node0, false, true);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertFalse(node0.hasChildren());
      assertEquals(142, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      
      Node node1 = new Node(117, node0);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node1);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(117, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.equals((Object)node0));
      
      String string0 = node1.toString(true, false, true);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(string0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(117, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals("CONTINUE", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(551, 47, 119);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(47, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(119, node0.getCharno());
      assertEquals(551, node0.getType());
      assertEquals(192631, node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.setString("<qjZMKV`<ITbD");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 551
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(3903, node0.getType());
      
      node0.putIntProp((-1374), (-1374));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(3903, node0.getType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3111));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = Node.newString("EvalError", 5, 35);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node1);
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(35, node1.getCharno());
      assertFalse(node1.hasOneChild());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(40, node1.getType());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasChildren());
      assertEquals(5, node1.getLineno());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node(44, nodeArray0, 28, 101);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = Node.newNumber(0.0, 30, 1);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertNotNull(node1);
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(1, node1.getCharno());
      assertFalse(node1.hasOneChild());
      assertEquals(30, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(122881, node1.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      node0.setDouble((-1.0));
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
      
      boolean boolean0 = node1.isEquivalentTo(node0, false, false);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(1, node1.getCharno());
      assertFalse(node1.hasOneChild());
      assertEquals(30, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(122881, node1.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("", 36, 98);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertNotNull(node0);
      assertEquals(36, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(98, node0.getCharno());
      assertEquals(40, node0.getType());
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.google.javascript.rhino.jstype.PrototypeObjectType");
      assertNotNull(mockPrintStream0);
      
      node0.appendStringTree(mockPrintStream0);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(98, node0.getCharno());
      assertEquals(40, node0.getType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), 4095);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertNotNull(node0);
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = new Node((-4501), node0, node0, node0, node0);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertNotNull(node1);
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertEquals((-4501), node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(scriptOrFnNode0, scriptOrFnNode0);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(node_NodeMismatch0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      assertNotNull(node_AncestorIterable0);
      
      Iterator<Node> iterator0 = node_AncestorIterable0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("r", 12, 142);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertNotNull(functionNode0);
      assertEquals(142, functionNode0.getCharno());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasChildren());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(12, functionNode0.getLineno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals(49294, functionNode0.getSourcePosition());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.requiresActivation());
      
      functionNode0.setVarArgs(true);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(142, functionNode0.getCharno());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasChildren());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(12, functionNode0.getLineno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals(49294, functionNode0.getSourcePosition());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.requiresActivation());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString(1362, "T-\u0006");
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1362, node0.getType());
      assertFalse(node0.hasOneChild());
      
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      assertNotNull(jSTypeRegistry0);
      assertTrue(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      FunctionType functionType0 = (FunctionType)jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) null, (JSType) null, (List<JSType>) linkedList0);
      assertEquals(0, JSType.NOT_ENUMDECL);
      assertEquals(1, JSType.ENUMDECL);
      assertNotNull(functionType0);
      assertTrue(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(functionType0.isRecordType());
      assertTrue(functionType0.canBeCalled());
      assertFalse(functionType0.isResolved());
      assertFalse(functionType0.hasCachedValues());
      assertFalse(functionType0.hasInstanceType());
      assertFalse(functionType0.isReturnTypeInferred());
      assertFalse(functionType0.isNullType());
      assertTrue(functionType0.isObject());
      assertFalse(functionType0.isTemplateType());
      assertFalse(functionType0.isNoType());
      assertFalse(functionType0.isNoObjectType());
      assertFalse(functionType0.isInterface());
      assertEquals(BooleanLiteralSet.TRUE, functionType0.getPossibleToBooleanOutcomes());
      assertTrue(functionType0.isFunctionType());
      assertFalse(functionType0.isEnumElementType());
      assertFalse(functionType0.isConstructor());
      assertFalse(functionType0.isAllType());
      assertFalse(functionType0.isVoidType());
      assertFalse(functionType0.isEnumType());
      assertFalse(functionType0.isNominalType());
      assertFalse(functionType0.isCheckedUnknownType());
      assertTrue(functionType0.isOrdinaryFunction());
      assertNull(functionType0.getTemplateTypeName());
      assertFalse(functionType0.isUnionType());
      assertFalse(functionType0.isStringValueType());
      assertEquals(0, functionType0.getExtendedInterfacesCount());
      assertFalse(functionType0.isNumberValueType());
      assertFalse(functionType0.isBooleanValueType());
      assertFalse(functionType0.isNoResolvedType());
      assertFalse(functionType0.isFunctionPrototypeType());
      
      node0.setJSType(functionType0);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, JSType.NOT_ENUMDECL);
      assertEquals(1, JSType.ENUMDECL);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1362, node0.getType());
      assertFalse(node0.hasOneChild());
      assertTrue(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(functionType0.isRecordType());
      assertTrue(functionType0.canBeCalled());
      assertFalse(functionType0.isResolved());
      assertFalse(functionType0.hasCachedValues());
      assertFalse(functionType0.hasInstanceType());
      assertFalse(functionType0.isReturnTypeInferred());
      assertFalse(functionType0.isNullType());
      assertTrue(functionType0.isObject());
      assertFalse(functionType0.isTemplateType());
      assertFalse(functionType0.isNoType());
      assertFalse(functionType0.isNoObjectType());
      assertFalse(functionType0.isInterface());
      assertEquals(BooleanLiteralSet.TRUE, functionType0.getPossibleToBooleanOutcomes());
      assertTrue(functionType0.isFunctionType());
      assertFalse(functionType0.isEnumElementType());
      assertFalse(functionType0.isConstructor());
      assertFalse(functionType0.isAllType());
      assertFalse(functionType0.isVoidType());
      assertFalse(functionType0.isEnumType());
      assertFalse(functionType0.isNominalType());
      assertFalse(functionType0.isCheckedUnknownType());
      assertTrue(functionType0.isOrdinaryFunction());
      assertNull(functionType0.getTemplateTypeName());
      assertFalse(functionType0.isUnionType());
      assertFalse(functionType0.isStringValueType());
      assertEquals(0, functionType0.getExtendedInterfacesCount());
      assertFalse(functionType0.isNumberValueType());
      assertFalse(functionType0.isBooleanValueType());
      assertFalse(functionType0.isNoResolvedType());
      assertFalse(functionType0.isFunctionPrototypeType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = Node.mergeLineCharNo(18, (-1372));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-3487));
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      Node node0 = Node.newString(31, "_> .#B8S6AbM4yn2yY=", 1014, (-2198));
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(31, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      
      boolean boolean0 = node0.isEquivalentToTyped(scriptOrFnNode0);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(31, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      
      Node node1 = new Node(41, node0, 23, 4095);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertNotNull(node1);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(23, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals(41, node1.getType());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      
      boolean boolean0 = node1.isEquivalentTo(node0);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(23, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals(41, node1.getType());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      
      int int0 = node0.getType();
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals(83, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-115));
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.RIGHT);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-115), scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      
      int int0 = scriptOrFnNode0.getType();
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.RIGHT);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-115), scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-115), int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString("rWHTvX5/|-", 1195, (-1145));
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      
      String string0 = node0.getString();
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertNotNull(string0);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals("rWHTvX5/|-", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString("", 36, 98);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node0);
      assertEquals(40, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(98, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertEquals(36, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      String string0 = node0.getString();
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(string0);
      assertEquals(40, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(98, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertEquals(36, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString(0, "bitnot", 0, 0);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertNotNull(node0);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getType());
      
      int int0 = node0.getSourcePosition();
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString(1395, "EvalError", 278, 30);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(1138718, node0.getSourcePosition());
      assertEquals(30, node0.getCharno());
      assertEquals(278, node0.getLineno());
      assertEquals(1395, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      
      int int0 = node0.getSourcePosition();
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(1138718, node0.getSourcePosition());
      assertEquals(30, node0.getCharno());
      assertEquals(278, node0.getLineno());
      assertEquals(1395, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1138718, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      nodeArray0[0] = node0;
      Node node1 = new Node(1675, nodeArray0);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertNotNull(node1);
      assertEquals(1675, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getLineno());
      assertTrue(node1.hasChildren());
      assertEquals(0, node1.getCharno());
      assertEquals(0, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(1, nodeArray0.length);
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node0.getParent();
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertNotNull(node2);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node2.hasOneChild());
      assertEquals(0, node2.getSourcePosition());
      assertFalse(node2.isQualifiedName());
      assertEquals(1, node2.getChildCount());
      assertFalse(node2.hasMoreThanOneChild());
      assertFalse(node2.isUnscopedQualifiedName());
      assertEquals(0, node2.getLineno());
      assertTrue(node2.hasChildren());
      assertEquals(0, node2.getCharno());
      assertEquals(1675, node2.getType());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node0, node2);
      assertNotSame(node2, node0);
      assertSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("7,j<7");
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertNotNull(functionNode0);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals("7,j<7", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals((-1), functionNode0.getSourcePosition());
      
      Node node0 = new Node(96, functionNode0, functionNode0);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertNotNull(node0);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals("7,j<7", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasChildren());
      assertEquals(96, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasOneChild());
      
      Node node1 = functionNode0.getParent();
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node1);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals("7,j<7", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasChildren());
      assertEquals(96, node1.getType());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode((String) null);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(functionNode0);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getFunctionType());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(105, functionNode0.getType());
      assertNull(functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      
      int int0 = functionNode0.getLineno();
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getFunctionType());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(105, functionNode0.getType());
      assertNull(functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("hook");
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertNotNull(functionNode0);
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.isQualifiedName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals("hook", functionNode0.getFunctionName());
      assertNull(functionNode0.getSourceName());
      
      FunctionNode functionNode1 = (FunctionNode)functionNode0.getLastSibling();
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertNotNull(functionNode1);
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.isQualifiedName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals("hook", functionNode0.getFunctionName());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode1.getSourcePosition());
      assertFalse(functionNode1.hasChildren());
      assertEquals((-1), functionNode1.getEndLineno());
      assertFalse(functionNode1.hasOneChild());
      assertEquals(0, functionNode1.getParamCount());
      assertFalse(functionNode1.isQualifiedName());
      assertEquals(0, functionNode1.getEncodedSourceEnd());
      assertFalse(functionNode1.isUnscopedQualifiedName());
      assertEquals(0, functionNode1.getEncodedSourceStart());
      assertEquals((-1), functionNode1.getBaseLineno());
      assertEquals(0, functionNode1.getFunctionType());
      assertEquals((-1), functionNode1.getCharno());
      assertNull(functionNode1.getSourceName());
      assertEquals(105, functionNode1.getType());
      assertFalse(functionNode1.requiresActivation());
      assertEquals("hook", functionNode1.getFunctionName());
      assertEquals(0, functionNode1.getChildCount());
      assertEquals((-1), functionNode1.getLineno());
      assertFalse(functionNode1.getIgnoreDynamicScope());
      assertFalse(functionNode1.hasMoreThanOneChild());
      assertSame(functionNode0, functionNode1);
      assertSame(functionNode1, functionNode0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString(691, "y5ikEp8D4+\"Z-K}f");
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals(691, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = node0.getLastChild();
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNull(node1);
      assertFalse(node0.hasChildren());
      assertEquals(691, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      
      JSType jSType0 = node0.getJSType();
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertNull(jSType0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      
      Node node1 = node0.getFirstChild();
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertNull(node1);
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber((double) 9, 102, 4);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(4, node0.getCharno());
      assertEquals(102, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(417796, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      
      double double0 = node0.getDouble();
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(4, node0.getCharno());
      assertEquals(102, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(417796, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertEquals(9.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-3487));
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      
      int int0 = scriptOrFnNode0.getChildCount();
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-22), nodeArray0);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-22), node0.getType());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, nodeArray0.length);
      
      int int0 = node0.getCharno();
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-22), node0.getType());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, nodeArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1822), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = new Node(41, node0, 23, 4095);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertNotNull(node1);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1822), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isQualifiedName());
      assertEquals(23, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      
      int int0 = node1.getCharno();
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1822), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isQualifiedName());
      assertEquals(23, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertEquals(4095, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = Node.extractLineno(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = Node.extractCharno((-426));
      assertEquals(3670, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3111));
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = new Node((-1660));
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(node1);
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1660), node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.copyInformationFromForTree(node0);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertNotNull(node2);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1660), node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getLineno());
      assertFalse(node2.hasOneChild());
      assertFalse(node2.hasMoreThanOneChild());
      assertFalse(node2.isQualifiedName());
      assertEquals((-1), node2.getLineno());
      assertEquals(0, node2.getChildCount());
      assertFalse(node2.isUnscopedQualifiedName());
      assertEquals((-1), node2.getSourcePosition());
      assertFalse(node2.hasChildren());
      assertEquals((-1660), node2.getType());
      assertEquals((-1), node2.getCharno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node0));
      assertSame(node1, node2);
      assertSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString(0, "bitnot", 12, 0);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertNotNull(node0);
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(49152, node0.getSourcePosition());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(3);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(3, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      
      ScriptOrFnNode scriptOrFnNode1 = (ScriptOrFnNode)scriptOrFnNode0.copyInformationFromForTree(node0);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(scriptOrFnNode1);
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(49152, node0.getSourcePosition());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(12, scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(3, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(49152, scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceStart());
      assertFalse(scriptOrFnNode1.isQualifiedName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceEnd());
      assertEquals(49152, scriptOrFnNode1.getSourcePosition());
      assertEquals(0, scriptOrFnNode1.getParamCount());
      assertEquals((-1), scriptOrFnNode1.getBaseLineno());
      assertFalse(scriptOrFnNode1.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode1.getCharno());
      assertEquals(12, scriptOrFnNode1.getLineno());
      assertFalse(scriptOrFnNode1.hasOneChild());
      assertNull(scriptOrFnNode1.getSourceName());
      assertEquals((-1), scriptOrFnNode1.getEndLineno());
      assertFalse(scriptOrFnNode1.hasChildren());
      assertEquals(3, scriptOrFnNode1.getType());
      assertFalse(scriptOrFnNode1.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode1.getChildCount());
      assertSame(scriptOrFnNode0, scriptOrFnNode1);
      assertSame(scriptOrFnNode1, scriptOrFnNode0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0, 0, 645);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(645, scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(645, scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      
      ScriptOrFnNode scriptOrFnNode1 = (ScriptOrFnNode)scriptOrFnNode0.copyInformationFromForTree(scriptOrFnNode0);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertNotNull(scriptOrFnNode1);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(645, scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(645, scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode1.hasChildren());
      assertEquals(0, scriptOrFnNode1.getLineno());
      assertEquals(0, scriptOrFnNode1.getType());
      assertNull(scriptOrFnNode1.getSourceName());
      assertEquals(645, scriptOrFnNode1.getSourcePosition());
      assertEquals(645, scriptOrFnNode1.getCharno());
      assertEquals((-1), scriptOrFnNode1.getBaseLineno());
      assertFalse(scriptOrFnNode1.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode1.getParamCount());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode1.getChildCount());
      assertFalse(scriptOrFnNode1.isQualifiedName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceStart());
      assertFalse(scriptOrFnNode1.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode1.getEndLineno());
      assertFalse(scriptOrFnNode1.hasOneChild());
      assertSame(scriptOrFnNode0, scriptOrFnNode1);
      assertSame(scriptOrFnNode1, scriptOrFnNode0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(83, node0.getType());
      
      Node node1 = new Node(4, 15, 2);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(13, Node.CASES_PROP);
      assertNotNull(node1);
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(4, node1.getType());
      assertEquals(61442, node1.getSourcePosition());
      assertEquals(15, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasChildren());
      assertEquals(2, node1.getCharno());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node0.copyInformationFrom(node1);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node2);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(15, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals(2, node0.getCharno());
      assertEquals(61442, node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(83, node0.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(4, node1.getType());
      assertEquals(61442, node1.getSourcePosition());
      assertEquals(15, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasChildren());
      assertEquals(2, node1.getCharno());
      assertFalse(node2.hasOneChild());
      assertEquals(15, node2.getLineno());
      assertEquals(2, node2.getCharno());
      assertEquals(61442, node2.getSourcePosition());
      assertFalse(node2.isUnscopedQualifiedName());
      assertFalse(node2.isQualifiedName());
      assertFalse(node2.hasChildren());
      assertEquals(0, node2.getChildCount());
      assertEquals(83, node2.getType());
      assertFalse(node2.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertSame(node0, node2);
      assertNotSame(node0, node1);
      assertNotSame(node1, node2);
      assertNotSame(node1, node0);
      assertSame(node2, node0);
      assertNotSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertNotNull(node0);
      assertEquals((-1822), node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      
      Node node1 = new Node(41, node0, 23, 4095);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertNotNull(node1);
      assertEquals((-1822), node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(4095, node1.getCharno());
      assertEquals(98303, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(23, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.copyInformationFrom(node0);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node2);
      assertEquals((-1822), node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getLineno());
      assertFalse(node2.isUnscopedQualifiedName());
      assertTrue(node2.hasChildren());
      assertEquals((-1), node2.getLineno());
      assertFalse(node2.isQualifiedName());
      assertEquals(1, node2.getChildCount());
      assertEquals((-1), node2.getCharno());
      assertEquals((-1), node2.getSourcePosition());
      assertFalse(node2.hasMoreThanOneChild());
      assertEquals(41, node2.getType());
      assertTrue(node2.hasOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node0));
      assertSame(node1, node2);
      assertSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("\n\nSubtree1: ", (-4109), 18);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertEquals("\n\nSubtree1: ", functionNode0.getFunctionName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getEndLineno());
      
      FunctionNode functionNode1 = (FunctionNode)functionNode0.cloneTree();
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(functionNode1);
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertEquals("\n\nSubtree1: ", functionNode0.getFunctionName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode1.hasChildren());
      assertEquals((-1), functionNode1.getSourcePosition());
      assertEquals(0, functionNode1.getEncodedSourceStart());
      assertFalse(functionNode1.isQualifiedName());
      assertEquals(0, functionNode1.getFunctionType());
      assertEquals(0, functionNode1.getEncodedSourceEnd());
      assertEquals((-1), functionNode1.getLineno());
      assertEquals((-1), functionNode1.getCharno());
      assertNull(functionNode1.getSourceName());
      assertFalse(functionNode1.requiresActivation());
      assertEquals(0, functionNode1.getParamCount());
      assertEquals("\n\nSubtree1: ", functionNode1.getFunctionName());
      assertFalse(functionNode1.hasMoreThanOneChild());
      assertEquals((-1), functionNode1.getBaseLineno());
      assertFalse(functionNode1.isUnscopedQualifiedName());
      assertFalse(functionNode1.getIgnoreDynamicScope());
      assertEquals(0, functionNode1.getChildCount());
      assertFalse(functionNode1.hasOneChild());
      assertEquals((-1), functionNode1.getEndLineno());
      assertEquals(105, functionNode1.getType());
      assertFalse(functionNode1.equals((Object)functionNode0));
      assertNotSame(functionNode0, functionNode1);
      assertNotSame(functionNode1, functionNode0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      
      scriptOrFnNode0.setSourcePositionForTree(2048);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(2048, scriptOrFnNode0.getCharno());
      assertEquals(2048, scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      
      ScriptOrFnNode scriptOrFnNode1 = (ScriptOrFnNode)scriptOrFnNode0.cloneTree();
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertNotNull(scriptOrFnNode1);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(2048, scriptOrFnNode0.getCharno());
      assertEquals(2048, scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode1.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode1.getType());
      assertEquals(2048, scriptOrFnNode1.getCharno());
      assertFalse(scriptOrFnNode1.hasChildren());
      assertEquals((-1), scriptOrFnNode1.getBaseLineno());
      assertFalse(scriptOrFnNode1.hasOneChild());
      assertEquals((-1), scriptOrFnNode1.getEndLineno());
      assertEquals(0, scriptOrFnNode1.getLineno());
      assertFalse(scriptOrFnNode1.isQualifiedName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceStart());
      assertFalse(scriptOrFnNode1.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode1.getChildCount());
      assertEquals(2048, scriptOrFnNode1.getSourcePosition());
      assertEquals(0, scriptOrFnNode1.getParamCount());
      assertNull(scriptOrFnNode1.getSourceName());
      assertFalse(scriptOrFnNode1.equals((Object)scriptOrFnNode0));
      assertNotSame(scriptOrFnNode0, scriptOrFnNode1);
      assertNotSame(scriptOrFnNode1, scriptOrFnNode0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertEquals(16, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1, node0.getLineno());
      assertEquals(0, node0.getType());
      assertTrue(node0.hasChildren());
      
      Node node1 = node0.cloneTree();
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertNotNull(node1);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertEquals(16, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1, node0.getLineno());
      assertEquals(0, node0.getType());
      assertTrue(node0.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getLineno());
      assertEquals(0, node1.getType());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertEquals(16, node1.getCharno());
      assertEquals(4112, node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      
      ScriptOrFnNode scriptOrFnNode1 = (ScriptOrFnNode)scriptOrFnNode0.clonePropsFrom(scriptOrFnNode0);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(scriptOrFnNode1);
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode1.getBaseLineno());
      assertEquals(0, scriptOrFnNode1.getType());
      assertFalse(scriptOrFnNode1.isQualifiedName());
      assertEquals((-1), scriptOrFnNode1.getLineno());
      assertFalse(scriptOrFnNode1.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode1.getSourceName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode1.getParamCount());
      assertEquals((-1), scriptOrFnNode1.getSourcePosition());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode1.getCharno());
      assertEquals((-1), scriptOrFnNode1.getEndLineno());
      assertFalse(scriptOrFnNode1.hasOneChild());
      assertEquals(0, scriptOrFnNode1.getChildCount());
      assertFalse(scriptOrFnNode1.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode1.hasChildren());
      assertSame(scriptOrFnNode0, scriptOrFnNode1);
      assertSame(scriptOrFnNode1, scriptOrFnNode0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = new Node(125, node0, node0, 1, 108);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node1);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(125, node1.getType());
      assertEquals(4204, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getLineno());
      assertTrue(node1.hasChildren());
      assertTrue(node1.hasOneChild());
      assertEquals(108, node1.getCharno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.clonePropsFrom(node0);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertNotNull(node2);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(125, node1.getType());
      assertEquals(4204, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getLineno());
      assertTrue(node1.hasChildren());
      assertTrue(node1.hasOneChild());
      assertEquals(108, node1.getCharno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node2.isUnscopedQualifiedName());
      assertEquals(1, node2.getLineno());
      assertFalse(node2.isQualifiedName());
      assertEquals(1, node2.getChildCount());
      assertEquals(108, node2.getCharno());
      assertEquals(125, node2.getType());
      assertTrue(node2.hasOneChild());
      assertFalse(node2.hasMoreThanOneChild());
      assertTrue(node2.hasChildren());
      assertEquals(4204, node2.getSourcePosition());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node0));
      assertSame(node1, node2);
      assertSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node((-1822), (-1822), 1053);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getChildCount());
      
      Node node1 = node0.cloneNode();
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node1);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1822), node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.hasChildren());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(83, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      
      Node node1 = new Node(0);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertNotNull(node1);
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(0, node1.getType());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasChildren());
      assertFalse(node1.hasOneChild());
      assertFalse(node1.equals((Object)node0));
      
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertNotNull(node_NodeMismatch0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(83, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(0, node1.getType());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasChildren());
      assertFalse(node1.hasOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1822
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString(3711, "1+fTMG^");
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(3711, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      
      // Undeclared exception!
      try { 
        node0.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3711
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString((-2053), "");
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2053), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2053
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      
      try { 
        node0.setString("EvalError");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1054.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasChildren());
      assertEquals(3903, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(3903, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      assertNotNull(node_SideEffectFlags0);
      assertEquals(2, node_SideEffectFlags0.valueOf());
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3903
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2426, 2426, 0);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(9936896, node0.getSourcePosition());
      assertEquals(2426, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = new Node(2492, node0, 37, 42);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node1);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(9936896, node0.getSourcePosition());
      assertEquals(2426, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(37, node1.getLineno());
      assertEquals(151594, node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertTrue(node1.hasOneChild());
      assertEquals(42, node1.getCharno());
      assertEquals(2492, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(25);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2492
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString((-1050), "Jat/qvtD~4^o5");
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1050), node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      
      // Undeclared exception!
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1050
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("directives");
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertNotNull(functionNode0);
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasChildren());
      assertFalse(functionNode0.hasOneChild());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals("directives", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getBaseLineno());
      
      // Undeclared exception!
      try { 
        functionNode0.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 20, 20);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(81940, node0.getSourcePosition());
      assertFalse(node0.hasOneChild());
      assertEquals(20, node0.getCharno());
      assertEquals(20, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(41, (String) null, 62, 997);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(18, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(4);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(4, scriptOrFnNode0.getType());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      
      // Undeclared exception!
      try { 
        scriptOrFnNode0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(392, (-2858), (-2858));
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(392, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      // Undeclared exception!
      try { 
        scriptOrFnNode0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 392
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber((-240.77));
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = new Node((-3002), node0, 369, 16);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertNotNull(node1);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(369, node1.getLineno());
      assertEquals(1511440, node1.getSourcePosition());
      assertEquals(16, node1.getCharno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-3002), node1.getType());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3002
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, (-930), (-1050));
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString("", (-1421), (-1421));
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals(40, node0.getType());
      
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("sa#E:%@q8Hh-O6");
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertNotNull(functionNode0);
      assertEquals("sa#E:%@q8Hh-O6", functionNode0.getFunctionName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      
      // Undeclared exception!
      try { 
        functionNode0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.RIGHT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(83, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, jSTypeArray0.length);
      
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.addChildAfter(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(50, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node((-2430));
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-2430), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-2001), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, jSTypeArray0.length);
      
      Node node1 = null;
      try {
        node1 = new Node((-1207), (Node) null, node0, (Node) null, node0, 28, 19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber((double) 61, 2, 111);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(39, node0.getType());
      assertEquals(2, node0.getLineno());
      assertEquals(111, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(8303, node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = null;
      try {
        node1 = new Node(44, node0, node0, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertNotNull(scriptOrFnNode0);
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertNotNull(node0);
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasOneChild());
      assertEquals(16, node0.getCharno());
      assertEquals(4112, node0.getSourcePosition());
      assertEquals(1, node0.getLineno());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = null;
      try {
        node1 = new Node(39, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(1210, (Node) null, (Node) null, (Node) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), 4095);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      
      node0.addChildAfter(node0, node0);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = null;
      try {
        node1 = new Node(1, node0, node0, node0, (-3), 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(40, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(48, (Node) null, (Node) null, 797, 3024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("^k3M", 1523, 1523);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(6239731, node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1523, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(40, node0.getType());
      assertEquals(1523, node0.getCharno());
      
      nodeArray0[0] = node0;
      Node node1 = new Node(20, nodeArray0[0], node0, node0);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertNotNull(node1);
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(6239731, node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1523, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(40, node0.getType());
      assertEquals(1523, node0.getCharno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertEquals(20, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(3, nodeArray0.length);
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(42, node1, nodeArray0[0], 108, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(9, (Node) null, 20, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertNotNull(node0);
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-390), 4095, 15);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(4095, scriptOrFnNode0.getLineno());
      assertEquals(15, scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(16773135, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-390), scriptOrFnNode0.getType());
      
      Node node1 = new Node((-2122), scriptOrFnNode0, node0, node0);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node1);
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(4095, scriptOrFnNode0.getLineno());
      assertEquals(15, scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(16773135, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-390), scriptOrFnNode0.getType());
      assertFalse(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(2, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getCharno());
      assertEquals((-2122), node1.getType());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(112, node0, 8, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node((-428), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node((-1822), (-1822), 1053);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.LEFT);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = new Node(795, node0);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.LEFT);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertNotNull(node1);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(795, node1.getType());
      assertFalse(node1.equals((Object)node0));
      
      boolean boolean0 = node0.isEquivalentTo(node1, true, true);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.LEFT);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(795, node1.getType());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(0, "bitnot", 12, 0);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(node0);
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals(49152, node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      node0.putIntProp(12, 67);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals(49152, node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      node0.setWasEmptyNode(false);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals(49152, node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-3487));
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      
      scriptOrFnNode0.putBooleanProp(484, false);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1087), (-1087), 1231);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1087), scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      scriptOrFnNode0.putBooleanProp((-1752), true);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1087), scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, 0);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertNotNull(node0);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.hasOneChild());
      
      int int0 = node0.getIntProp(127);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("", (-1421), (-1421));
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      
      boolean boolean0 = node0.getBooleanProp((-850));
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newNumber((-1471.5747764));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      
      Object object0 = node0.getProp((-3001));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertNull(object0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("_> .#B8S6AbM4yn2yY=", 4270, 102);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(4270, functionNode0.getLineno());
      assertEquals(17490022, functionNode0.getSourcePosition());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("_> .#B8S6AbM4yn2yY=", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertNull(functionNode0.getSourceName());
      assertEquals(102, functionNode0.getCharno());
      
      FunctionNode functionNode1 = (FunctionNode)functionNode0.getLastSibling();
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertNotNull(functionNode1);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(4270, functionNode0.getLineno());
      assertEquals(17490022, functionNode0.getSourcePosition());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("_> .#B8S6AbM4yn2yY=", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertNull(functionNode0.getSourceName());
      assertEquals(102, functionNode0.getCharno());
      assertEquals(17490022, functionNode1.getSourcePosition());
      assertEquals(0, functionNode1.getEncodedSourceEnd());
      assertEquals(0, functionNode1.getParamCount());
      assertEquals(0, functionNode1.getChildCount());
      assertEquals(0, functionNode1.getFunctionType());
      assertFalse(functionNode1.hasMoreThanOneChild());
      assertEquals(105, functionNode1.getType());
      assertFalse(functionNode1.getIgnoreDynamicScope());
      assertFalse(functionNode1.isQualifiedName());
      assertFalse(functionNode1.requiresActivation());
      assertEquals(102, functionNode1.getCharno());
      assertNull(functionNode1.getSourceName());
      assertFalse(functionNode1.hasOneChild());
      assertEquals((-1), functionNode1.getEndLineno());
      assertEquals(4270, functionNode1.getLineno());
      assertFalse(functionNode1.hasChildren());
      assertFalse(functionNode1.isUnscopedQualifiedName());
      assertEquals(0, functionNode1.getEncodedSourceStart());
      assertEquals((-1), functionNode1.getBaseLineno());
      assertEquals("_> .#B8S6AbM4yn2yY=", functionNode1.getFunctionName());
      assertSame(functionNode0, functionNode1);
      assertSame(functionNode1, functionNode0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString((-2858), "h^Er", (-2858), (-2858));
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertNotNull(node0);
      assertEquals((-2858), node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      // Undeclared exception!
      try { 
        node0.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = node0.getParent();
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNull(node1);
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(1, "r");
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(1, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      JSDocInfo jSDocInfo0 = node0.getJSDocInfo();
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertNull(jSDocInfo0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(1, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString(3683, "");
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.LEFT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertEquals(3683, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(42);
      assertNotNull(charArrayWriter0);
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
      
      // Undeclared exception!
      try { 
        node0.appendStringTree(charArrayWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3683
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1972);
      assertNotNull(node_SideEffectFlags0);
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals(1972, node_SideEffectFlags0.valueOf());
      
      int int0 = node_SideEffectFlags0.valueOf();
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertEquals(1972, node_SideEffectFlags0.valueOf());
      assertEquals(1972, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getSourcePosition());
      
      int int0 = node0.getType();
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString(1239, "Fp2YlJ-", 120, 111);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(node0);
      assertEquals(1239, node0.getType());
      assertEquals(120, node0.getLineno());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals(491631, node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(111, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      
      int int0 = node0.getLineno();
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1239, node0.getType());
      assertEquals(120, node0.getLineno());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals(491631, node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(111, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(120, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("");
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertNotNull(functionNode0);
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertEquals(105, functionNode0.getType());
      
      int int0 = functionNode0.getSideEffectFlags();
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasChildren());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      assertNotNull(node_SideEffectFlags0);
      assertEquals(0, node_SideEffectFlags0.valueOf());
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
      
      boolean boolean0 = node_SideEffectFlags0.areAllFlagsSet();
      assertEquals(0, node_SideEffectFlags0.valueOf());
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(27);
      assertNotNull(node_SideEffectFlags0);
      assertEquals(27, node_SideEffectFlags0.valueOf());
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      
      boolean boolean0 = node_SideEffectFlags0.areAllFlagsSet();
      assertEquals(27, node_SideEffectFlags0.valueOf());
      assertFalse(node_SideEffectFlags0.areAllFlagsSet());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(3903, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      
      Node node1 = new Node(6, node0, node0, node0, node0, 1, 39);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node1);
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(3903, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(39, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getLineno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasOneChild());
      assertEquals(6, node1.getType());
      assertEquals(4135, node1.getSourcePosition());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.copyInformationFromForTree(node0);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertNotNull(node2);
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(3903, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertEquals(6, node1.getType());
      assertEquals((-1), node1.getCharno());
      assertFalse(node2.isQualifiedName());
      assertEquals((-1), node2.getLineno());
      assertEquals(1, node2.getChildCount());
      assertEquals((-1), node2.getCharno());
      assertTrue(node2.hasOneChild());
      assertEquals(6, node2.getType());
      assertEquals((-1), node2.getSourcePosition());
      assertFalse(node2.hasMoreThanOneChild());
      assertFalse(node2.isUnscopedQualifiedName());
      assertTrue(node2.hasChildren());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node0));
      assertSame(node1, node2);
      assertSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString((-2858), "DEC");
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-2858), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      
      Node node1 = new Node((-1));
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node1);
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getType());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = new Node(37, node0, node1, 93, 4);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertNotNull(node2);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-2858), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getType());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node2.isUnscopedQualifiedName());
      assertEquals(2, node2.getChildCount());
      assertEquals(37, node2.getType());
      assertEquals(380932, node2.getSourcePosition());
      assertFalse(node2.isQualifiedName());
      assertEquals(93, node2.getLineno());
      assertTrue(node2.hasChildren());
      assertEquals(4, node2.getCharno());
      assertTrue(node2.hasMoreThanOneChild());
      assertFalse(node2.hasOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      
      Node node3 = node2.removeChildAfter(node0);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertNotNull(node3);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-2858), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getType());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node2.isUnscopedQualifiedName());
      assertTrue(node2.hasOneChild());
      assertEquals(37, node2.getType());
      assertEquals(380932, node2.getSourcePosition());
      assertFalse(node2.isQualifiedName());
      assertEquals(1, node2.getChildCount());
      assertFalse(node2.hasMoreThanOneChild());
      assertEquals(93, node2.getLineno());
      assertTrue(node2.hasChildren());
      assertEquals(4, node2.getCharno());
      assertFalse(node3.isUnscopedQualifiedName());
      assertEquals((-1), node3.getLineno());
      assertFalse(node3.isQualifiedName());
      assertEquals((-1), node3.getType());
      assertEquals((-1), node3.getCharno());
      assertFalse(node3.hasOneChild());
      assertFalse(node3.hasChildren());
      assertEquals((-1), node3.getSourcePosition());
      assertEquals(0, node3.getChildCount());
      assertFalse(node3.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node0.equals((Object)node2));
      assertFalse(node1.equals((Object)node2));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      assertFalse(node3.equals((Object)node2));
      assertFalse(node3.equals((Object)node0));
      assertSame(node1, node3);
      assertNotSame(node1, node2);
      assertNotSame(node2, node1);
      assertNotSame(node2, node3);
      assertNotSame(node3, node2);
      assertSame(node3, node1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString((-2016), "com.google.common.collect.Lists$TransformingSequentialList");
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2016), node0.getType());
      
      Node node1 = new Node((-2351), node0, node0, 12, 1280);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertNotNull(node1);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2016), node0.getType());
      assertEquals(1280, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-2351), node1.getType());
      assertTrue(node1.hasChildren());
      assertEquals(12, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(50432, node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newNumber((-1471.5747764));
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      node0.detachChildren();
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString("", 36, 36);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(147492, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(36, node0.getCharno());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals(36, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(40, 47, (-981));
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(40, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      Node node1 = new Node(1, node0, node0, scriptOrFnNode0);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertNotNull(node1);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(147492, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(36, node0.getCharno());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals(36, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(40, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getType());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertEquals(2, node1.getChildCount());
      assertFalse(node1.hasOneChild());
      assertTrue(node1.hasMoreThanOneChild());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.removeChildren();
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertNotNull(node2);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(147492, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(36, node0.getCharno());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals(36, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(40, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getType());
      assertEquals((-1), node1.getLineno());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertFalse(node2.hasOneChild());
      assertFalse(node2.isQualifiedName());
      assertFalse(node2.hasMoreThanOneChild());
      assertEquals(147492, node2.getSourcePosition());
      assertEquals(0, node2.getChildCount());
      assertEquals(40, node2.getType());
      assertEquals(36, node2.getLineno());
      assertFalse(node2.hasChildren());
      assertEquals(36, node2.getCharno());
      assertFalse(node2.isUnscopedQualifiedName());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertSame(node0, node2);
      assertSame(node2, node0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = node0.removeChildren();
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNull(node1);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0, 0, 645);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(645, scriptOrFnNode0.getCharno());
      assertEquals(645, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      // Undeclared exception!
      try { 
        scriptOrFnNode0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString(1362, "T-\u0006");
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(1362, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      
      boolean boolean0 = node0.isUnscopedQualifiedName();
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(1362, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      
      boolean boolean0 = node0.isQualifiedName();
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(48, "false");
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(48, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      String string0 = node0.getQualifiedName();
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertNull(string0);
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(48, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString(641, "CONSTRUCTOR", 641, 641);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(641, node0.getLineno());
      assertEquals(641, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(2626177, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(641, node0.getCharno());
      
      boolean boolean0 = node0.hasSideEffects();
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(641, node0.getLineno());
      assertEquals(641, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(2626177, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals(641, node0.getCharno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      FunctionType functionType0 = (FunctionType)jSTypeRegistry0.getNativeType(jSTypeNativeArray0[0]);
      assertEquals(0, JSType.NOT_ENUMDECL);
      assertEquals(1, JSType.ENUMDECL);
      assertNotNull(functionType0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, functionType0.getExtendedInterfacesCount());
      assertFalse(functionType0.isOrdinaryFunction());
      assertEquals(BooleanLiteralSet.TRUE, functionType0.getPossibleToBooleanOutcomes());
      assertNull(functionType0.getTemplateTypeName());
      assertFalse(functionType0.isAllType());
      assertFalse(functionType0.isEnumType());
      assertFalse(functionType0.isEnumElementType());
      assertFalse(functionType0.isFunctionPrototypeType());
      assertFalse(functionType0.isBooleanValueType());
      assertFalse(functionType0.isTemplateType());
      assertFalse(functionType0.isReturnTypeInferred());
      assertFalse(functionType0.isVoidType());
      assertFalse(functionType0.isStringValueType());
      assertFalse(functionType0.isResolved());
      assertTrue(functionType0.isConstructor());
      assertTrue(functionType0.hasInstanceType());
      assertTrue(functionType0.hasCachedValues());
      assertFalse(functionType0.isNoResolvedType());
      assertTrue(functionType0.canBeCalled());
      assertFalse(functionType0.isNumberValueType());
      assertTrue(functionType0.isFunctionType());
      assertFalse(functionType0.isUnionType());
      assertFalse(functionType0.isRecordType());
      assertFalse(functionType0.isInterface());
      assertFalse(functionType0.isNominalType());
      assertFalse(functionType0.isCheckedUnknownType());
      assertTrue(functionType0.isObject());
      assertFalse(functionType0.isNoType());
      assertFalse(functionType0.isNoObjectType());
      assertFalse(functionType0.isNullType());
      assertEquals(1, jSTypeNativeArray0.length);
      
      jSTypeArray0[4] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(5, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasMoreThanOneChild());
      assertEquals(5, jSTypeArray0.length);
      
      boolean boolean0 = node0.hasSideEffects();
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(5, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasMoreThanOneChild());
      assertEquals(5, jSTypeArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = new Node(41, node0, 23, 4095);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertNotNull(node1);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals(23, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node1.equals((Object)node0));
      
      boolean boolean0 = node1.hasSideEffects();
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(41, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals(23, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("", 36, 98);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertEquals(36, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(98, node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(40, node0.getType());
      
      boolean boolean0 = node0.hasSideEffects();
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals(147554, node0.getSourcePosition());
      assertEquals(36, node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(98, node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(40, node0.getType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1, 17, (-1382));
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertNotNull(node0);
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      boolean boolean0 = node0.hasSideEffects();
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("");
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertNotNull(functionNode0);
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      
      boolean boolean0 = functionNode0.hasSideEffects();
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3111));
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node node1 = Node.newString("EvalError", 5, 35);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertNotNull(node1);
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(5, node1.getLineno());
      assertEquals(40, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(35, node1.getCharno());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      node0.addChildrenToBack(node1);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(5, node1.getLineno());
      assertEquals(40, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(35, node1.getCharno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      String string0 = node0.checkTreeEquals(node1);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertNotNull(string0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(5, node1.getLineno());
      assertEquals(40, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(35, node1.getCharno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals("Node tree inequality:\nTree1:\nSTRING h^Er\n    STRING EvalError 5\n\n\nTree2:\nSTRING EvalError 5\n\n\nSubtree1: STRING h^Er\n    STRING EvalError 5\n\n\nSubtree2: STRING EvalError 5\n", string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = Node.tokenToName(1977);
      assertNotNull(string0);
      assertEquals("<unknown=1977>", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = Node.tokenToName(132);
      assertNotNull(string0);
      assertEquals("script", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String string0 = Node.tokenToName(131);
      assertNotNull(string0);
      assertEquals("jsr", string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = Node.tokenToName(130);
      assertNotNull(string0);
      assertEquals("expr_result", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = Node.tokenToName(129);
      assertNotNull(string0);
      assertEquals("expr_void", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = Node.tokenToName(127);
      assertNotNull(string0);
      assertEquals("target", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = Node.tokenToName(126);
      assertNotNull(string0);
      assertEquals("label", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = Node.tokenToName(125);
      assertNotNull(string0);
      assertEquals("block", string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = Node.tokenToName(124);
      assertNotNull(string0);
      assertEquals("empty", string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = Node.tokenToName(122);
      assertNotNull(string0);
      assertEquals("void", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = Node.tokenToName(118);
      assertNotNull(string0);
      assertEquals("var", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = Node.tokenToName(113);
      assertNotNull(string0);
      assertEquals("while", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String string0 = Node.tokenToName(112);
      assertNotNull(string0);
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = Node.tokenToName(111);
      assertNotNull(string0);
      assertEquals("case", string0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String string0 = Node.tokenToName(110);
      assertNotNull(string0);
      assertEquals("switch", string0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = Node.tokenToName(109);
      assertNotNull(string0);
      assertEquals("else", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = Node.tokenToName(103);
      assertNotNull(string0);
      assertEquals("dec", string0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = Node.tokenToName(98);
      assertNotNull(string0);
      assertEquals("hook", string0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = Node.tokenToName(97);
      assertNotNull(string0);
      assertEquals("assign_mod", string0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = Node.tokenToName(95);
      assertNotNull(string0);
      assertEquals("assign_mul", string0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String string0 = Node.tokenToName(93);
      assertNotNull(string0);
      assertEquals("assign_add", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = Node.tokenToName(91);
      assertNotNull(string0);
      assertEquals("assign_rsh", string0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = Node.tokenToName(89);
      assertNotNull(string0);
      assertEquals("assign_bitand", string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = Node.tokenToName(85);
      assertNotNull(string0);
      assertEquals("comma", string0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String string0 = Node.tokenToName(71);
      assertNotNull(string0);
      assertEquals("<unknown=71>", string0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = Node.tokenToName(67);
      assertNotNull(string0);
      assertEquals("<unknown=67>", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String string0 = Node.tokenToName(61);
      assertNotNull(string0);
      assertEquals("thisfn", string0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = Node.tokenToName(50);
      assertNotNull(string0);
      assertEquals("<unknown=50>", string0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = Node.tokenToName(48);
      assertNotNull(string0);
      assertEquals("bindname", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = Node.tokenToName(46);
      assertNotNull(string0);
      assertEquals("shne", string0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      String string0 = Node.tokenToName(45);
      assertNotNull(string0);
      assertEquals("sheq", string0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String string0 = Node.tokenToName(43);
      assertNotNull(string0);
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = Node.tokenToName(42);
      assertNotNull(string0);
      assertEquals("this", string0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = Node.tokenToName(41);
      assertNotNull(string0);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = Node.tokenToName(40);
      assertNotNull(string0);
      assertEquals("string", string0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      String string0 = Node.tokenToName(39);
      assertNotNull(string0);
      assertEquals("number", string0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String string0 = Node.tokenToName(38);
      assertNotNull(string0);
      assertEquals("name", string0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String string0 = Node.tokenToName(37);
      assertNotNull(string0);
      assertEquals("call", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      String string0 = Node.tokenToName(36);
      assertNotNull(string0);
      assertEquals("setelem", string0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      String string0 = Node.tokenToName(35);
      assertNotNull(string0);
      assertEquals("getelem", string0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String string0 = Node.tokenToName(33);
      assertNotNull(string0);
      assertEquals("getprop", string0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String string0 = Node.tokenToName(32);
      assertNotNull(string0);
      assertEquals("typeof", string0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = Node.tokenToName(31);
      assertNotNull(string0);
      assertEquals("delprop", string0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = Node.tokenToName(30);
      assertNotNull(string0);
      assertEquals("new", string0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = Node.tokenToName(27);
      assertNotNull(string0);
      assertEquals("bitnot", string0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String string0 = Node.tokenToName(26);
      assertNotNull(string0);
      assertEquals("not", string0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = Node.tokenToName(25);
      assertNotNull(string0);
      assertEquals("mod", string0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = Node.tokenToName(24);
      assertNotNull(string0);
      assertEquals("div", string0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      String string0 = Node.tokenToName(23);
      assertNotNull(string0);
      assertEquals("mul", string0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      String string0 = Node.tokenToName(22);
      assertNotNull(string0);
      assertEquals("sub", string0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      String string0 = Node.tokenToName(21);
      assertNotNull(string0);
      assertEquals("add", string0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = Node.tokenToName(20);
      assertNotNull(string0);
      assertEquals("ursh", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      String string0 = Node.tokenToName(19);
      assertNotNull(string0);
      assertEquals("rsh", string0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = Node.tokenToName(17);
      assertNotNull(string0);
      assertEquals("ge", string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String string0 = Node.tokenToName(16);
      assertNotNull(string0);
      assertEquals("gt", string0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String string0 = Node.tokenToName(15);
      assertNotNull(string0);
      assertEquals("le", string0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = Node.tokenToName(14);
      assertNotNull(string0);
      assertEquals("lt", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String string0 = Node.tokenToName(13);
      assertNotNull(string0);
      assertEquals("ne", string0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = Node.tokenToName(12);
      assertNotNull(string0);
      assertEquals("eq", string0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = Node.tokenToName(11);
      assertNotNull(string0);
      assertEquals("bitand", string0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      String string0 = Node.tokenToName(10);
      assertNotNull(string0);
      assertEquals("bitxor", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = Node.tokenToName(9);
      assertNotNull(string0);
      assertEquals("bitor", string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = Node.tokenToName(8);
      assertNotNull(string0);
      assertEquals("setname", string0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = Node.tokenToName(7);
      assertNotNull(string0);
      assertEquals("ifne", string0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String string0 = Node.tokenToName(6);
      assertNotNull(string0);
      assertEquals("ifeq", string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      String string0 = Node.tokenToName(5);
      assertNotNull(string0);
      assertEquals("goto", string0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String string0 = Node.tokenToName(4);
      assertNotNull(string0);
      assertEquals("return", string0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String string0 = Node.tokenToName(3);
      assertNotNull(string0);
      assertEquals("leavewith", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String string0 = Node.tokenToName(2);
      assertNotNull(string0);
      assertEquals("enterwith", string0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      String string0 = Node.tokenToName(1);
      assertNotNull(string0);
      assertEquals("eol", string0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      String string0 = Node.tokenToName(0);
      assertNotNull(string0);
      assertEquals("eof", string0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = Node.tokenToName(47);
      assertNotNull(string0);
      assertEquals("regexp", string0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String string0 = Node.tokenToName((-1));
      assertNotNull(string0);
      assertEquals("error", string0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(33);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(33, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(scriptOrFnNode0);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertNotNull(node_NodeMismatch0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(33, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      
      FunctionNode functionNode0 = new FunctionNode("");
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getCharno());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      
      boolean boolean0 = node_NodeMismatch0.equals(functionNode0);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1822), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(33, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("", functionNode0.getFunctionName());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getCharno());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNotNull(node0);
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasOneChild());
      assertEquals(1, node0.getLineno());
      assertEquals(16, node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node0);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNull(node_NodeMismatch0);
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasOneChild());
      assertEquals(1, node0.getLineno());
      assertEquals(16, node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      
      String string0 = node0.checkTreeEquals(node0);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertNull(string0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      
      FunctionNode functionNode0 = new FunctionNode("LAZY_NAMES");
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNotNull(functionNode0);
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertFalse(functionNode0.requiresActivation());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals("LAZY_NAMES", functionNode0.getFunctionName());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      
      boolean boolean0 = functionNode0.hasChild(node0);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertFalse(functionNode0.requiresActivation());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals("LAZY_NAMES", functionNode0.getFunctionName());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber((double) 24);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      
      Node node1 = new Node(24, node0, node0, node0);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertNotNull(node1);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(24, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.equals((Object)node0));
      
      int int0 = node1.getChildCount();
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(24, node1.getType());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertNotNull(node0);
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(1, node0.getLineno());
      assertEquals(4112, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertTrue(node0.hasOneChild());
      assertEquals(16, node0.getCharno());
      
      boolean boolean0 = node0.hasMoreThanOneChild();
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(1, node0.getLineno());
      assertEquals(4112, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertTrue(node0.hasOneChild());
      assertEquals(16, node0.getCharno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(129);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(129, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      boolean boolean0 = scriptOrFnNode0.hasMoreThanOneChild();
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(129, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString(142, "r");
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals(142, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      
      boolean boolean0 = node0.hasOneChild();
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals(142, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber(5195.0);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      
      // Undeclared exception!
      try { 
        node0.getAncestor((-1004));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(129);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(129, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      Iterable<Node> iterable0 = scriptOrFnNode0.children();
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(iterable0);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(129, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertNotNull(node0);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(1, node0.getLineno());
      assertEquals(16, node0.getCharno());
      assertTrue(node0.hasOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      
      node0.setSourcePositionForTree(2048);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(2048, scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(2048, scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLineno());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertEquals(2048, node0.getCharno());
      assertTrue(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertEquals(2048, node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString(5, "r");
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(5, node0.getType());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      
      node0.setLineno(39);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(5, node0.getType());
      assertEquals(159744, node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(39, node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(0, node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0, 16, 44);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(65580, scriptOrFnNode0.getSourcePosition());
      assertEquals(16, scriptOrFnNode0.getLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(44, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      
      scriptOrFnNode0.setLineno(3);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(12332, scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(44, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(3, scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.isQualifiedName());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(43, 16, 1);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(16, scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(43, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(65537, scriptOrFnNode0.getSourcePosition());
      assertEquals(1, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      
      String string0 = scriptOrFnNode0.toString(false, false, false);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertNotNull(string0);
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(16, scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(43, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(65537, scriptOrFnNode0.getSourcePosition());
      assertEquals(1, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals("FALSE", string0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newNumber(742.64028, 78, 3903);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertEquals(78, node0.getLineno());
      assertEquals(323391, node0.getSourcePosition());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(3903, node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 742.64028 78 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("EvapErWor");
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals((-1), functionNode0.getCharno());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.hasChildren());
      assertEquals("EvapErWor", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      
      try { 
        functionNode0.setDouble(63743);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("lastuse");
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals("lastuse", functionNode0.getFunctionName());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      assertNull(functionNode0.getSourceName());
      assertEquals(105, functionNode0.getType());
      assertFalse(functionNode0.hasChildren());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(0, functionNode0.getChildCount());
      
      try { 
        functionNode0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(129);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(129, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      scriptOrFnNode0.setOptionalArg(false);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(129, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString(5, "r");
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertNotNull(node0);
      assertEquals(5, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(4131);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertNotNull(node_FileLevelJsDocBuilder0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      node_FileLevelJsDocBuilder0.append("h^Er");
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      
      node_FileLevelJsDocBuilder0.append("");
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1822), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      
      Node node1 = new Node(41, node0, 23, 4095);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertNotNull(node1);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1822), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertEquals(23, node1.getLineno());
      assertEquals(4095, node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertEquals(98303, node1.getSourcePosition());
      assertEquals(41, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(93);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(93, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0, 16, 44);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.BOTH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(scriptOrFnNode0);
      assertEquals(65580, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(44, scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(16, scriptOrFnNode0.getLineno());
      
      // Undeclared exception!
      try { 
        scriptOrFnNode0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString(105, "P+G'O`,@5<<ULgrf", 104, 104);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(105, node0.getType());
      assertEquals(104, node0.getCharno());
      assertEquals(104, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(426088, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      
      Node node1 = new Node(4389, node0);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node1);
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(105, node0.getType());
      assertEquals(104, node0.getCharno());
      assertEquals(104, node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(426088, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(4389, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = (FunctionType)jSTypeRegistry0.getNativeType(jSTypeNative0);
      assertEquals(1, JSType.ENUMDECL);
      assertEquals(0, JSType.NOT_ENUMDECL);
      assertNotNull(functionType0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertTrue(functionType0.canBeCalled());
      assertFalse(functionType0.isResolved());
      assertFalse(functionType0.isReturnTypeInferred());
      assertFalse(functionType0.isInterface());
      assertTrue(functionType0.hasCachedValues());
      assertTrue(functionType0.hasInstanceType());
      assertTrue(functionType0.isFunctionType());
      assertFalse(functionType0.isTemplateType());
      assertFalse(functionType0.isRecordType());
      assertFalse(functionType0.isBooleanValueType());
      assertFalse(functionType0.isNoType());
      assertFalse(functionType0.isNullType());
      assertNull(functionType0.getTemplateTypeName());
      assertFalse(functionType0.isOrdinaryFunction());
      assertFalse(functionType0.isAllType());
      assertEquals(BooleanLiteralSet.TRUE, functionType0.getPossibleToBooleanOutcomes());
      assertTrue(functionType0.isConstructor());
      assertTrue(functionType0.isObject());
      assertFalse(functionType0.isNominalType());
      assertFalse(functionType0.isNoObjectType());
      assertFalse(functionType0.isVoidType());
      assertFalse(functionType0.isCheckedUnknownType());
      assertFalse(functionType0.isFunctionPrototypeType());
      assertFalse(functionType0.isEnumElementType());
      assertFalse(functionType0.isUnionType());
      assertFalse(functionType0.isNoResolvedType());
      assertFalse(functionType0.isEnumType());
      assertFalse(functionType0.isNumberValueType());
      assertFalse(functionType0.isStringValueType());
      assertEquals(0, functionType0.getExtendedInterfacesCount());
      
      jSTypeArray0[4] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getCharno());
      assertEquals(5, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertEquals(83, node0.getType());
      assertEquals(5, jSTypeArray0.length);
      
      Node node1 = node0.removeFirstChild();
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node1);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getCharno());
      assertEquals(4, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasChildren());
      assertEquals(83, node0.getType());
      assertEquals((-1), node1.getLineno());
      assertEquals(0, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.hasChildren());
      assertEquals(38, node1.getType());
      assertTrue(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertTrue(node1.isQualifiedName());
      assertEquals(5, jSTypeArray0.length);
      assertFalse(node1.equals((Object)node0));
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(392, (-2858), (-2858));
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(392, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNotNull(node0);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(392, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(1, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node0.hasOneChild());
      
      ScriptOrFnNode scriptOrFnNode1 = (ScriptOrFnNode)node0.removeFirstChild();
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertNotNull(scriptOrFnNode1);
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(392, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertFalse(scriptOrFnNode1.hasChildren());
      assertEquals((-1), scriptOrFnNode1.getEndLineno());
      assertEquals((-1), scriptOrFnNode1.getSourcePosition());
      assertEquals((-1), scriptOrFnNode1.getCharno());
      assertFalse(scriptOrFnNode1.isQualifiedName());
      assertFalse(scriptOrFnNode1.hasOneChild());
      assertEquals((-1), scriptOrFnNode1.getBaseLineno());
      assertFalse(scriptOrFnNode1.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceStart());
      assertEquals(392, scriptOrFnNode1.getType());
      assertEquals(0, scriptOrFnNode1.getParamCount());
      assertEquals(0, scriptOrFnNode1.getEncodedSourceEnd());
      assertNull(scriptOrFnNode1.getSourceName());
      assertEquals((-1), scriptOrFnNode1.getLineno());
      assertEquals(0, scriptOrFnNode1.getChildCount());
      assertFalse(scriptOrFnNode1.hasMoreThanOneChild());
      assertSame(scriptOrFnNode0, scriptOrFnNode1);
      assertSame(scriptOrFnNode1, scriptOrFnNode0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, jSTypeArray0.length);
      
      Node node1 = new Node(129, node0, node0, node0, node0, 2, 4214);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(node1);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(83, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(12287, node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(4095, node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(129, node1.getType());
      assertEquals(2, node1.getLineno());
      assertEquals(0, jSTypeArray0.length);
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getLineno());
      
      FunctionNode functionNode0 = new FunctionNode("EvalError");
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(2, Node.RIGHT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("EvalError", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getLineno());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(37);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(37, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      
      Node node1 = new Node(12, functionNode0, functionNode0, functionNode0, scriptOrFnNode0, 117, 25);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(2, Node.RIGHT);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertNotNull(node1);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals("EvalError", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(37, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(117, node1.getLineno());
      assertFalse(node1.hasOneChild());
      assertTrue(node1.hasMoreThanOneChild());
      assertEquals(479257, node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(12, node1.getType());
      assertTrue(node1.hasChildren());
      assertEquals(25, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(2, node1.getChildCount());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node0.addChildAfter(functionNode0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      
      Node node1 = new Node(125, node0, node0, 1, 108);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertNotNull(node1);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals(39, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(125, node1.getType());
      assertEquals(108, node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, node1.getLineno());
      assertTrue(node1.hasChildren());
      assertEquals(4204, node1.getSourcePosition());
      assertFalse(node1.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node0.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString(1, "Z*r#K]y{+");
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      
      Node node1 = Node.newString(91, "<Doh|/", 97, 21);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertNotNull(node1);
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(97, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(397333, node1.getSourcePosition());
      assertFalse(node1.hasChildren());
      assertEquals(21, node1.getCharno());
      assertEquals(91, node1.getType());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      Node node2 = new Node(1, node0, node0, node1);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertNotNull(node2);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(1, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(97, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(397333, node1.getSourcePosition());
      assertFalse(node1.hasChildren());
      assertEquals(21, node1.getCharno());
      assertEquals(91, node1.getType());
      assertTrue(node2.hasMoreThanOneChild());
      assertEquals((-1), node2.getSourcePosition());
      assertFalse(node2.isUnscopedQualifiedName());
      assertEquals(1, node2.getType());
      assertEquals((-1), node2.getCharno());
      assertFalse(node2.hasOneChild());
      assertFalse(node2.isQualifiedName());
      assertEquals(2, node2.getChildCount());
      assertTrue(node2.hasChildren());
      assertEquals((-1), node2.getLineno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      
      // Undeclared exception!
      try { 
        node0.addChildBefore(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), 4095);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(22, 43, 40);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(40, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(22, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(43, scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(176168, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      node0.addChildToFront(scriptOrFnNode0);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-1), node0.getLineno());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(40, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(22, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(43, scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(176168, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      
      Node node1 = node0.cloneTree();
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node1);
      assertEquals((-1), node0.getLineno());
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertTrue(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(40, node1.getType());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      node0.addChildrenToBack(node1);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertTrue(node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(2, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(40, node1.getType());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getLineno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      
      FunctionNode functionNode0 = new FunctionNode("r", (-3), 6);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getEndLineno());
      
      functionNode0.addChildToBack(node0);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.RIGHT);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(7, Node.LOCAL_PROP);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertTrue(functionNode0.hasOneChild());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertTrue(functionNode0.hasChildren());
      assertEquals((-1), functionNode0.getLineno());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertEquals(0, functionNode0.getParamCount());
      assertNull(functionNode0.getSourceName());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(1, functionNode0.getChildCount());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      
      // Undeclared exception!
      try { 
        functionNode0.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      
      Node node0 = new Node((-2), scriptOrFnNode0, 87, 2);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.BOTH);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertNotNull(node0);
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getType());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-2), node0.getType());
      assertEquals(1, node0.getChildCount());
      assertEquals(2, node0.getCharno());
      assertTrue(node0.hasOneChild());
      assertEquals(87, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(356354, node0.getSourcePosition());
      assertTrue(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.addChildToBack(scriptOrFnNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber((double) 7);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = new Node(7, node0);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertNotNull(node1);
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertTrue(node1.hasOneChild());
      assertEquals(7, node1.getType());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      node1.addChildToFront(node1);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(7, node1.getType());
      assertEquals(2, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(0, Node.BOTH);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertNotNull(node0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, node0.getType());
      assertEquals(1, node0.getLineno());
      assertEquals(16, node0.getCharno());
      assertTrue(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertTrue(node0.hasOneChild());
      assertEquals(4112, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      
      // Undeclared exception!
      try { 
        scriptOrFnNode0.addChildToFront(scriptOrFnNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(3903, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getChildCount());
      
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(4, 30, 2);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(4, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(30, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(122882, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(2, scriptOrFnNode0.getCharno());
      
      Node node0 = scriptOrFnNode0.getChildAtIndex((-4444));
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertNull(node0);
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(4, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(30, scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(122882, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertNull(scriptOrFnNode0.getSourceName());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(2, scriptOrFnNode0.getCharno());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = new Node(18, node0, node0, node0);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertNotNull(node1);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals(18, node1.getType());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = node1.getChildBefore(node0);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertNull(node2);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals(18, node1.getType());
      assertEquals((-1), node1.getLineno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString(0, "y@OK!J2X2@Cl6");
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString((-722), "bitnot");
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-722), node0.getType());
      assertEquals((-1), node0.getLineno());
      
      boolean boolean0 = node0.hasChildren();
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-722), node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-2430));
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(0, Node.BOTH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2430), node0.getType());
      
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(37, nodeArray0, 27, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node((-2430));
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2430), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(36, 46, 58);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertNotNull(scriptOrFnNode0);
      assertEquals(188474, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(46, scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(58, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(36, scriptOrFnNode0.getType());
      
      scriptOrFnNode0.addChildrenToFront(node0);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(0, Node.BOTH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(0, Node.BOTH);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-2430), node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasChildren());
      assertEquals(188474, scriptOrFnNode0.getSourcePosition());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(46, scriptOrFnNode0.getLineno());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(58, scriptOrFnNode0.getCharno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertTrue(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertTrue(scriptOrFnNode0.hasChildren());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(1, scriptOrFnNode0.getChildCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(36, scriptOrFnNode0.getType());
      
      Node node1 = null;
      try {
        node1 = new Node(11, nodeArray0, (-1), 4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3091));
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertNotNull(node0);
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(40, node0.getType());
      
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(39, nodeArray0, 19, 647);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2858), nodeArray0);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertNotNull(node0);
      assertEquals((-2858), node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals(0, nodeArray0.length);
      
      Node node1 = Node.newString(47, "] [encoded source length: ", 2, 1938);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertNotNull(node1);
      assertFalse(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(2, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(47, node1.getType());
      assertFalse(node1.hasOneChild());
      assertEquals(10130, node1.getSourcePosition());
      assertEquals(0, node1.getChildCount());
      assertEquals(1938, node1.getCharno());
      assertFalse(node1.equals((Object)node0));
      
      node0.addChildrenToBack(node1);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertTrue(node0.hasOneChild());
      assertEquals((-2858), node0.getType());
      assertEquals(0, node0.getSourcePosition());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertTrue(node0.hasChildren());
      assertFalse(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(2, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(47, node1.getType());
      assertFalse(node1.hasOneChild());
      assertEquals(10130, node1.getSourcePosition());
      assertEquals(0, node1.getChildCount());
      assertEquals(1938, node1.getCharno());
      assertEquals(0, nodeArray0.length);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      
      FunctionNode functionNode0 = new FunctionNode("1N-<.Y J{cbk9");
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(functionNode0);
      assertEquals("1N-<.Y J{cbk9", functionNode0.getFunctionName());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.requiresActivation());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals(0, functionNode0.getFunctionType());
      
      Node node2 = null;
      try {
        node2 = new Node(1, functionNode0, node0, functionNode0, node1, 1271, 23);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("l0[-OlAw");
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(functionNode0);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals("l0[-OlAw", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      
      Node node0 = new Node((-285), functionNode0, functionNode0, functionNode0);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertNotNull(node0);
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getLineno());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertEquals((-1), functionNode0.getSourcePosition());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(105, functionNode0.getType());
      assertEquals(0, functionNode0.getChildCount());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertNull(functionNode0.getSourceName());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(functionNode0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals("l0[-OlAw", functionNode0.getFunctionName());
      assertEquals((-1), functionNode0.getEndLineno());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-285), node0.getType());
      assertTrue(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(1, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasChildren());
      
      Node node1 = null;
      try {
        node1 = new Node(46, node0, functionNode0, functionNode0, (Node) null, (-4651), (-1961));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(0, "bitnot", 12, 0);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertNotNull(node0);
      assertEquals(0, node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals(12, node0.getLineno());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(49152, node0.getSourcePosition());
      assertEquals(0, node0.getType());
      
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(95, nodeArray0, 8, 39);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node1);
      assertTrue(node1.hasOneChild());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.isQualifiedName());
      assertEquals(8, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals(39, node1.getCharno());
      assertEquals(32807, node1.getSourcePosition());
      assertEquals(95, node1.getType());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(1, nodeArray0.length);
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(2654210, nodeArray0[0], nodeArray0[0], node0, node0, (-4252), 1325);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1054);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node0);
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasChildren());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      
      Node node1 = new Node(38, node0, node0, node0);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node1);
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasChildren());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertEquals(38, node1.getType());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.isUnscopedQualifiedName());
      assertFalse(node1.hasMoreThanOneChild());
      assertTrue(node1.isQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node((-2987), node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      
      Node node1 = new Node(2, node0);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertNotNull(node1);
      assertEquals(39, node0.getType());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasChildren());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(2, node1.getType());
      assertFalse(node1.isQualifiedName());
      assertTrue(node1.hasOneChild());
      assertEquals(1, node1.getChildCount());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(2, (-1405), 3584);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertNotNull(scriptOrFnNode0);
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals(2, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.isUnscopedQualifiedName());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertFalse(scriptOrFnNode0.isQualifiedName());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasOneChild());
      
      Node node2 = null;
      try {
        node2 = new Node(4095, scriptOrFnNode0, node0, scriptOrFnNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      
      Node node1 = new Node(18, node0, node0, node0);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node1);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertEquals(18, node1.getType());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertTrue(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(113, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertNotNull(node0);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      
      FunctionNode functionNode0 = new FunctionNode("r", 1, 49);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertNotNull(functionNode0);
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(4145, functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertNull(functionNode0.getSourceName());
      assertEquals(1, functionNode0.getLineno());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals(49, functionNode0.getCharno());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      
      Node node1 = new Node(44, functionNode0, node0);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(1, Node.LEFT);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(1, FunctionNode.FUNCTION_STATEMENT);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(3, FunctionNode.FUNCTION_EXPRESSION_STATEMENT);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, FunctionNode.FUNCTION_EXPRESSION);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertNotNull(node1);
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertFalse(functionNode0.requiresActivation());
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getBaseLineno());
      assertEquals(0, functionNode0.getParamCount());
      assertEquals(0, functionNode0.getEncodedSourceEnd());
      assertFalse(functionNode0.hasMoreThanOneChild());
      assertFalse(functionNode0.isQualifiedName());
      assertEquals(0, functionNode0.getChildCount());
      assertEquals(4145, functionNode0.getSourcePosition());
      assertFalse(functionNode0.getIgnoreDynamicScope());
      assertNull(functionNode0.getSourceName());
      assertEquals(1, functionNode0.getLineno());
      assertEquals("r", functionNode0.getFunctionName());
      assertEquals(49, functionNode0.getCharno());
      assertFalse(functionNode0.hasChildren());
      assertEquals(0, functionNode0.getFunctionType());
      assertFalse(functionNode0.isUnscopedQualifiedName());
      assertEquals(0, functionNode0.getEncodedSourceStart());
      assertEquals((-1), functionNode0.getEndLineno());
      assertFalse(functionNode0.hasOneChild());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(2, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertTrue(node1.hasMoreThanOneChild());
      assertEquals(44, node1.getType());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(4095, functionNode0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber((double) 7);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node0);
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = new Node(7, node0);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(2, Node.RIGHT);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node1);
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node1.getCharno());
      assertTrue(node1.hasOneChild());
      assertEquals(7, node1.getType());
      assertFalse(node1.isQualifiedName());
      assertEquals((-1), node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertTrue(node1.hasChildren());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.equals((Object)node0));
      
      Node node2 = null;
      try {
        node2 = new Node(2815, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null, 37, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      
      Node node1 = Node.newNumber(0.0, 30, 1);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertNotNull(node1);
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(122881, node1.getSourcePosition());
      assertFalse(node1.hasOneChild());
      assertEquals(30, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(1, node1.getCharno());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      boolean boolean0 = node1.isEquivalentTo(node0, false, false);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(0, Node.BOTH);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.RIGHT);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(122881, node1.getSourcePosition());
      assertFalse(node1.hasOneChild());
      assertEquals(30, node1.getLineno());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(1, node1.getCharno());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isQualifiedName());
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node0);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      
      boolean boolean0 = node0.isEquivalentTo(node0, false, false);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.LEFT);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(0, Node.BOTH);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertFalse(node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(39, node0.getType());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString(94, "}f#tFo");
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertNotNull(node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(94, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      
      Node node1 = Node.newNumber((double) 28, 64, 1);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertNotNull(node1);
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(64, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getCharno());
      assertFalse(node1.hasOneChild());
      assertEquals(262145, node1.getSourcePosition());
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.equals((Object)node0));
      
      boolean boolean0 = node1.isEquivalentTo(node0, true, false);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(1, Node.LEFT);
      assertEquals(2, Node.RIGHT);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.LEFT);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isQualifiedName());
      assertEquals(0, node0.getChildCount());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(94, node0.getType());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(64, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertEquals(1, node1.getCharno());
      assertFalse(node1.hasOneChild());
      assertEquals(262145, node1.getSourcePosition());
      assertEquals(39, node1.getType());
      assertFalse(node1.hasChildren());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3111));
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertNotNull(node0);
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      
      Node node1 = Node.newString("EvalError", 5, 35);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(node1);
      assertEquals(5, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasChildren());
      assertEquals(35, node1.getCharno());
      assertEquals(40, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node1, node0);
      
      node0.setIsSyntheticBlock(true);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
      
      String string0 = node0.checkTreeEquals(node1);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(11, Node.USES_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(2, Node.RIGHT);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(0, Node.BOTH);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertNotNull(string0);
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(5, node1.getLineno());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasChildren());
      assertEquals(35, node1.getCharno());
      assertEquals(40, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.hasOneChild());
      assertEquals(0, node1.getChildCount());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(20515, node1.getSourcePosition());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("h^Er", (-2858), (-3111));
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertNotNull(node0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      assertNotNull(jSDocInfo0);
      assertFalse(jSDocInfo0.hasModifies());
      assertFalse(jSDocInfo0.isConstructor());
      assertNull(jSDocInfo0.getDescription());
      assertFalse(jSDocInfo0.isJavaDispatch());
      assertFalse(jSDocInfo0.isNoSideEffects());
      assertFalse(jSDocInfo0.hasThisType());
      assertFalse(jSDocInfo0.isDeprecated());
      assertFalse(jSDocInfo0.hasEnumParameterType());
      assertFalse(jSDocInfo0.isNoCompile());
      assertFalse(jSDocInfo0.containsDeclaration());
      assertFalse(jSDocInfo0.hasTypedefType());
      assertFalse(jSDocInfo0.hasType());
      assertNull(jSDocInfo0.getOriginalCommentString());
      assertNull(jSDocInfo0.getFileOverview());
      assertNull(jSDocInfo0.getLendsName());
      assertFalse(jSDocInfo0.isHidden());
      assertFalse(jSDocInfo0.isExterns());
      assertNull(jSDocInfo0.getDeprecationReason());
      assertNull(jSDocInfo0.getBlockDescription());
      assertFalse(jSDocInfo0.isInterface());
      assertNull(jSDocInfo0.getReturnDescription());
      assertFalse(jSDocInfo0.shouldPreserveTry());
      assertFalse(jSDocInfo0.hasFileOverview());
      assertFalse(jSDocInfo0.isOverride());
      assertFalse(jSDocInfo0.isDefine());
      assertEquals("JSDocInfo", jSDocInfo0.toString());
      assertNull(jSDocInfo0.getSourceName());
      assertFalse(jSDocInfo0.isNoShadow());
      assertNull(jSDocInfo0.getVersion());
      assertNull(jSDocInfo0.getLicense());
      assertFalse(jSDocInfo0.isImplicitCast());
      assertEquals(0, jSDocInfo0.getImplementedInterfaceCount());
      assertFalse(jSDocInfo0.hasBaseType());
      assertEquals(0, jSDocInfo0.getExtendedInterfacesCount());
      assertEquals(0, jSDocInfo0.getParameterCount());
      assertNull(jSDocInfo0.getVisibility());
      assertFalse(jSDocInfo0.isExport());
      assertFalse(jSDocInfo0.isConstant());
      assertNull(jSDocInfo0.getMeaning());
      assertNull(jSDocInfo0.getTemplateTypeName());
      assertFalse(jSDocInfo0.isNoTypeCheck());
      assertFalse(jSDocInfo0.isNoAlias());
      assertFalse(jSDocInfo0.hasReturnType());
      
      node0.setJSDocInfo(jSDocInfo0);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(jSDocInfo0.hasModifies());
      assertFalse(jSDocInfo0.isConstructor());
      assertNull(jSDocInfo0.getDescription());
      assertFalse(jSDocInfo0.isJavaDispatch());
      assertFalse(jSDocInfo0.isNoSideEffects());
      assertFalse(jSDocInfo0.hasThisType());
      assertFalse(jSDocInfo0.isDeprecated());
      assertFalse(jSDocInfo0.hasEnumParameterType());
      assertFalse(jSDocInfo0.isNoCompile());
      assertFalse(jSDocInfo0.containsDeclaration());
      assertFalse(jSDocInfo0.hasTypedefType());
      assertFalse(jSDocInfo0.hasType());
      assertNull(jSDocInfo0.getOriginalCommentString());
      assertNull(jSDocInfo0.getFileOverview());
      assertNull(jSDocInfo0.getLendsName());
      assertFalse(jSDocInfo0.isHidden());
      assertFalse(jSDocInfo0.isExterns());
      assertNull(jSDocInfo0.getDeprecationReason());
      assertNull(jSDocInfo0.getBlockDescription());
      assertFalse(jSDocInfo0.isInterface());
      assertNull(jSDocInfo0.getReturnDescription());
      assertFalse(jSDocInfo0.shouldPreserveTry());
      assertFalse(jSDocInfo0.hasFileOverview());
      assertFalse(jSDocInfo0.isOverride());
      assertFalse(jSDocInfo0.isDefine());
      assertEquals("JSDocInfo", jSDocInfo0.toString());
      assertNull(jSDocInfo0.getSourceName());
      assertFalse(jSDocInfo0.isNoShadow());
      assertNull(jSDocInfo0.getVersion());
      assertNull(jSDocInfo0.getLicense());
      assertFalse(jSDocInfo0.isImplicitCast());
      assertEquals(0, jSDocInfo0.getImplementedInterfaceCount());
      assertFalse(jSDocInfo0.hasBaseType());
      assertEquals(0, jSDocInfo0.getExtendedInterfacesCount());
      assertEquals(0, jSDocInfo0.getParameterCount());
      assertNull(jSDocInfo0.getVisibility());
      assertFalse(jSDocInfo0.isExport());
      assertFalse(jSDocInfo0.isConstant());
      assertNull(jSDocInfo0.getMeaning());
      assertNull(jSDocInfo0.getTemplateTypeName());
      assertFalse(jSDocInfo0.isNoTypeCheck());
      assertFalse(jSDocInfo0.isNoAlias());
      assertFalse(jSDocInfo0.hasReturnType());
      
      String string0 = node0.toStringTree();
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(2, Node.RIGHT);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(0, Node.BOTH);
      assertEquals(11, Node.USES_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertNotNull(string0);
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString(0, "r");
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(node0);
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertNotNull(node_FileLevelJsDocBuilder0);
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      
      node_FileLevelJsDocBuilder0.append("r");
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      
      boolean boolean0 = node0.isQuotedString();
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(1, Node.LEFT);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(11, Node.USES_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(0, node0.getType());
      assertFalse(node0.isQualifiedName());
      assertEquals((-1), node0.getCharno());
      assertFalse(node0.hasOneChild());
      assertEquals((-1), node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.hasMoreThanOneChild());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getSourcePosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(33);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertNotNull(scriptOrFnNode0);
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(33, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      
      int int0 = scriptOrFnNode0.getCharno();
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(0, Node.BOTH);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(1, Node.LEFT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals((-2), ScriptOrFnNode.DUPLICATE_CONST);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, ScriptOrFnNode.DUPLICATE_VAR);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals((-1), ScriptOrFnNode.DUPLICATE_PARAMETER);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(1, ScriptOrFnNode.NO_DUPLICATE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertFalse(scriptOrFnNode0.hasMoreThanOneChild());
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(0, scriptOrFnNode0.getParamCount());
      assertNull(scriptOrFnNode0.getSourceName());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals(33, scriptOrFnNode0.getType());
      assertFalse(scriptOrFnNode0.hasOneChild());
      assertEquals((-1), scriptOrFnNode0.getEndLineno());
      assertFalse(scriptOrFnNode0.hasChildren());
      assertEquals((-1), scriptOrFnNode0.getCharno());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
      assertEquals((-1), scriptOrFnNode0.getBaseLineno());
      assertEquals(0, scriptOrFnNode0.getEncodedSourceStart());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertNotNull(node0);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(83, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      
      Node node1 = node0.cloneNode();
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(1, Node.LEFT);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(11, Node.USES_PROP);
      assertEquals(2, Node.RIGHT);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(1, Node.LEFT);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertNotNull(node1);
      assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, linkedList0.size());
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasChildren());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(83, node0.getType());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertFalse(node1.hasChildren());
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node1.isQualifiedName());
      assertFalse(node1.hasOneChild());
      assertEquals((-1), node1.getLineno());
      assertEquals(0, node1.getChildCount());
      assertEquals((-1), node1.getCharno());
      assertFalse(node1.isUnscopedQualifiedName());
      assertEquals(83, node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("l0[-OlAw");
      assertEquals(8, Node.CODEOFFSET_PROP);
      assertEquals(10, Node.VARS_PROP);
      assertEquals(40, Node.ORIGINALNAME_PROP);
      assertEquals(4, Node.DESCENDANTS_FLAG);
      assertEquals(21, Node.LOCALCOUNT_PROP);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
      assertEquals(50, Node.FREE_CALL);
      assertEquals(41, Node.BRACELESS_TYPE);
      assertEquals(23, Node.VARIABLE_PROP);
      assertEquals(0, Node.LABEL_ID_PROP);
      assertEquals(13, Node.CASES_PROP);
      assertEquals(49, Node.DIRECT_EVAL);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
      assertEquals(36, Node.QUOTED_PROP);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
      assertEquals(2, Node.BREAK_PROP);
      assertEquals(8, Node.FLAG_NO_THROWS);
      assertEquals(33, Node.MEMBER_TYPE_PROP);
      assertEquals(22, Node.TARGETBLOCK_PROP);
      assertEquals(15, Node.NO_SIDE_EFFECTS);
      assertEquals(2, Node.RIGHT);
      assertEquals(0, Node.NON_SPECIALCALL);
      assertEquals(50, Node.LAST_PROP);
      assertEquals(2, Node.POST_FLAG);
      assertEquals(43, Node.IS_CONSTANT_NAME);
      assertEquals(1, Node.TARGET_PROP);
      assertEquals(37, Node.OPT_ARG_NAME);
      assertEquals(4095, Node.COLUMN_MASK);
      assertEquals(1, Node.LEFT);
      assertEquals(46, Node.IS_NAMESPACE);
      assertEquals(2, Node.SPECIALCALL_WITH);
      assertEquals(45, Node.IS_VAR_ARGS_PARAM);
      assertEquals(16, Node.SOURCENAME_PROP);
      assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
      assertEquals(1, Node.PROPERTY_FLAG);
      assertEquals((-2), Node.OBJECT_IDS_PROP);
      assertEquals(9, Node.FIXUPS_PROP);
      assertEquals(26, Node.DIRECTCALL_PROP);
      assertEquals(32, Node.INCRDECR_PROP);
      assertEquals(25, Node.ISNUMBER_PROP);
      assertEquals(1, Node.SPECIALCALL_EVAL);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
      assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
      assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
      assertEquals(24, Node.LASTUSE_PROP);
      assertEquals(4, Node.ENUM_PROP);
      assertEquals(48, Node.DIRECTIVES);
      assertEquals(30, Node.VAR_ARGS_NAME);
      assertEquals(3, Node.CONTINUE_PROP);
      assertEquals(0, Node.BOTH);
      assertEquals(39, Node.EMPTY_BLOCK);
      assertEquals(29, Node.JSDOC_INFO_PROP);
      assertEquals(35, Node.PARENTHESIZED_PROP);
      assertEquals(17, Node.TYPE_PROP);
      assertEquals(19, Node.LABEL_PROP);
      assertEquals(12, Node.REGEXP_PROP);
      assertEquals(44, Node.IS_OPTIONAL_PARAM);
      assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
      assertEquals(14, Node.DEFAULT_PROP);
      assertEquals(47, Node.IS_DISPATCHER);
      assertEquals(11, Node.USES_PROP);
      assertEquals(6, Node.TEMP_PROP);
      assertEquals(28, Node.DEBUGSOURCE_PROP);
      assertEquals(7, Node.LOCAL_PROP);
      assertEquals(16, Node.FLAG_LOCAL_RESULTS);
      assertEquals(27, Node.SPECIALCALL_PROP);
      assertEquals(12, Node.COLUMN_BITS);
      assertEquals(15, Node.CASEARRAY_PROP);
      assertEquals(5, Node.FUNCTION_PROP);
      assertEquals(20, Node.FINALLY_PROP);
      assertEquals(31, Node.SKIP_INDEXES_PROP);
      assertEquals((-1), Node.CATCH_SCOPE_PROP);
      assertEquals(34, Node.NAME_PROP);
      assertEquals(1, Node.DECR_FLAG);
      assertNotNull(node0);
      assertEquals((-1), node0.getLineno());
      assertFalse(node0.isUnscopedQualifiedName());
      assertFalse(node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(node0.isQualifiedName());
      assertFalse(node0.hasChildren());
      assertEquals((-1), node0.getCharno());
      assertEquals((-1), node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = new Node(18, node0, node0, node0);
      String string0 = node1.toStringTree();
      assertEquals("LSH\n    NUMBER 18.0\n", string0);
      assertEquals(18, node1.getType());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      boolean boolean0 = node0.isEquivalentTo(node0);
      assertEquals((-1822), node0.getType());
      assertTrue(boolean0);
      assertEquals(0, node0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(1588);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("is_optional_param");
      boolean boolean0 = functionNode0.isOptionalArg();
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), functionNode0.getCharno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      boolean boolean0 = node0.isVarArgs();
      assertFalse(boolean0);
      assertEquals(3903, node0.getType());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      scriptOrFnNode0.setDirectives(linkedHashSet0);
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals((-1), scriptOrFnNode0.getLineno());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-3487));
      boolean boolean0 = scriptOrFnNode0.isEquivalentToTyped(scriptOrFnNode0);
      assertEquals(0, scriptOrFnNode0.getChildCount());
      assertEquals((-1), scriptOrFnNode0.getLineno());
      assertEquals((-3487), scriptOrFnNode0.getType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString(2166, "_> .#B8S6AbM4yn2yY=", (-462), 0);
      node0.setString("_> .#B8S6AbM4yn2yY=");
      assertEquals(2166, node0.getType());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(392, (-2858), (-2858));
      scriptOrFnNode0.setCharno(5);
      assertEquals(392, scriptOrFnNode0.getType());
      assertEquals((-1), scriptOrFnNode0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("l0[-OlAw");
      int int0 = functionNode0.getSourcePosition();
      assertEquals(105, functionNode0.getType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getDirectives();
      assertEquals(83, node0.getType());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(93);
      boolean boolean0 = node0.isOnlyModifiesThisCall();
      assertEquals(93, node0.getType());
      assertFalse(boolean0);
      assertEquals((-1), node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("", 36, 98);
      boolean boolean0 = node0.isNoSideEffectsCall();
      assertEquals(40, node0.getType());
      assertFalse(boolean0);
      assertEquals(147554, node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      boolean boolean0 = node0.wasEmptyNode();
      assertEquals((-1822), node0.getType());
      assertFalse(boolean0);
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString((-1822), "r");
      Node node1 = new Node(41, node0, 23, 4095);
      node1.hasChildren();
      assertEquals((-1822), node0.getType());
      assertEquals(41, node1.getType());
      assertEquals(98303, node1.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      boolean boolean0 = scriptOrFnNode0.isQuotedString();
      assertEquals(0, scriptOrFnNode0.getType());
      assertFalse(boolean0);
      assertEquals((-1), scriptOrFnNode0.getLineno());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node(551, 47, 119);
      node0.getAncestors();
      assertEquals(192631, node0.getSourcePosition());
      assertEquals(551, node0.getType());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString(3903, "instanceof");
      node0.setType(3321);
      assertEquals(3321, node0.getType());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("negative size: ", 36, 36);
      Node node0 = new Node(103, functionNode0, functionNode0, functionNode0, 6, 2);
      assertEquals(105, functionNode0.getType());
      assertEquals(24578, node0.getSourcePosition());
      assertEquals(147492, functionNode0.getSourcePosition());
      assertEquals(103, node0.getType());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      FunctionNode functionNode0 = new FunctionNode("l0[-OlAw");
      boolean boolean0 = functionNode0.isLocalResultCall();
      assertFalse(boolean0);
      assertEquals(105, functionNode0.getType());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = node0.getAncestor(31);
      assertNull(node1);
      assertEquals(39, node0.getType());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber((double) 24);
      boolean boolean0 = node0.isSyntheticBlock();
      assertFalse(boolean0);
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(39, node0.getType());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newNumber((double) 7);
      node0.siblings();
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node((-2430));
      node0.setWasEmptyNode(true);
      node0.removeProp(31);
      assertEquals((-2430), node0.getType());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber((-1471.5747764));
      Node node1 = node0.removeFirstChild();
      assertNull(node1);
      assertEquals((-1), node0.getCharno());
      assertEquals(39, node0.getType());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesGlobalState();
      assertEquals(0, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      assertEquals(0, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4389);
      node_SideEffectFlags0.setMutatesArguments();
      assertEquals(4385, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(105);
      node_SideEffectFlags0.clearAllFlags();
      assertEquals(31, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      assertEquals(0, node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1822));
      node_SideEffectFlags0.setMutatesThis();
      assertEquals((-1824), node_SideEffectFlags0.valueOf());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("", (-1425), (-1425));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString((-1822), "");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(33);
      // Undeclared exception!
      try { 
        scriptOrFnNode0.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1822
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString("", 130, 98);
      node0.setQuotedString();
      node0.toString();
      assertEquals(98, node0.getCharno());
      assertEquals(40, node0.getType());
      assertEquals(130, node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(42, 35, 13);
      scriptOrFnNode0.addSuppression("F3=");
      assertEquals(143373, scriptOrFnNode0.getSourcePosition());
      assertEquals(42, scriptOrFnNode0.getType());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(0);
      Node node0 = new Node(0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 1, 16);
      node0.children();
      assertEquals(0, scriptOrFnNode0.getType());
      assertEquals(4112, node0.getSourcePosition());
      assertEquals(0, node0.getType());
  }
}
