/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 03:33:26 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("mJ7<8V8fa`x8 0)ul9h", 0, 15, " ");
      assertEquals("mJ7<8V8fa`x8 ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Js\"/hj7`,!>s", 3407, 2206, "rQh&:h;,");
      assertEquals("Js\"/hj7`,!>s", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("1.1", 2148, (-1493), "");
      assertEquals("1.1", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("U(E6c0At'", 9, 9, "U(E6c0At'");
      assertEquals("U(E6c0At'", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.wrap("is\nless\nthan\n0:\n", (-1806), " is less than 0: ", true);
      assertEquals("i is less than 0: s is less than 0: \n is less than 0: l is less than 0: e is less than 0: s is less than 0: s is less than 0: \n is less than 0: t is less than 0: h is less than 0: a is less than 0: n is less than 0: \n is less than 0: 0 is less than 0: : is less than 0: \n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.abbreviate("ZFl$-CS/t? CA;", (-1370), 5, "@:d{|6:f9qgkT/+");
      assertEquals("ZFl$-@:d{|6:f9qgkT/+", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, "", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-1920));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully(",p9");
      assertEquals(",p9", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalize("ZFl$-CS/t? CA;");
      assertEquals("ZFl$-CS/t? CA;", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.wrap("}'O;xt9mVJgAmGR", (-1646), "}}'O;xt9mVJgAmGR'}'O;xt9mVJgAmGRO}'O;xt9mVJgAmGR;}'O;xt9mVJgAmGRx}'O;xt9mVJgAmGRt}'O;xt9mVJgAmGR9}'O;xt9mVJgAmGRm}'O;xt9mVJgAmGRV}'O;xt9mVJgAmGRJ}'O;xt9mVJgAmGRg}'O;xt9mVJgAmGRA}'O;xt9mVJgAmGRm}'O;xt9mVJgAmGR}'O;xt9mVJgAmGRG}'O;xt9mVJgAmGRR", true);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      WordUtils.initials(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.initials("IoRm*&P$0NNx8M|", (char[]) null);
      assertEquals("I", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("ororg.apache.commons.lang.WordUtils", (char[]) null);
      assertEquals("ororg.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("vP[-Gm>hG@z", (char[]) null);
      assertEquals("Vp[-gm>hg@z", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap("Caught a SecurityException reading the system property '", (-3577), "Caught a SecurityException reading the system property '", false);
      assertEquals("CaughtCaught a SecurityException reading the system property 'aCaught a SecurityException reading the system property 'SecurityExceptionCaught a SecurityException reading the system property 'readingCaught a SecurityException reading the system property 'theCaught a SecurityException reading the system property 'systemCaught a SecurityException reading the system property 'propertyCaught a SecurityException reading the system property ''", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1), "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate(" ", (-1920), (-1920), " ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, "\"\"1#c1h!QU$i");
      assertEquals("\"\"1#c1h!QU$i", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.vm.version", (-1), (-1), "java.vm.version");
      assertEquals("java.vm.version", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-1920), (-1920), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, (-1333), (-1333), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Org.apache.commons.lang.WordUtils", 2, 2, "");
      assertEquals("Or", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      String string0 = WordUtils.initials("org.apache.commons.lang.SystemUtils", charArray0);
      assertEquals("ol", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("}'O;xt9mVJgAmGR", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("vP[-Gm>hG@z");
      assertEquals("Vp[-gM>Hg@Z", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[3] = 'y';
      String string0 = WordUtils.uncapitalize("uapyz[yy5#?86PN", charArray0);
      assertEquals("uapyz[yy5#?86PN", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("ulo", charArray0);
      assertEquals("ulo", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("java.vm.specification.vendor", charArray0);
      assertEquals("java.vm.specification.vendor", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalizeFully("org.apache.commons.lang.WordUtils", charArray0);
      assertEquals("Org.apache.commons.lang.wordutils", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      String string0 = WordUtils.capitalize("yw}bEzk~;!2#0", charArray0);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("4H3,fHM", charArray0);
      assertEquals("4H3,fHM", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("Yw}bEzk~;!2#0", 0, "Yw}bEzk~;!2#0", false);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap(" is less than 0: ", 2, (String) null, true);
      assertNotNull(string0);
      assertEquals("is\nle\nss\nth\nan\n0:\n", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 439);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("awt.toolkit");
      assertEquals("awt.toolkit", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap(" is less than 0: ", (-1806));
      assertEquals("is\nless\nthan\n0:\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.initials("awt.toolkit");
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }
}
