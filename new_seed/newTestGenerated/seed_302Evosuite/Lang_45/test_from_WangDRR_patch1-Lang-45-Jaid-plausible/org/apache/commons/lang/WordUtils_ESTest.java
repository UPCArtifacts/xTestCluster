/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 03:36:29 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("Caught a SecurityException reading the system property '", (-1608), (-493), "Caught a SecurityException reading the system property '");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("yXSYk?4D", 0, 0, (String) null);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("\"\"1#c1h!QU$i", 12, 12, "\"\"1#c1h!QU$i");
      assertEquals("\"\"1#c1h!QU$i", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("1.1", 2148, (-1493), "");
      assertEquals("1.1", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 0, (-2161), (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Caught a SecurityException reading the system property '", 2, 2, "YZN");
      assertEquals("CaYZN", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-2161));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("*L_XP.");
      assertEquals("*l_xp.", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.initials("5R5JI|&", (char[]) null);
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("ororg.apache.commons.lang.WordUtils", (char[]) null);
      assertEquals("ororg.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("=iG>|(k<w*3ctTcv_z$", (char[]) null);
      assertEquals("=ig>|(k<w*3cttcv_z$", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.wrap("Caught a SecurityException reading the system property '", (-3577), "Caught a SecurityException reading the system property '", false);
      assertEquals("CaughtCaught a SecurityException reading the system property 'aCaught a SecurityException reading the system property 'SecurityExceptionCaught a SecurityException reading the system property 'readingCaught a SecurityException reading the system property 'theCaught a SecurityException reading the system property 'systemCaught a SecurityException reading the system property 'propertyCaught a SecurityException reading the system property ''", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap(" u", (-3323), "", true);
      assertEquals("u", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap("cAUGHT A sECURITYeXCEPTION READING THE SYSTEM PROPERTY '", 119, "VYL:b", false);
      assertEquals("cAUGHT A sECURITYeXCEPTION READING THE SYSTEM PROPERTY '", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, (String) null, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1), "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Caught A SEcurityException ReadinG The SyStem ProPerty '", 16, 769, "=]Oax;}Gj-");
      assertEquals("Caught A SEcurityException=]Oax;}Gj-", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.specification.name", (-1), (-1), "java.specification.name");
      assertEquals("java.specification.name", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, (-600), (-600), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, "\"\"1#c1h!QU$i");
      assertNotNull(string0);
      assertEquals("\"\"1#c1h!QU$i", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      String string0 = WordUtils.initials("N?N+3Moc^79Ck7U^", charArray0);
      assertEquals("NC", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("<(m:#a]q0z`Ic^`X", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.swapCase("is\nless\ntan\n0\n");
      assertEquals("IS\nLESS\nTAN\n0\n", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("\"\"1#c1h!QU$i");
      assertEquals("\"\"1#C1H!qu$I", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[3] = 'y';
      String string0 = WordUtils.uncapitalize("uapyz[yy5#?86PN", charArray0);
      assertEquals("uapyz[yy5#?86PN", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("+Me)V", charArray0);
      assertEquals("+Me)V", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("~}Y:xdkL!O8cf(9wWMW", charArray0);
      assertEquals("~}Y:xdkL!O8cf(9wWMW", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalizeFully("5<vb", charArray0);
      assertEquals("5<vb", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      String string0 = WordUtils.capitalize("yw}bEzk~;!2#0", charArray0);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("-?~Y", charArray0);
      assertEquals("-?~Y", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("IS\nLESS\nTAN\n0\n", (-2461), "is\nless\ntan\n0\n", true);
      assertEquals("Iis\nless\ntan\n0\nSis\nless\ntan\n0\n\nis\nless\ntan\n0\nLis\nless\ntan\n0\nEis\nless\ntan\n0\nSis\nless\ntan\n0\nSis\nless\ntan\n0\n\nis\nless\ntan\n0\nTis\nless\ntan\n0\nAis\nless\ntan\n0\nNis\nless\ntan\n0\n\nis\nless\ntan\n0\n0is\nless\ntan\n0\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap(" is less tan 0 ", (-2461));
      assertEquals("is\nless\ntan\n0\n", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap("t M%XHBw/sM#3~~[", 2);
      assertEquals("t\nM%XHBw/sM#3~~[", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap("Yw}bEzk~;!2#0", 0, "Yw}bEzk~;!2#0", false);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-3577));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("awt.toolkit");
      assertEquals("awt.toolkit", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.initials("awt.toolkit");
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = WordUtils.capitalize("]rUv-}(wD$r?d$Tv@'a");
      assertEquals("]rUv-}(wD$r?d$Tv@'a", string0);
  }
}
