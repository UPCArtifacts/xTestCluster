/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 03:34:59 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("Caught a SecurityException reading the system property '", (-1608), (-493), "Caught a SecurityException reading the system property '");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("TimeToLive of ", (-1), (-1), "TimeToLive of ");
      assertEquals("TimeToLiveTimeToLive of ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("yXSYk?4D", 0, 0, (String) null);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 0, 0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-1146), "org.apache.commons.lang.WordUtils", true);
      assertEquals("\torg.apache.commons.lang.WordUtils\rorg.apache.commons.lang.WordUtils\norg.apache.commons.lang.WordUtils\b", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Strings Must Not Be Null", 4, 4, "Strings must not be null");
      assertEquals("StriStrings must not be null", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.wrap("YY]FmFIsP.rZ`]Y]FmFIsP.rZ`FY]FmFIsP.rZ`mY]FmFIsP.rZ`FY]FmFIsP.rZ`IY]FmFIsP.rZ`sY]FmFIsP.rZ`PY]FmFIsP.rZ`.Y]FmFIsP.rZ`rY]FmFIsP.rZ`ZY]FmFIsP.rZ``", (-1090), "Y]FmFIsP.rZ`", true);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      WordUtils.initials(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      String string0 = WordUtils.initials("org.apache.commons.lang.WordUtils", charArray0);
      assertEquals("oho", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.initials("5R5JI|&", (char[]) null);
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[3] = 'y';
      String string0 = WordUtils.uncapitalize("uapyz[yy5#?86PN", charArray0);
      assertEquals("uapyz[yy5#?86PN", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("=iG>|(k<w*3ctTcv_z$", (char[]) null);
      assertEquals("=ig>|(k<w*3cttcv_z$", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap("Caught a SecurityException reading the system property '", (-3577), "Caught a SecurityException reading the system property '", false);
      assertEquals("CaughtCaught a SecurityException reading the system property 'aCaught a SecurityException reading the system property 'SecurityExceptionCaught a SecurityException reading the system property 'readingCaught a SecurityException reading the system property 'theCaught a SecurityException reading the system property 'systemCaught a SecurityException reading the system property 'propertyCaught a SecurityException reading the system property ''", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, (String) null, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1), "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.abbreviate("org.apache.commons.lang.WordUtils", (-133), 2, "org.apache.commons.lang.WordUtils");
      assertEquals("ororg.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, (-2161), " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("H~4Q 6", 3429, (-1), "H~4Q 6");
      assertEquals("H~4Q 6", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-2211), (-2211), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 1, 1, "o:60T]%");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, (-1527), (-1527), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      String string0 = WordUtils.capitalize("yw}bEzk~;!2#0", charArray0);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.initials("CaughtCaught a SecurityException reading the system property '");
      assertEquals("CaSrtsp'", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("<t|tlBs(;`L|/! E", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.initials("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("java.vendor");
      assertEquals("JAVA.VENDOR", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase("\"\"1#c1h!QU$i");
      assertEquals("\"\"1#C1H!qu$I", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("Caught a SecurityException reading the system property '");
      assertEquals("caught a securityException reading the system property '", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("vcr`Q_J^[@/0]$xdOp&", charArray0);
      assertEquals("vcr`Q_J^[@/0]$xdOp&", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[9];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("...", charArray0);
      assertEquals("...", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalizeFully("5<vb", charArray0);
      assertEquals("5<vb", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("%YQQ", charArray0);
      assertEquals("%YQQ", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap("Y]FmFIsP.rZ`", 1, "Y]FmFIsP.rZ`", true);
      assertEquals("YY]FmFIsP.rZ`]Y]FmFIsP.rZ`FY]FmFIsP.rZ`mY]FmFIsP.rZ`FY]FmFIsP.rZ`IY]FmFIsP.rZ`sY]FmFIsP.rZ`PY]FmFIsP.rZ`.Y]FmFIsP.rZ`rY]FmFIsP.rZ`ZY]FmFIsP.rZ``", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap("Yw}bEzk~;!2#0", 0, "Yw}bEzk~;!2#0", false);
      assertEquals("Yw}bEzk~;!2#0", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 7);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.wrap(" is4 less than 0: ", 5);
      assertEquals("is4\nless\nthan\n0: ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully(" T");
      assertEquals(" T", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.capitalize("Strings must not be null");
      assertEquals("Strings Must Not Be Null", string0);
  }
}
