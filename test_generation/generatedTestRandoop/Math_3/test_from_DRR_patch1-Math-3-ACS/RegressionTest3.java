import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) (byte) 0);
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray13, 0);
        double[] doubleArray20 = new double[] { 1, 1, 10 };
        double[] doubleArray24 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray24);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray35);
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equals(doubleArray24, doubleArray35);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray35);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray66);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equals(doubleArray55, doubleArray66);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray55);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (double) 100L);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray47);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray35, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2165.0d), doubleArray80);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray15, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3.295116804952141E29d, doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-21650.0, 2165.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-9000.0, -200.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray12);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(doubleArray21, doubleArray32);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray32);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray63);
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.equals(doubleArray52, doubleArray63);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray52);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray44, (double) 100L);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray44);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray32, doubleArray77);
        double[] doubleArray80 = null;
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(doubleArray12, doubleArray32);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray32, (int) (byte) 1);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.scale(8.5815885820656E40d, doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-9000.0, -200.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-900.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-7.72342972385904E43, 1.71631771641312E43, 8.5815885820656E43]");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray43);
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray43);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray62);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray20, doubleArray65);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, (int) 'a');
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.scale(1.347347400304754E92d, doubleArray20);
        double double70 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.2126126602742785E95, -2.694694800609508E94, -1.347347400304754E95]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1360.1470508735442d + "'", double70 == 1360.1470508735442d);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(102098.0d, (-1.0493269724688772E156d), (-6.0637100680135326E82d), 1363.329967155091d, (-7.946587314649125E57d), 8281.594049456904d, (-1.5183866289549949E7d), 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0713418523512742E161d) + "'", double8 == (-1.0713418523512742E161d));
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 100);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41);
        double double43 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection22 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection22, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection25 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection25, false);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection25, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection30, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray11, orderDirection30, false, false);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) '4');
        double[] doubleArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray37, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection22.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + orderDirection25 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection25.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 100.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        double double46 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray44);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, (int) (short) 1);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int int57 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray56);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int[] intArray73 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int74 = org.apache.commons.math3.util.MathArrays.distance1(intArray66, intArray73);
        int[] intArray76 = org.apache.commons.math3.util.MathArrays.copyOf(intArray73, (int) (byte) 100);
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray73);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray73);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 98 + "'", int74 == 98);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, 1, 52, 1, 32, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 98 + "'", int77 == 98);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 1, 52, 1, 32, -1]");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(990.0d, (-2.3520815078818308E81d), (-1.0736316432238322E99d), (double) 1L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0736316432238346E99d) + "'", double4 == (-1.0736316432238346E99d));
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        float[] floatArray11 = new float[] { (short) 1, (-1L) };
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray11);
        float[] floatArray15 = new float[] { (-1L), (byte) 10 };
        float[] floatArray19 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray15, floatArray19);
        float[] floatArray23 = new float[] { (short) 1, (-1L) };
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray19, floatArray23);
        float[] floatArray27 = new float[] { (-1L), (byte) 10 };
        float[] floatArray31 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray31);
        float[] floatArray33 = null;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray27, floatArray33);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equals(floatArray19, floatArray27);
        float[] floatArray38 = new float[] { (-1L), (byte) 10 };
        float[] floatArray42 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray38, floatArray42);
        float[] floatArray46 = new float[] { (short) 1, (-1L) };
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray42, floatArray46);
        float[] floatArray50 = new float[] { (-1L), (byte) 10 };
        float[] floatArray54 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        float[] floatArray56 = null;
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray50, floatArray56);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray42, floatArray50);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray50);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray27);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray0, floatArray7);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((-5.055478783810143E21d), doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-5.055478783810143E21, -5.055478783810143E21, -5.055478783810143E22]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection50 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection50, true);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray5, orderDirection50, false, false);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray5);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.2459825039216539E7d, doubleArray56);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray63);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray56, doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (0 >= 0)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection50 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection50.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.2584423289608705E9, -1.2584423289608705E9, -1.2584423289608704E10]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-Infinity, -Infinity, -Infinity]");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray21);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, 100);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray39);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray39);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42, 10);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray44);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.scale((-2.359922046250594E90d), doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[2.1475290620880404E93, -4.7434433129636933E92, -2.359922046250594E93, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-91000.0, 20100.0, 100000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray61);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray64);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, (int) 'a');
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray81 = new double[] { 1, 1, 10 };
        double[] doubleArray85 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray85);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray75, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray19, doubleArray86);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89, 1);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray89, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-810000.0, -40000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-810000.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[4.378378378378378, 0.21621621621621623, 5.405405405405405]");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double double76 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray31, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray31);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray11, doubleArray31);
        double double79 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray31);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (-2.667039156913762E7d));
        double double82 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray31);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, 1427.5857242211412d);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.665302576915262E10d), doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[3.262683095709256E14, -7.250406879353903E13, -3.625203439676951E14]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 18500.0d + "'", double79 == 18500.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[8.001117470741287E7, -1.778026104609175E7, -8.890130523045874E7]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 18500.0d + "'", double82 == 18500.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-4282.757172663423, 951.7238161474276, 4758.619080737138]");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -90,000 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-90000.0, 20000.0, 100000.0]");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray51);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray40);
        double double55 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray20, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.scale(929377.4372207435d, doubleArray54);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.scale((double) (short) 0, doubleArray56);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2068.0d + "'", double55 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.7658171307194125E7, 2788132.3116622306, 9293774.372207435]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-0.0, 0.0, 0.0]");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int[] intArray15 = org.apache.commons.math3.util.MathArrays.copyOf(intArray12, (int) (short) 1);
        int[] intArray16 = new int[] {};
        int[] intArray21 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int22 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray16, intArray21);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) (short) 1);
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray15, intArray24);
        int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 10);
        int int36 = org.apache.commons.math3.util.MathArrays.distance1(intArray15, intArray32);
        double double37 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray15);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15);
        java.lang.Class<?> wildcardClass39 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int[] intArray18 = new int[] {};
        int[] intArray23 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int24 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray18, intArray23);
        int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray23, (int) (short) 1);
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (short) 100);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray47);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) (short) 100);
        double double51 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray38);
        int int52 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray17);
        java.lang.Class<?> wildcardClass53 = intArray17.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray17, doubleArray48);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray48, 144652.08102413287d);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray74);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray76, (int) (byte) 0);
        double double79 = org.apache.commons.math3.util.MathArrays.distance(doubleArray48, doubleArray76);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray76);
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray76);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray76, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 20.09975124224178d + "'", double79 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.04987562112089d + "'", double81 == 10.04987562112089d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, -0.0, 0.0]");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.6637736464722298E25d), 1.0020387082911603E30d, 100.0d, (-1.552472386491933E14d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.6671655955999066E55d) + "'", double4 == (-1.6671655955999066E55d));
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double double53 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray17, doubleArray39);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2165.0d, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (21,650 >= -2,165)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[21650.0, -2165.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        double[] doubleArray0 = null;
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(doubleArray11, doubleArray22);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray22);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray22);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray22, 100);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray0, doubleArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection7, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection10, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection13 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean15 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection13, false);
        double[] doubleArray19 = new double[] { 1, 1, 10 };
        double[] doubleArray23 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray23);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray43);
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray43);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray32);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray74);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray63, doubleArray74);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray63);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray32, doubleArray63);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray63, doubleArray88);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray88);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection92 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray88, orderDirection92, false);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection92, false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + orderDirection13 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection13.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-890.0, 199.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + orderDirection92 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection92.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(doubleArray57, doubleArray68);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray68);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray68);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray4, doubleArray68);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray4, 48013.29967155091d);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) '#', doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 820404.8465375019d + "'", double75 == 820404.8465375019d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[4001.1083059625757, 4001.1083059625757, 40011.08305962576]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[350.0, -35.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-9.0, 2.0, 10.0]");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40, 10);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray80);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray80);
        double[] doubleArray87 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray83, doubleArray87);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray42, doubleArray83);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[828100.0, -365820.0, -1779599.0, 402000.0, 1000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray39);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (double) 100L);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray31);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray19, doubleArray64);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2165.0d), doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -21,650 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-21650.0, 2165.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9000.0, -200.0, 0.0]");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double double21 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray11, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (1 >= 1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1020.0d + "'", double21 == 1020.0d);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        double double63 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray48);
        double double64 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray9, doubleArray48);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.5183866289549949E7d), doubleArray9);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray85);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray85, (double) (byte) 1);
        double double91 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray90);
        double double92 = org.apache.commons.math3.util.MathArrays.distance(doubleArray9, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -30,367,732.579 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.3665479660594955E8, -3.0367732579099897E7, -1.518386628954995E8]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.04987562112089d + "'", double63 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-92.0d) + "'", double64 == (-92.0d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.533823502911814d + "'", double91 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.0652291407971942E8d + "'", double92 == 2.0652291407971942E8d);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        float[] floatArray11 = new float[] { (short) 1, (-1L) };
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray11);
        float[] floatArray15 = new float[] { (-1L), (byte) 10 };
        float[] floatArray19 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray15, floatArray19);
        float[] floatArray23 = new float[] { (short) 1, (-1L) };
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray19, floatArray23);
        float[] floatArray27 = new float[] { (-1L), (byte) 10 };
        float[] floatArray31 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray31);
        float[] floatArray33 = null;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray27, floatArray33);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equals(floatArray19, floatArray27);
        float[] floatArray38 = new float[] { (-1L), (byte) 10 };
        float[] floatArray42 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray38, floatArray42);
        float[] floatArray46 = new float[] { (short) 1, (-1L) };
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray42, floatArray46);
        float[] floatArray50 = new float[] { (-1L), (byte) 10 };
        float[] floatArray54 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        float[] floatArray56 = null;
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray50, floatArray56);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray42, floatArray50);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray50);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray27);
        float[] floatArray63 = new float[] { (-1L), (byte) 10 };
        float[] floatArray67 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray67);
        float[] floatArray69 = null;
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray69);
        float[] floatArray73 = new float[] { (-1L), (byte) 10 };
        float[] floatArray77 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray73, floatArray77);
        float[] floatArray81 = new float[] { (short) 1, (-1L) };
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray77, floatArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray77);
        float[] floatArray86 = new float[] { (-1L), (byte) 10 };
        float[] floatArray90 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray86, floatArray90);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray86);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray63);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray0, floatArray63);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray28, orderDirection31, true);
        double double34 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray28);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double double45 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray28, doubleArray44);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1360.1470508735442d + "'", double34 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 990.0d + "'", double45 == 990.0d);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        long[] longArray3 = new long[] { ' ', (short) 1, (byte) 10 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[32, 1, 10]");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double double76 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray31, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray31);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray11, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray11);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.scale((double) 10, doubleArray11);
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.099504938362077d + "'", double81 == 10.099504938362077d);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, (double) 100L);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray70);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray53, doubleArray72);
        double[] doubleArray77 = new double[] { 1, 1, 10 };
        double[] doubleArray81 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray81);
        double[] doubleArray87 = new double[] { 1, 1, 10 };
        double[] doubleArray91 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray87, doubleArray91);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray92);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(doubleArray81, doubleArray92);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray72, doubleArray92);
        double double96 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray10, doubleArray92);
        double double97 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray92);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 990.0d + "'", double96 == 990.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1360.1470508735442d + "'", double97 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-0.0, 0.0, 0.0]");
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        long[] longArray2 = new long[] { (byte) 10, 0 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray2);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray2);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 0]");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) ' ');
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 100);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        int[] intArray34 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31, (int) (short) 1);
        int[] intArray35 = new int[] {};
        int[] intArray40 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int41 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray40);
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40, (int) (short) 1);
        int int44 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray34, intArray43);
        int[] intArray46 = org.apache.commons.math3.util.MathArrays.copyOf(intArray34, 0);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        int[] intArray54 = new int[] {};
        int[] intArray59 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int60 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray54, intArray59);
        int int61 = org.apache.commons.math3.util.MathArrays.distance1(intArray47, intArray59);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray46, intArray47);
        int[] intArray64 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray25, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray36);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, (double) 100L);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray28);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray28);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray8);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2.620301998137665E92d, doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[2.620301998137665E93, -2.620301998137665E92, 0.0]");
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection28 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection28, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection31, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray15, orderDirection31, true);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray11, doubleArray15);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) 1, doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + orderDirection28 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection28.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-11.0, 0.0, -10.0]");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(2.014842271203998E7d, (double) 10, 199517.28166883273d, (-1101.0d), 7.021059879986961E21d, 1.2503081079148144E103d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 8.77848809410311E124d + "'", double6 == 8.77848809410311E124d);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray6);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray21);
        double double24 = org.apache.commons.math3.util.MathArrays.distance(doubleArray6, doubleArray23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray6);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(3.655405393522434E85d, doubleArray25);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray46);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equals(doubleArray66, doubleArray77);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray66);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, (double) 100L);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray58);
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection91 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray90, orderDirection91, false);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray58, orderDirection91, false);
        boolean boolean98 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray27, orderDirection91, true, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (-8,513,206,090,139,362,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 >= -8,513,206,090,139,362,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 14.866068747318506d + "'", double24 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-8.513206090139362E135, -8.513206090139362E135, -8.513206090139363E136]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + orderDirection91 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection91.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray8 = null;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray8);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray20 = new float[] { (short) 1, (-1L) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray16);
        float[] floatArray25 = new float[] { (-1L), (byte) 10 };
        float[] floatArray29 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray25);
        float[] floatArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray32);
        float[] floatArray36 = new float[] { (-1L), (byte) 10 };
        float[] floatArray40 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray36, floatArray40);
        float[] floatArray42 = null;
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(floatArray36, floatArray42);
        float[] floatArray46 = new float[] { (-1L), (byte) 10 };
        float[] floatArray50 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray46, floatArray50);
        float[] floatArray54 = new float[] { (short) 1, (-1L) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray36, floatArray50);
        float[] floatArray59 = new float[] { (-1L), (byte) 10 };
        float[] floatArray63 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray59, floatArray63);
        float[] floatArray67 = new float[] { (short) 1, (-1L) };
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray67);
        float[] floatArray71 = new float[] { (-1L), (byte) 10 };
        float[] floatArray75 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray71, floatArray75);
        float[] floatArray79 = new float[] { (short) 1, (-1L) };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray75, floatArray79);
        float[] floatArray83 = new float[] { (-1L), (byte) 10 };
        float[] floatArray87 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray83, floatArray87);
        float[] floatArray91 = new float[] { (short) 1, (-1L) };
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray87, floatArray91);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(floatArray79, floatArray91);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray91);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray63);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(floatArray25, floatArray63);
        float[] floatArray97 = null;
        boolean boolean98 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray97);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray83), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, 100);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(212170.0d, doubleArray20);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27, (int) ' ');
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.90953E8, -4.2434E7, -2.1217E8]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.90953E8, -4.2434E7, -2.1217E8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray6);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray21);
        double double24 = org.apache.commons.math3.util.MathArrays.distance(doubleArray6, doubleArray23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray6);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(3.655405393522434E85d, doubleArray25);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray36);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray67);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray56, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray56);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray48, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray48);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray38, doubleArray48);
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 14.866068747318506d + "'", double24 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-8.513206090139362E135, -8.513206090139362E135, -8.513206090139363E136]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(doubleArray57, doubleArray68);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray68);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray68);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray4, doubleArray68);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.scale(1.8325905930266478E95d, doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 820404.8465375019d + "'", double75 == 820404.8465375019d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.8325905930266478E95, 1.8325905930266478E95, 1.8325905930266477E96]");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray39);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (double) 100L);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray31);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, (double) 'a');
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray75);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray77, (int) ' ');
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray56, doubleArray79);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(12.0d, doubleArray79);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-291.0, 64.66666666666667, 323.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) '4', doubleArray10);
        double[] doubleArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray10, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1684800.0, 374400.0, 1872000.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-300.0, 66.66666666666667, 333.3333333333333]");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (byte) 0);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int[] intArray69 = new int[] {};
        int[] intArray74 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int75 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray69, intArray74);
        int[] intArray77 = org.apache.commons.math3.util.MathArrays.copyOf(intArray74, (int) (short) 1);
        int int78 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray77);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray68);
        int[] intArray80 = new int[] {};
        int[] intArray85 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int86 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray80, intArray85);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (short) 10);
        int int89 = org.apache.commons.math3.util.MathArrays.distance1(intArray68, intArray85);
        int[] intArray91 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (byte) 0);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) '#');
        int[] intArray95 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, 235);
        int int96 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray59, intArray85);
        int[] intArray97 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[]");
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray56);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray39, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray78);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray67, doubleArray78);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray58, doubleArray78);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray20, doubleArray78);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) 10, doubleArray82);
        double double84 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray82);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray82, 10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.02040068542142E52d), doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-9000.0, 2000.0, 10000.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1360.1470508735442d + "'", double84 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[9.18360616879278E54, -2.04080137084284E54, -1.0204006854214201E55, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray10, floatArray22);
        float[] floatArray27 = new float[] { (-1L), (byte) 10 };
        float[] floatArray31 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray31);
        float[] floatArray35 = new float[] { (short) 1, (-1L) };
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray31, floatArray35);
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray45 = null;
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(floatArray39, floatArray45);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(floatArray31, floatArray39);
        float[] floatArray50 = new float[] { (-1L), (byte) 10 };
        float[] floatArray54 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        float[] floatArray58 = new float[] { (short) 1, (-1L) };
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray54, floatArray58);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray68 = null;
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(floatArray62, floatArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(floatArray54, floatArray62);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray62);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray22, floatArray62);
        java.lang.Class<?> wildcardClass73 = floatArray22.getClass();
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        double[] doubleArray0 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!", "" };
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection13 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean15 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray12, orderDirection13, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection16 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean18 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray12, orderDirection16, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection19 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray12, orderDirection19, false);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray5, orderDirection19, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray0, orderDirection19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + orderDirection13 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection13.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + orderDirection16 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection16.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + orderDirection19 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection19.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(8.77848809410311E124d, (-5.718703196015772E45d), (double) 1, (-7.217129340870217E25d), (-2.3050398777241942E83d), (-5.691405330860345E15d), (-101.0d), (double) 100L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-5.020156791993386E170d) + "'", double8 == (-5.020156791993386E170d));
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        float[] floatArray11 = new float[] { (short) 1, (-1L) };
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray11);
        float[] floatArray15 = new float[] { (-1L), (byte) 10 };
        float[] floatArray19 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray15, floatArray19);
        float[] floatArray23 = new float[] { (short) 1, (-1L) };
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray19, floatArray23);
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equals(floatArray11, floatArray23);
        float[] floatArray28 = new float[] { (-1L), (byte) 10 };
        float[] floatArray32 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray28, floatArray32);
        float[] floatArray36 = new float[] { (short) 1, (-1L) };
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray32, floatArray36);
        float[] floatArray40 = new float[] { (-1L), (byte) 10 };
        float[] floatArray44 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray40, floatArray44);
        float[] floatArray46 = null;
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(floatArray40, floatArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(floatArray32, floatArray40);
        float[] floatArray51 = new float[] { (-1L), (byte) 10 };
        float[] floatArray55 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray51, floatArray55);
        float[] floatArray59 = new float[] { (short) 1, (-1L) };
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray55, floatArray59);
        float[] floatArray63 = new float[] { (-1L), (byte) 10 };
        float[] floatArray67 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray67);
        float[] floatArray69 = null;
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray69);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(floatArray55, floatArray63);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray40, floatArray63);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray23, floatArray63);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray0, floatArray23);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(3600.0d, (-6.451502658696347E27d), 8281.594049456904d, 1.1994689109482976E37d, 1.2423244926866538E15d, (-8.376312124597788E142d), 3.1182816454942446E170d, (-2.3520815078818308E81d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-7.334452594734339E251d) + "'", double8 == (-7.334452594734339E251d));
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray21 = new double[] { 1, 1, 10 };
        double[] doubleArray25 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray25);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray36);
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray25);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray67);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray56, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray56);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray25, doubleArray56);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, 144652.08102413287d);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, (double) 10L);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray3, doubleArray75);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3, (int) (byte) 1);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection79 = null;
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray78, orderDirection79, true);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[11.11111111111111, -1.1111111111111112, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5);
        int[] intArray11 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) 'a');
        int[] intArray12 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5);
        int[] intArray13 = org.apache.commons.math3.util.MathArrays.copyOf(intArray12);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 100, 100, 35]");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double[] doubleArray79 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray75, doubleArray79);
        double double81 = org.apache.commons.math3.util.MathArrays.distance(doubleArray29, doubleArray79);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (byte) 10, doubleArray79);
        double double83 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray79, 98);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray79, 2068.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray79);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (1,000 >= 0)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1000.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1427.5857242211412d + "'", double81 == 1427.5857242211412d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1000.0499987500625d + "'", double83 == 1000.0499987500625d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1000.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[2047.5247524752476, 0.0, 20.475247524752476]");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(doubleArray57, doubleArray68);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray68);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray68);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray4, doubleArray68);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray4, 48013.29967155091d);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray86);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.scale(48965.2938314476d, doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 820404.8465375019d + "'", double75 == 820404.8465375019d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[4001.1083059625757, 4001.1083059625757, 40011.08305962576]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[489652.938314476, -48965.2938314476, 0.0]");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (byte) 0);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        long[] longArray0 = new long[] {};
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        long[][] longArray3 = new long[][] { longArray0, longArray1, longArray2 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray51);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray40);
        double double55 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray20, doubleArray54);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray54, (int) (short) 10);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray61);
        double double68 = org.apache.commons.math3.util.MathArrays.distance(doubleArray54, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-5.591572318486318E263d), doubleArray54);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3.811678112579062E9d, doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[4.049522026042679E274, -6.393982146383178E273, -2.131327382127726E274]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2068.0d + "'", double55 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 20.09975124224178d + "'", double68 == 20.09975124224178d);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray69);
        double double71 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray57, doubleArray69);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection72 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray69, orderDirection72, true);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray37, doubleArray69);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray89 = new double[] { 1, 1, 10 };
        double[] doubleArray93 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray89, doubleArray93);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray94);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(doubleArray83, doubleArray94);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray69, doubleArray94);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray97);
        java.lang.Class<?> wildcardClass99 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2111.0d + "'", double71 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection72 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection72.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-9200.0d) + "'", double75 == (-9200.0d));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[810000.0, 40000.0, 1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[810000.0, 40000.0, 1000000.0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (111.111 >= -11.111)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[111.11111111111111, -11.11111111111111, 0.0]");
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection22 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection22, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection25 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection25, false);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection25, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection30, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray11, orderDirection30, false, false);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection22.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + orderDirection25 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection25.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 100.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray19);
        double double22 = org.apache.commons.math3.util.MathArrays.distance(doubleArray4, doubleArray21);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, (int) (short) 100);
        double[] doubleArray29 = new double[] { 1, 1, 10 };
        double[] doubleArray33 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray33);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray33);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection52 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray51, orderDirection52, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection55 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray51, orderDirection55, false);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray39, orderDirection55, true);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray65);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray65);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray65);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray35, doubleArray65);
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equals(doubleArray24, doubleArray65);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-820.0d), doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 14.866068747318506d + "'", double22 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[8200.0, -820.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + orderDirection52 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection52.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + orderDirection55 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection55.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection7, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection10, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection13 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean15 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection13, false);
        double[] doubleArray19 = new double[] { 1, 1, 10 };
        double[] doubleArray23 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray23);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray32);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray34, doubleArray53);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection55 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray34, orderDirection55, true);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection55, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection60, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + orderDirection13 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection13.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection55 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection55.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection22 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection22, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection25 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection25, false);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection25, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection30, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray11, orderDirection30, false, false);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) '4');
        double double38 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection22.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + orderDirection25 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection25.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 100.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.99504938362078d + "'", double38 == 100.99504938362078d);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray18, doubleArray63);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray63, 6.364464749353691E111d);
        double double68 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9000.0, -200.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[7.071627499281879E111, -7.071627499281879E110, 0.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.04987562112089d + "'", double68 == 10.04987562112089d);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray39);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (double) 100L);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray31);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray84);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(doubleArray73, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray73);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray19, doubleArray87);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.scale((double) 1L, doubleArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -900 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-919.0, 203.0, 1010.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-900.0, 200.0, 1000.0]");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int int30 = org.apache.commons.math3.util.MathArrays.distance1(intArray20, intArray29);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29);
        int[] intArray33 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) '#');
        int[] intArray34 = new int[] {};
        int[] intArray39 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int40 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray34, intArray39);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39, (int) (short) 1);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 1);
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray42, intArray51);
        int[] intArray53 = new int[] {};
        int[] intArray58 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray53, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58, (int) (short) 1);
        int[] intArray62 = new int[] {};
        int[] intArray67 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int68 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray62, intArray67);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray67, (int) (short) 1);
        int int71 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray70);
        int int72 = org.apache.commons.math3.util.MathArrays.distance1(intArray51, intArray70);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        double double80 = org.apache.commons.math3.util.MathArrays.distance(intArray51, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(intArray29, intArray81);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29);
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, 98);
        int[] intArray86 = new int[] {};
        int[] intArray91 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int92 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray86, intArray91);
        int[] intArray94 = org.apache.commons.math3.util.MathArrays.copyOf(intArray91, (int) (short) 1);
        int[] intArray95 = org.apache.commons.math3.util.MathArrays.copyOf(intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = org.apache.commons.math3.util.MathArrays.distance1(intArray85, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1]");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection3 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean5 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection3, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + orderDirection3 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection3.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(2.1940812183982476E20d, (-2.7326318893828427E20d), 4.0529758683460013E17d, 9.226011509507019E11d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-5.995616305253621E40d) + "'", double4 == (-5.995616305253621E40d));
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray20, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray39, doubleArray59);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray59, 0);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray74);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray59, doubleArray74);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2.667039156913762E7d, doubleArray74);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.scale(1.4951800047059846E8d, doubleArray74);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray78, (int) (short) 0);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray78, 144652.08102413287d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[2.667039156913762E7, 2.667039156913762E7, 2.667039156913762E8]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[3.987703619185364E15, 3.987703619185364E15, 3.987703619185364E16]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[12054.340085344405, 12054.340085344405, 120543.40085344405]");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        double[] doubleArray0 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!", "hi!", "" };
        double[] doubleArray9 = new double[] { 1, 1, 10 };
        double[] doubleArray13 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray13);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection22 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection22, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection25 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection25, false);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray9, orderDirection25, true);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray5, orderDirection25, false);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray40);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection50 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray49, orderDirection50, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection53 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray49, orderDirection53, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection56 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray49, orderDirection56, false);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray40, orderDirection56, false);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray5, orderDirection56, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray0, orderDirection56, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection22.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + orderDirection25 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection25.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + orderDirection50 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection50.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + orderDirection53 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection53.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + orderDirection56 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection56.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray37);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray46);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray46);
        double double54 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray41, doubleArray46);
        double double55 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray46);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray46, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.099504938362077d + "'", double55 == 10.099504938362077d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        double[] doubleArray0 = null;
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray20);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(doubleArray51, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray51);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray43, (double) 100L);
        double double68 = org.apache.commons.math3.util.MathArrays.distance(doubleArray12, doubleArray67);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.scale(1.2423244926866538E15d, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.scale(1000.0499987500625d, doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray82);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray69, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.scale(11.1665284679121d, doubleArray84);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(doubleArray0, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 439.780879782446d + "'", double68 == 439.780879782446d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-3.726973478059961E17, 8.2821632845776928E16, 4.1410816422888454E17]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-3.7271598220753804E20, 8.282577382389735E19, 4.1412886911948666E20]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray37, doubleArray57);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57, 0);
        java.lang.Class<?> wildcardClass63 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray42);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42, 100);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double double32 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray9);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray52);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray52);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray71);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray71);
        double[] doubleArray78 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray74, doubleArray78);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.scale(100.0d, doubleArray78);
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray78);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray78);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray0, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 13.601470508735444d + "'", double32 == 13.601470508735444d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10000.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 100.00499987500625d + "'", double81 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-109.0, 2.0, 9.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-9.0, 2.0, 10.0]");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection40 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray39, orderDirection40, false);
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18, orderDirection40, true, false);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray18, (int) (short) 10);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.scale((-1.5183866289549949E7d), doubleArray18);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray76);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equals(doubleArray65, doubleArray76);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray65);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray57, (double) 100L);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray57);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray82, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            double double85 = org.apache.commons.math3.util.MathArrays.distance(doubleArray0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + orderDirection40 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection40.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.518386628954995E8, 1.5183866289549949E7, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.518386538954995E8, 1.5183864289549949E7, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.518386538954995E8, 1.5183864289549949E7, -10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-7.698832806037301E45d), 1.3342652706739132E34d, 6.050964263521264E78d, (-1.92580055599819E69d), (-1.2109722130566485E21d), (double) 10);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.1652950343014429E148d) + "'", double6 == (-1.1652950343014429E148d));
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        double double62 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray47);
        double double63 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray8, doubleArray47);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47, orderDirection64, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.04987562112089d + "'", double62 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-92.0d) + "'", double63 == (-92.0d));
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray35);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray27, (double) 100L);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray27);
        double double54 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray27);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray84);
        double double86 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray72, doubleArray84);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection87 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray84, orderDirection87, true);
        double double90 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray84);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray84, 1363.329967155091d);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray84);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray27, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 13.601470508735444d + "'", double54 == 13.601470508735444d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2111.0d + "'", double86 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection87 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection87.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1360.1470508735442d + "'", double90 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-90009.0, 20002.0, 100010.0]");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray55, (double) 'a');
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57, 10);
        double double60 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-291.0, 64.66666666666667, 323.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-291.0, 64.66666666666667, 323.3333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 439.780879782446d + "'", double60 == 439.780879782446d);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray16, doubleArray47);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, 144652.08102413287d);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray73);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75, (int) (byte) 0);
        double double78 = org.apache.commons.math3.util.MathArrays.distance(doubleArray47, doubleArray75);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (-79.0d));
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double double83 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 20.09975124224178d + "'", double78 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-87.77777777777777, 8.777777777777779, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.04987562112089d + "'", double83 == 10.04987562112089d);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray56);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(doubleArray45, doubleArray56);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray56);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray87);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray76, doubleArray87);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray76);
        double double91 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray56, doubleArray90);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.scale(929377.4372207435d, doubleArray90);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.scale((double) (short) 0, doubleArray92);
        double double94 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray10, doubleArray92);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray95);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -17,658,171.307 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2068.0d + "'", double91 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.7658171307194125E7, 2788132.3116622306, 9293774.372207435]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.7658161307194125E7d + "'", double94 == 1.7658161307194125E7d);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.7658171307194125E7, 2788132.3116622306, 9293774.372207435]");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((double) (-1), (-6.469188686213148E43d), (-1.3399302268582524E25d), 6.46918841747307E42d, 1.4792824440368394E30d, (-1.1075291104741401E38d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-2.5051744797654795E68d) + "'", double6 == (-2.5051744797654795E68d));
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, (double) 100L);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray70);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray53, doubleArray72);
        double[] doubleArray77 = new double[] { 1, 1, 10 };
        double[] doubleArray81 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray81);
        double[] doubleArray87 = new double[] { 1, 1, 10 };
        double[] doubleArray91 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray87, doubleArray91);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray92);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(doubleArray81, doubleArray92);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray72, doubleArray92);
        double double96 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray10, doubleArray92);
        double double97 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray92);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 990.0d + "'", double96 == 990.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1360.1470508735442d + "'", double97 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-0.0, 0.0, 0.0]");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray39, (double) 100L);
        double double64 = org.apache.commons.math3.util.MathArrays.distance(doubleArray8, doubleArray63);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection65 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray63, orderDirection65, false, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection69 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray63, orderDirection69, true, false);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 439.780879782446d + "'", double64 == 439.780879782446d);
        org.junit.Assert.assertTrue("'" + orderDirection65 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection65.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + orderDirection69 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection69.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray69);
        double double71 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray57, doubleArray69);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection72 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray69, orderDirection72, true);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray37, doubleArray69);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray89 = new double[] { 1, 1, 10 };
        double[] doubleArray93 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray89, doubleArray93);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray94);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(doubleArray83, doubleArray94);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray69, doubleArray94);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2111.0d + "'", double71 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection72 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection72.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-9200.0d) + "'", double75 == (-9200.0d));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[810000.0, 40000.0, 1000000.0]");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray41);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray83);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray41, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.scale((-2.613107296291178E10d), doubleArray86);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89, 0);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray91, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[2.3779276396249723E13, -5.252345665545268E12, -2.613107296291178E13]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.3116862779537551E37d, 2.506821214483436E71d, (-3.4912951236194243E80d), 1.8424009051655974E39d, 1.2459825039216539E7d, 1.2459825039216539E7d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-6.432365295923782E119d) + "'", double6 == (-6.432365295923782E119d));
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray65);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray65);
        int[] intArray71 = new int[] {};
        int[] intArray76 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray71, intArray76);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) (short) 1);
        int[] intArray80 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76);
        int int81 = org.apache.commons.math3.util.MathArrays.distance1(intArray65, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double double41 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1366.9312345542478d + "'", double41 == 1366.9312345542478d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-910.0, 201.0, 1000.0]");
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (double) (byte) 1);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray42, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray61, doubleArray81);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, 0);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray81);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, 116405.9998500075d);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray89);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray89, orderDirection91, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-349217.9995500225, 77603.999900005, 388019.999500025]");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, 100);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray29);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray29);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray56);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray58, (int) ' ');
        double double61 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray58);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray39, doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 10);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20, 0);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20);
        int[] intArray24 = new int[] {};
        int[] intArray29 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int30 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray29);
        int[] intArray31 = new int[] {};
        int[] intArray36 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray24, intArray36);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) '4');
        int[] intArray41 = new int[] {};
        int[] intArray46 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int47 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray46);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 1);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46);
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray51);
        int[] intArray53 = new int[] {};
        int[] intArray58 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray53, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58, (int) (short) 1);
        int[] intArray62 = new int[] {};
        int[] intArray67 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int68 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray62, intArray67);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray67, (int) (short) 1);
        int int71 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray70);
        int[] intArray73 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, (int) (short) 100);
        int[] intArray74 = new int[] {};
        int[] intArray79 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int80 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray74, intArray79);
        int[] intArray82 = org.apache.commons.math3.util.MathArrays.copyOf(intArray79, (int) (short) 1);
        int[] intArray89 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int90 = org.apache.commons.math3.util.MathArrays.distance1(intArray82, intArray89);
        int int91 = org.apache.commons.math3.util.MathArrays.distance1(intArray61, intArray89);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, 100);
        double double94 = org.apache.commons.math3.util.MathArrays.distance(intArray36, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray23, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 98 + "'", int90 == 98);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 98 + "'", int91 == 98);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 145.68802284333466d + "'", double94 == 145.68802284333466d);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        float[] floatArray11 = new float[] { (short) 1, (-1L) };
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray11);
        boolean boolean13 = org.apache.commons.math3.util.MathArrays.equals(floatArray0, floatArray7);
        float[] floatArray16 = new float[] { (-1L), (byte) 10 };
        float[] floatArray20 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        float[] floatArray22 = null;
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray34 = new float[] { (short) 1, (-1L) };
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray34);
        float[] floatArray38 = new float[] { (-1L), (byte) 10 };
        float[] floatArray42 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray38, floatArray42);
        float[] floatArray44 = null;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(floatArray38, floatArray44);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(floatArray30, floatArray38);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray30);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(floatArray0, floatArray30);
        float[] floatArray51 = new float[] { (-1.0f), 100.0f };
        float[] floatArray54 = new float[] { (-1L), (byte) 10 };
        float[] floatArray58 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray54, floatArray58);
        float[] floatArray62 = new float[] { (short) 1, (-1L) };
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray58, floatArray62);
        float[] floatArray66 = new float[] { (-1L), (byte) 10 };
        float[] floatArray70 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray72 = null;
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(floatArray58, floatArray66);
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equals(floatArray51, floatArray66);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray66);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray12, 0);
        double[] doubleArray20 = new double[] { 1, 1, 10 };
        double[] doubleArray24 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray24);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray35);
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equals(doubleArray24, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray54);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray54);
        double[] doubleArray61 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.scale(100.0d, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.scale(2068.0d, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray83);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray83, (double) (byte) 1);
        double double89 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray88);
        double[][] doubleArray90 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray88, doubleArray90);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray64, doubleArray90);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray12, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray12, 9.037912452420332E72d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathArithmeticException; message: array sums to zero");
        } catch (org.apache.commons.math3.exception.MathArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10000.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 206800.0, 2.068E7]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.533823502911814d + "'", double89 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection3 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean5 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection3, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + orderDirection3 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection3.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray6);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.scale(111.0d, doubleArray6);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.552472386491933E14d), doubleArray13);
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray13);
        double[] doubleArray21 = new double[] { 1, 1, 10 };
        double[] doubleArray25 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.scale((-1.2170120134952047E22d), doubleArray28);
        double double31 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray13, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray85 = new double[] { 1, 1, 10 };
        double[] doubleArray89 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray85, doubleArray89);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray90);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(doubleArray79, doubleArray90);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray79);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray79);
        double double95 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray30, doubleArray48);
        java.lang.Class<?> wildcardClass96 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.098944817946503E37, -2.098944817946503E37, -2.098944817946503E38]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.889050336151853E38d) + "'", double95 == (-1.889050336151853E38d));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int[] intArray15 = org.apache.commons.math3.util.MathArrays.copyOf(intArray12, (int) (short) 1);
        int[] intArray16 = new int[] {};
        int[] intArray21 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int22 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray16, intArray21);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) (short) 1);
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray15, intArray24);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        double double33 = org.apache.commons.math3.util.MathArrays.distance(intArray24, intArray31);
        double double34 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray24);
        int[] intArray35 = new int[] {};
        int[] intArray40 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int41 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray40);
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40, (int) (short) 1);
        int[] intArray44 = new int[] {};
        int[] intArray49 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int50 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray44, intArray49);
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray49, (int) (short) 1);
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43, 0);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int[] intArray67 = new int[] {};
        int[] intArray72 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int73 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray67, intArray72);
        int[] intArray75 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (short) 1);
        int int76 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray66, intArray75);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66, 0);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66);
        int[] intArray80 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66);
        int int81 = org.apache.commons.math3.util.MathArrays.distance1(intArray57, intArray80);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(intArray24, intArray80);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 100);
        double double42 = org.apache.commons.math3.util.MathArrays.distance(intArray8, intArray29);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 1);
        int[] intArray52 = new int[] {};
        int[] intArray57 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray52, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 1);
        int int61 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray51, intArray60);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray51, (int) (short) 100);
        int[] intArray64 = new int[] {};
        int[] intArray69 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray64, intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (int) (short) 1);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78, (int) (short) 1);
        int int82 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray72, intArray81);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (short) 100);
        double double85 = org.apache.commons.math3.util.MathArrays.distance(intArray51, intArray72);
        int int86 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray51);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (byte) 100);
        int[] intArray90 = org.apache.commons.math3.util.MathArrays.copyOf(intArray88, (int) (byte) 100);
        int[] intArray91 = org.apache.commons.math3.util.MathArrays.copyOf(intArray90);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray91, 0);
        int[] intArray94 = org.apache.commons.math3.util.MathArrays.copyOf(intArray91);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray61);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray64);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, (int) 'a');
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray81 = new double[] { 1, 1, 10 };
        double[] doubleArray85 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray85);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray75, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray19, doubleArray86);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray19, 2.303752319195026E28d);
        java.lang.Class<?> wildcardClass92 = doubleArray19.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-810000.0, -40000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-6.911256957585079E28, 1.5358348794633508E28, 7.679174397316754E28]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(1.2709644515984184E10d, 8.80879893310199E72d, 144652.08102413287d, 199517.28166883273d, (-1.3439015006589716E48d), 1.2503081079148144E103d, (double) (-1), 4.403214624117384E71d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.6802909425127984E151d) + "'", double8 == (-1.6802909425127984E151d));
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((double) 0L, 79.0d, (double) (short) -1, (-3.48967922381901E15d), 2.014842271203998E7d, (-5.718703196015772E45d), (-7.467661988726902E24d), 3.8931373104222305E116d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.9072633509934575E141d) + "'", double8 == (-2.9072633509934575E141d));
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(doubleArray43, doubleArray54);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray73);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray73);
        double[] doubleArray80 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray76, doubleArray80);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(doubleArray30, doubleArray80);
        double[] doubleArray87 = new double[] { 1, 1, 10 };
        double[] doubleArray91 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray87, doubleArray91);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray87);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray87);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray87);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.scale(2068.0d, doubleArray30);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale(3.0855098392300684E13d, doubleArray30);
        double double98 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1427.5857242211412d + "'", double82 == 1427.5857242211412d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-901.0, 199.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1861200.0, 413600.0, 2068000.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-2.7769588553070616E16, 6.171019678460137E15, 3.0855098392300684E16]");
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1360.1470508735442d + "'", double98 == 1360.1470508735442d);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40, 10);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray71);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray60);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray52, (double) 100L);
        double[][] doubleArray77 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray76, doubleArray77);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray42, doubleArray77);
        double double80 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-910.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1366.9312345542478d + "'", double80 == 1366.9312345542478d);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        double double26 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27, (int) '#');
        int[] intArray30 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29);
        int[] intArray31 = new int[] {};
        int[] intArray36 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray10, floatArray22);
        float[] floatArray27 = new float[] { (-1L), (byte) 10 };
        float[] floatArray31 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray31);
        float[] floatArray35 = new float[] { (short) 1, (-1L) };
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray31, floatArray35);
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray45 = null;
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(floatArray39, floatArray45);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(floatArray31, floatArray39);
        float[] floatArray50 = new float[] { (-1L), (byte) 10 };
        float[] floatArray54 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        float[] floatArray58 = new float[] { (short) 1, (-1L) };
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray54, floatArray58);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray68 = null;
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(floatArray62, floatArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(floatArray54, floatArray62);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray62);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray22, floatArray62);
        float[] floatArray73 = null;
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray22, floatArray73);
        float[] floatArray75 = null;
        float[] floatArray78 = new float[] { (-1L), (byte) 10 };
        float[] floatArray82 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray78, floatArray82);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray75, floatArray82);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(floatArray22, floatArray75);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        int[] intArray0 = new int[] {};
        int[] intArray1 = new int[] {};
        int[] intArray6 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int7 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray1, intArray6);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray6, (int) (short) 1);
        int[] intArray10 = new int[] {};
        int[] intArray15 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int16 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray10, intArray15);
        int[] intArray18 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15, (int) (short) 1);
        int int19 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray18);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray18);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray18, 100);
        int[] intArray23 = new int[] {};
        int[] intArray28 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int29 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray23, intArray28);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28, (int) (short) 1);
        int[] intArray32 = new int[] {};
        int[] intArray37 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int38 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray32, intArray37);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37, (int) (short) 1);
        int int41 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray40);
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40, (int) (short) 100);
        double double44 = org.apache.commons.math3.util.MathArrays.distance(intArray22, intArray43);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22);
        double double46 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray22);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.3289362392541196E50d), (-820.0d), (-7.334452594734339E251d), 1.7246705822717612E15d, 101.0d, 2.2956897605530104E44d, 3.229749752589777E68d, 2.2956897605530104E44d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.2649514627205103E267d) + "'", double8 == (-1.2649514627205103E267d));
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-7.334452594734339E251d), 2.0652291407971942E8d, (-5.718703196015772E45d), (-1.0713418523512742E161d), (-8.39419851318388E54d), (-8.39419851318388E54d), (-2.8469134568462802E23d), 2165.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.514732523044095E260d) + "'", double8 == (-1.514732523044095E260d));
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray15 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int16 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray15);
        int[] intArray17 = new int[] {};
        int[] intArray22 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray22);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22, (int) (short) 1);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        int[] intArray34 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31, (int) (short) 1);
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray25, intArray34);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int[] intArray45 = new int[] {};
        int[] intArray50 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int51 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray45, intArray50);
        int[] intArray53 = org.apache.commons.math3.util.MathArrays.copyOf(intArray50, (int) (short) 1);
        int int54 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray44, intArray53);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray34, intArray53);
        int[] intArray56 = new int[] {};
        int[] intArray61 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int62 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray56, intArray61);
        int[] intArray64 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, (int) (short) 1);
        int int65 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray34, intArray61);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = org.apache.commons.math3.util.MathArrays.distance1(intArray15, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 98 + "'", int16 == 98);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray29);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray50, doubleArray69);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection71 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray50, orderDirection71, true);
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection71, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray12, orderDirection71, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection71 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection71.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(6.534471319905731E69d, 2.696308416477826E80d, 2.4415591134470963E30d, (-2.374194186121723E84d), (-8.13113621789387E42d), (-2.196974293715284E112d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.7864073438910321E155d + "'", double6 == 1.7864073438910321E155d);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(0.0d, 6.525883142260517E35d, (-2.1014830991446272E112d), (-3.2747201721782604E59d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 6.8817690962605976E171d + "'", double4 == 6.8817690962605976E171d);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray5);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (double) (byte) 1);
        double double37 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray36);
        double[][] doubleArray38 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray36, doubleArray38);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray12, doubleArray38);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray45);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray45);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray71);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray71);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray71, (double) (byte) 1);
        double double77 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray76);
        double[][] doubleArray78 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray76, doubleArray78);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray52, doubleArray78);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.9840956615917416E285d), doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.533823502911814d + "'", double37 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.9840956615917415E286, -1.9840956615917415E286, -1.9840956615917417E287]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.533823502911814d + "'", double77 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 0.0]");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((double) (short) 1, 2.1940812183982476E20d, 7.746270471371837E7d, (-1.6637736464722298E25d), 0.0d, 1.8424009051655974E39d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.2888040668712286E33d) + "'", double6 == (-1.2888040668712286E33d));
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray34 = new float[] { (short) 1, (-1L) };
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray34);
        float[] floatArray38 = new float[] { (-1L), (byte) 10 };
        float[] floatArray42 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray38, floatArray42);
        float[] floatArray44 = null;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(floatArray38, floatArray44);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(floatArray30, floatArray38);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray55 = null;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray55);
        float[] floatArray59 = new float[] { (-1L), (byte) 10 };
        float[] floatArray63 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray59, floatArray63);
        float[] floatArray67 = new float[] { (short) 1, (-1L) };
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray67);
        float[] floatArray71 = new float[] { (-1L), (byte) 10 };
        float[] floatArray75 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray71, floatArray75);
        float[] floatArray77 = null;
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equals(floatArray71, floatArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray71);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray63);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray30, floatArray49);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray30);
        float[] floatArray85 = new float[] { (-1L), (byte) 10 };
        float[] floatArray89 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray85, floatArray89);
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray85);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray30);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection7, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection10, false);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray17);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray17);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection35 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray34, orderDirection35, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection38 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean40 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray34, orderDirection38, false);
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection38, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection43 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection43, false);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray24, orderDirection43, false, false);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray58, orderDirection59, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection62 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray58, orderDirection62, false);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray51, orderDirection62, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection67 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray51, orderDirection67, false);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray24, orderDirection67, false);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection67, true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + orderDirection35 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection35.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + orderDirection38 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection38.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + orderDirection43 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection43.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + orderDirection62 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection62.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + orderDirection67 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection67.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((double) (byte) 10, (-2.639260241354281E12d), (-7.099683957756804E102d), 0.0d, (-9200.0d), (-1.405900735433483E96d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.2934286765988043E100d + "'", double6 == 1.2934286765988043E100d);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray42);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray79);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, (int) (byte) 0);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray83, 0);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray83, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray69, doubleArray87);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 3 != 1");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0]");
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        long[] longArray4 = new long[] { (byte) -1, (short) 0, 10, (byte) 10 };
        long[] longArray9 = new long[] { (byte) -1, (short) 0, 10, (byte) 10 };
        long[] longArray14 = new long[] { (byte) -1, (short) 0, 10, (byte) 10 };
        long[][] longArray15 = new long[][] { longArray4, longArray9, longArray14 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray15);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray15);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray15);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray15);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray15);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray15);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection28 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection28, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection31, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray15, orderDirection31, true);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray11, doubleArray15);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray41);
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray11, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1366.9312345542478d, doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-13669.312345542477, 1366.9312345542478, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + orderDirection28 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection28.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double double38 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.scale(2.3726213090057078E14d, doubleArray37);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray37, (-1.0458049754775623E91d));
        java.lang.Class<?> wildcardClass42 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 6181.097447311743d + "'", double38 == 6181.097447311743d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.7039971938346611E17, 2.1564438208521472E17, 1.07822191042607347E18]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[3.1374149264326874E91, -6.972033169850417E90, -3.486016584925208E91]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(9.835522828058196E71d, (-2.1300836490174828E82d), 820404.8465375019d, (-2.1056418422573112E15d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-2.0950486355584955E154d) + "'", double4 == (-2.0950486355584955E154d));
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray72);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray64, (double) 100L);
        double double89 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray18, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -900 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 616666.6666666666d + "'", double89 == 616666.6666666666d);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray29);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, (double) 100L);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray41);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray9, doubleArray41);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9, (int) '4');
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray85 = new double[] { 1, 1, 10 };
        double[] doubleArray89 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray85, doubleArray89);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray90);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(doubleArray79, doubleArray90);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray90);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray90);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray90, 100);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray96);
        double double98 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray97);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray69, doubleArray97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 52 != 100");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1360.1470508735442d + "'", double98 == 1360.1470508735442d);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray41);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        double double55 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray41, doubleArray53);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray20, doubleArray53);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray75);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equals(doubleArray64, doubleArray75);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray75);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray75, (double) (byte) 1);
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray80);
        double[][] doubleArray82 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray80, doubleArray82);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray53, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2111.0d + "'", double55 == 2111.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.533823502911814d + "'", double81 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray52);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray52);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray41);
        double double56 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray21, doubleArray55);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.scale(929377.4372207435d, doubleArray55);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.scale((double) (short) 0, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.scale((-1.0d), doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2068.0d + "'", double56 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.7658171307194125E7, 2788132.3116622306, 9293774.372207435]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.7658171307194125E7, -2788132.3116622306, -9293774.372207435]");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray5);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double double22 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray12, doubleArray16);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(doubleArray61, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray61);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray53, (double) 100L);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray53);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray78, (double) 'a');
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray78);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray16, doubleArray78);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.scale(6.005222408113379E108d, doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1020.0d + "'", double22 == 1020.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-291.0, 64.66666666666667, 323.3333333333333]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1346.545580364809d + "'", double81 == 1346.545580364809d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-891.0, 198.0, 9900.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-5.350653165629021E111, 1.189034036806449E111, 5.945170184032245E112]");
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 1);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1]");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-5.818854497478488E40d), 104715.43798342906d, 1.1461596173157833E27d, 1.5460450237574003E9d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-6.093238970881044E45d) + "'", double4 == (-6.093238970881044E45d));
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray40 = new double[] { 1, 1, 10 };
        double[] doubleArray44 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray44);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray40);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray40);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray10, doubleArray40);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, (-2165.0d));
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, 8.401916463074236E120d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-2405.5555555555557, 240.55555555555554, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[9.335462736749151E120, -9.335462736749152E119, 0.0]");
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray72);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray64, (double) 100L);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray89);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray30);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-9.0, 2.0, 10.0]");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray44);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray66);
        int[] intArray68 = new int[] {};
        int[] intArray73 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int74 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray73);
        int[] intArray76 = org.apache.commons.math3.util.MathArrays.copyOf(intArray73, (int) (short) 1);
        int[] intArray77 = new int[] {};
        int[] intArray82 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int83 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray77, intArray82);
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray82, (int) (short) 1);
        int int86 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray76, intArray85);
        int int87 = org.apache.commons.math3.util.MathArrays.distance1(intArray66, intArray85);
        int[] intArray88 = new int[] {};
        int[] intArray93 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int94 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray88, intArray93);
        double double95 = org.apache.commons.math3.util.MathArrays.distance(intArray66, intArray93);
        int[] intArray96 = org.apache.commons.math3.util.MathArrays.copyOf(intArray93);
        double double97 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray93);
        int[] intArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math3.util.MathArrays.distance(intArray93, intArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray30);
        double[] doubleArray40 = new double[] { 1, 1, 10 };
        double[] doubleArray44 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray44);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40);
        double double47 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray30, doubleArray46);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray51);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray30, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2010.0d, doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1360.1470508735442d + "'", double36 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 990.0d + "'", double47 == 990.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-2.6553406585131265E15, 5.900757018918058E14, 2.950378509459029E15]");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        double double46 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray44);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (short) 0);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray66);
        int[] intArray69 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 100);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, 0);
        int int73 = org.apache.commons.math3.util.MathArrays.distance1(intArray48, intArray72);
        int[] intArray74 = new int[] {};
        int[] intArray79 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int80 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray74, intArray79);
        int[] intArray82 = org.apache.commons.math3.util.MathArrays.copyOf(intArray79, (int) (short) 1);
        int[] intArray83 = new int[] {};
        int[] intArray88 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int89 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray83, intArray88);
        int[] intArray91 = org.apache.commons.math3.util.MathArrays.copyOf(intArray88, (int) (short) 1);
        int int92 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray82, intArray91);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray91);
        int[] intArray94 = org.apache.commons.math3.util.MathArrays.copyOf(intArray91);
        int[] intArray96 = org.apache.commons.math3.util.MathArrays.copyOf(intArray94, 100);
        double double97 = org.apache.commons.math3.util.MathArrays.distance(intArray72, intArray96);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray40, (double) 100L);
        double double65 = org.apache.commons.math3.util.MathArrays.distance(doubleArray9, doubleArray64);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection66 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray64, orderDirection66, false, false);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.scale(21009.0d, doubleArray64);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray71, 0.0d);
        double double74 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 439.780879782446d + "'", double65 == 439.780879782446d);
        org.junit.Assert.assertTrue("'" + orderDirection66 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection66.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-6302700.0, 1400600.0, 7003000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, 0);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray39, intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray64 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray64, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1]");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        float[] floatArray2 = new float[] { (-1.0f), 100.0f };
        float[] floatArray5 = new float[] { (-1L), (byte) 10 };
        float[] floatArray9 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean10 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray5, floatArray9);
        float[] floatArray13 = new float[] { (short) 1, (-1L) };
        boolean boolean14 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray9, floatArray13);
        float[] floatArray17 = new float[] { (-1L), (byte) 10 };
        float[] floatArray21 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray17, floatArray21);
        float[] floatArray23 = null;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray17, floatArray23);
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equals(floatArray9, floatArray17);
        boolean boolean26 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray17);
        float[] floatArray29 = new float[] { (-1L), (byte) 10 };
        float[] floatArray33 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray37 = new float[] { (short) 1, (-1L) };
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray33, floatArray37);
        float[] floatArray41 = new float[] { (-1L), (byte) 10 };
        float[] floatArray45 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray47 = null;
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(floatArray33, floatArray41);
        float[] floatArray52 = new float[] { (-1L), (byte) 10 };
        float[] floatArray56 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray52, floatArray56);
        float[] floatArray58 = null;
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(floatArray52, floatArray58);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray70 = new float[] { (short) 1, (-1L) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (-1L), (byte) 10 };
        float[] floatArray78 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray74, floatArray78);
        float[] floatArray80 = null;
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray74, floatArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray74);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(floatArray52, floatArray66);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equals(floatArray33, floatArray52);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray33);
        float[] floatArray88 = new float[] { (-1L), (byte) 10 };
        float[] floatArray92 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray88, floatArray92);
        float[] floatArray96 = new float[] { (short) 1, (-1L) };
        boolean boolean97 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray92, floatArray96);
        boolean boolean98 = org.apache.commons.math3.util.MathArrays.equals(floatArray33, floatArray92);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(floatArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray96), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 10);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray39);
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equals(doubleArray28, doubleArray39);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray39);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray70);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equals(doubleArray59, doubleArray70);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray59);
        double double74 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray39, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray18, doubleArray73);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection83 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray82, orderDirection83, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection86 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray82, orderDirection86, false);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray75, orderDirection86, false);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2068.0d + "'", double74 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-919.0, 203.0, 1010.0]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + orderDirection83 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection83.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + orderDirection86 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection86.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray56);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(doubleArray45, doubleArray56);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray56);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray87);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray76, doubleArray87);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray76);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray68, (double) 100L);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray68);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray26, doubleArray56);
        double double95 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray7, doubleArray26);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray7, (int) '4');
        java.lang.Class<?> wildcardClass98 = doubleArray7.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray48);
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.equals(doubleArray37, doubleArray48);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray37);
        double double52 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray20, doubleArray29);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.scale(4.149720547924001E12d, doubleArray20);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.scale(3.811678112579062E9d, doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 0.0]");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray33);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray53);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray84);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(doubleArray73, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray73);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray65, (double) 100L);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray65);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray33, doubleArray65);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray65);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray65, 0);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray65);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.scale(48965.2938314476d, doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-4.4068764448302835E7, 9793058.76628952, 4.89652938314476E7]");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-3.2406572592959504E179d), 212170.0d, (-3.2949139463354136E89d), 8.5815885820656E40d, (-1.21097221436007E21d), 3.1182816454942446E170d, (-7.334452594734339E251d), 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-3.776153116812779E191d) + "'", double8 == (-3.776153116812779E191d));
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray21);
        double[] doubleArray29 = new double[] { 1, 1, 10 };
        double[] doubleArray33 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray33);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray44);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(doubleArray33, doubleArray44);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray63);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray63);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray21, doubleArray66);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, (int) 'a');
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.scale(1.347347400304754E92d, doubleArray21);
        double double71 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.4574354727153006E8d, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.7673047057474013E103, -3.927343790549781E102, -1.9636718952748903E103]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.8325905930266478E95d + "'", double71 == 1.8325905930266478E95d);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray21);
        double[] doubleArray29 = new double[] { 1, 1, 10 };
        double[] doubleArray33 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray33);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray44);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(doubleArray33, doubleArray44);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray63);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray63);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray21, doubleArray66);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, (int) 'a');
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray77, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray21, doubleArray88);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray21, 2.303752319195026E28d);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2.620301998137665E92d, doubleArray93);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2.6740627672928667E44d, doubleArray93);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray93, 10);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-810000.0, -40000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-4.842615472066012E165, 1.0761367715702249E165, 5.380683857851124E165]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-4.842615472066012E165, 1.0761367715702249E165, 5.380683857851124E165, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) (byte) 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(0.0d, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray13, (-2.8469134568462802E23d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathArithmeticException; message: array sums to zero");
        } catch (org.apache.commons.math3.exception.MathArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray0, doubleArray68);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) 'a');
        double double72 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray68);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray74);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -3,600 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 22457.292802116644d + "'", double72 == 22457.292802116644d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        long[] longArray5 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[] longArray11 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[] longArray17 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[][] longArray18 = new long[][] { longArray5, longArray11, longArray17 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray18);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray18);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray37, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray77, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray77);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray69, (double) 100L);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray93, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray57, doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-300.0]");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        double double26 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int[] intArray37 = new int[] {};
        int[] intArray42 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int43 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray37, intArray42);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42, (int) (short) 1);
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray45);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray45, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray56);
        java.lang.Class<?> wildcardClass59 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.4788709196896968E29d), (-1.3755656043295059E12d), (double) (byte) -1, 21009.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 3.4098495746977957E41d + "'", double4 == 3.4098495746977957E41d);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.4333688923589076E146d), 2.4397658821053278E76d, 0.0d, 3.9069241870675704E35d, 1.5185608816622775E7d, (-4.0443212939554954E20d), (-2.8132391400032325E191d), (-3.745353277432591E36d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.053651506470873E228d + "'", double8 == 1.053651506470873E228d);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27);
        int int29 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray28);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray47);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        double double56 = org.apache.commons.math3.util.MathArrays.distance(intArray47, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) '#');
        int int60 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray57);
        int[] intArray62 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) 'a');
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray84 = new double[] { 1, 1, 10 };
        double[] doubleArray88 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray84, doubleArray88);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray71, doubleArray90);
        double double92 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray91);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, -1.0, 0.0]");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray8, (int) (byte) 100);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray12, (-1.552472386491933E14d));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.72496931832437E14, 1.7249693183243701E13, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        long[] longArray0 = new long[] {};
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        long[][] longArray3 = new long[][] { longArray0, longArray1, longArray2 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) ' ');
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 100);
        int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1]");
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        int[] intArray0 = null;
        int[] intArray1 = new int[] {};
        int[] intArray6 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int7 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray1, intArray6);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray6, (int) (short) 1);
        int[] intArray10 = new int[] {};
        int[] intArray15 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int16 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray10, intArray15);
        int[] intArray18 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15, (int) (short) 1);
        int int19 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray18);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, (int) (short) 1);
        int[] intArray29 = new int[] {};
        int[] intArray34 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray34);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray34, (int) (short) 1);
        int int38 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray37);
        int int39 = org.apache.commons.math3.util.MathArrays.distance1(intArray18, intArray37);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37);
        int[] intArray41 = new int[] {};
        int[] intArray46 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int47 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray46);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 1);
        int[] intArray50 = new int[] {};
        int[] intArray55 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, (int) (short) 1);
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray49, (int) (short) 100);
        int[] intArray62 = new int[] {};
        int[] intArray67 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int68 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray62, intArray67);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray67, (int) (short) 1);
        int[] intArray71 = new int[] {};
        int[] intArray76 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray71, intArray76);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) (short) 1);
        int int80 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray70, intArray79);
        int[] intArray82 = org.apache.commons.math3.util.MathArrays.copyOf(intArray70, (int) (short) 100);
        double double83 = org.apache.commons.math3.util.MathArrays.distance(intArray49, intArray70);
        double double84 = org.apache.commons.math3.util.MathArrays.distance(intArray37, intArray70);
        int[] intArray86 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37, (int) (short) 100);
        int[] intArray90 = org.apache.commons.math3.util.MathArrays.copyOf(intArray88, 235);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.855513131712105E114d, 104609.92739486144d, 5.040419286078566E224d, 1.1967289080630932E79d, (-5.691405330849884E16d), 2.6817058196121406E33d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 6.032015468408959E303d + "'", double6 == 6.032015468408959E303d);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray18, doubleArray49);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray49, 144652.08102413287d);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray75);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray77, (int) (byte) 0);
        double double80 = org.apache.commons.math3.util.MathArrays.distance(doubleArray49, doubleArray77);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray49, (-79.0d));
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray82, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.615914305086962E12d), doubleArray93);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.scale((-2.2886347112689247E108d), doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 20.09975124224178d + "'", double80 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-87.77777777777777, 8.777777777777779, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[2.2700323025254634E14, -2.5577828760850297E13, -2.6159143050869617E13]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-5.195274723261496E122, 5.853830674097461E121, 5.986872280326948E121]");
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray61);
        double double65 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray20, doubleArray42);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray20);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray81 = new double[] { 1, 1, 10 };
        double[] doubleArray85 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray85);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray75, doubleArray86);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray86);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86, (int) (short) 0);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray66, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.6131166153754868E10d), doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[3.106887221302718E25, -1.3808387650234302E25, -6.750767295670103E25, 1.5342652944704777E25, 3.8356632361761943E25]");
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection3 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean5 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection3, false);
        double[] doubleArray9 = new double[] { 1, 1, 10 };
        double[] doubleArray13 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray13);
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        double[] doubleArray16 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray15);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray15);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection18 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray54);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray37, doubleArray56);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray76);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equals(doubleArray65, doubleArray76);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray56, doubleArray76);
        double[] doubleArray83 = new double[] { (byte) 0, (-1.0d), 13.601470508735444d };
        double[] doubleArray87 = new double[] { (byte) 0, (-1.0d), 13.601470508735444d };
        double[][] doubleArray88 = new double[][] { doubleArray83, doubleArray87 };
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray56, doubleArray88);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray15, orderDirection18, doubleArray88);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection18, true);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + orderDirection3 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection3.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + orderDirection18 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection18.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[13.601470508735444, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[13.601470508735444, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray29);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, (double) 100L);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray41);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray9, doubleArray41);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray9, doubleArray71);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, 1.5183756289549949E7d);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (-7.887202131357053E44d));
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, 4.0529758683460013E17d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-4.555126886864985E7, 1.01225041930333E7, 5.0612520965166494E7]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[2.366160639407116E45, -5.258134754238035E44, -2.629067377119018E45]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.21589276050380032E18, 2.7019839122306672E17, 1.35099195611533363E18]");
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray44);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray66);
        int[] intArray68 = new int[] {};
        int[] intArray73 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int74 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray73);
        int[] intArray76 = org.apache.commons.math3.util.MathArrays.copyOf(intArray73, (int) (short) 1);
        int[] intArray77 = new int[] {};
        int[] intArray82 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int83 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray77, intArray82);
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray82, (int) (short) 1);
        int int86 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray76, intArray85);
        int[] intArray87 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85);
        int[] intArray89 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, 100);
        double double90 = org.apache.commons.math3.util.MathArrays.distance(intArray57, intArray85);
        int int91 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray57);
        int[] intArray92 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1]");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection39 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray38, orderDirection39, false);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray17, orderDirection39, true, false);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray17, (int) (short) 10);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray17);
        double double48 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray77, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray77);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray69, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray69);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray59, doubleArray69);
        double double96 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray47, doubleArray69);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(0.0d, doubleArray47);
        double double98 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + orderDirection39 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection39.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.04987562112089d + "'", double48 == 10.04987562112089d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 75611.0d + "'", double96 == 75611.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(104609.92739486144d, (-5.479592817681999E9d), (-3.2747201720949453E59d), 3.1182816454942446E170d, 102098.0d, (-5.055478783810143E21d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0211499806773423E230d) + "'", double6 == (-1.0211499806773423E230d));
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        double[] doubleArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.scaleInPlace(212180.4992500489d, doubleArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, 0);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray39, intArray61);
        int[] intArray63 = new int[] {};
        int[] intArray68 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray63, intArray68);
        int[] intArray70 = new int[] {};
        int[] intArray75 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int76 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray70, intArray75);
        int int77 = org.apache.commons.math3.util.MathArrays.distance1(intArray63, intArray75);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray75, (int) '4');
        int[] intArray80 = new int[] {};
        int[] intArray85 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int86 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray80, intArray85);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (short) 1);
        int[] intArray89 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85);
        int[] intArray90 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85);
        int int91 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray75, intArray90);
        int int92 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray75);
        int[] intArray94 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, 0);
        int[] intArray95 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1]");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray65);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray65);
        int[] intArray71 = new int[] {};
        int[] intArray76 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray71, intArray76);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) (short) 1);
        int[] intArray80 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76);
        int int81 = org.apache.commons.math3.util.MathArrays.distance1(intArray65, intArray80);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80, (int) (byte) 100);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = org.apache.commons.math3.util.MathArrays.distance(intArray84, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 100, 100, 35]");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray5);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (double) (byte) 1);
        double double37 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray36);
        double[][] doubleArray38 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray36, doubleArray38);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray12, doubleArray38);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray45);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray45);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray71);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray71);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray71, (double) (byte) 1);
        double double77 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray76);
        double[][] doubleArray78 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray76, doubleArray78);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray52, doubleArray78);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray52);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.scale((-1.2970519691988204E43d), doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.533823502911814d + "'", double37 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.533823502911814d + "'", double77 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.2970519691988204E44, -1.2970519691988204E44, -1.2970519691988204E45]");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray20 = null;
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(floatArray14, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray14);
        float[] floatArray25 = new float[] { (-1L), (byte) 10 };
        float[] floatArray29 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray29);
        float[] floatArray31 = null;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(floatArray25, floatArray31);
        float[] floatArray35 = new float[] { (-1L), (byte) 10 };
        float[] floatArray39 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean40 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray35, floatArray39);
        float[] floatArray43 = new float[] { (short) 1, (-1L) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray47 = new float[] { (-1L), (byte) 10 };
        float[] floatArray51 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray47, floatArray51);
        float[] floatArray53 = null;
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(floatArray47, floatArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(floatArray39, floatArray47);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray25, floatArray39);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray25);
        float[] floatArray60 = new float[] { (-1L), (byte) 10 };
        float[] floatArray64 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray60, floatArray64);
        float[] floatArray68 = new float[] { (short) 1, (-1L) };
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray64, floatArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray68);
        float[] floatArray73 = new float[] { (-1.0f), 100.0f };
        float[] floatArray76 = new float[] { (-1L), (byte) 10 };
        float[] floatArray80 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray76, floatArray80);
        float[] floatArray84 = new float[] { (short) 1, (-1L) };
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray80, floatArray84);
        float[] floatArray88 = new float[] { (-1L), (byte) 10 };
        float[] floatArray92 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray88, floatArray92);
        float[] floatArray94 = null;
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equals(floatArray88, floatArray94);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(floatArray80, floatArray88);
        boolean boolean97 = org.apache.commons.math3.util.MathArrays.equals(floatArray73, floatArray88);
        boolean boolean98 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray68, floatArray88);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray60);
        double double64 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray19, doubleArray41);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray19);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray85);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray85);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray85, (int) (short) 0);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray65, doubleArray85);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray85, (-1.552472386491933E14d));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.1889585038118475E15, 5.284260016941545E14, 2.583416008282533E15, -5.871400018823938E14, -1.4678500047059845E15]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[4.6574171594757994E14, -1.0349815909946222E14, -5.1749079549731106E14]");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray40);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray40);
        double[] doubleArray47 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray43, doubleArray47);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.scale(100.0d, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.scale(2068.0d, doubleArray49);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray69);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(doubleArray58, doubleArray69);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray69);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray69, (double) (byte) 1);
        double double75 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray74);
        double[][] doubleArray76 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray74, doubleArray76);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray50, doubleArray76);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(5.797623827217472E49d, doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10000.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 1.1989486074685733E55, 1.1989486074685733E57]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.533823502911814d + "'", double75 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray8 = null;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray8);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray20 = new float[] { (short) 1, (-1L) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray16);
        float[] floatArray25 = new float[] { (-1L), (byte) 10 };
        float[] floatArray29 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray25);
        float[] floatArray34 = new float[] { (-1L), (byte) 10 };
        float[] floatArray38 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean39 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray34, floatArray38);
        float[] floatArray42 = new float[] { (short) 1, (-1L) };
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray38, floatArray42);
        float[] floatArray46 = new float[] { (-1L), (byte) 10 };
        float[] floatArray50 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray46, floatArray50);
        float[] floatArray54 = new float[] { (short) 1, (-1L) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray42, floatArray54);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray25, floatArray42);
        float[] floatArray60 = new float[] { (-1L), (byte) 10 };
        float[] floatArray64 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray60, floatArray64);
        float[] floatArray68 = new float[] { (short) 1, (-1L) };
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray64, floatArray68);
        float[] floatArray72 = new float[] { (-1L), (byte) 10 };
        float[] floatArray76 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray72, floatArray76);
        float[] floatArray80 = new float[] { (short) 1, (-1L) };
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray76, floatArray80);
        float[] floatArray84 = new float[] { (-1L), (byte) 10 };
        float[] floatArray88 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray84, floatArray88);
        float[] floatArray92 = new float[] { (short) 1, (-1L) };
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray88, floatArray92);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(floatArray80, floatArray92);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equals(floatArray64, floatArray92);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(floatArray25, floatArray92);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int int14 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray12);
        int[] intArray16 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 0);
        int[] intArray17 = new int[] {};
        int[] intArray22 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray22);
        int[] intArray24 = new int[] {};
        int[] intArray29 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int30 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray29);
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 1);
        int[] intArray33 = new int[] {};
        int[] intArray38 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray33, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) (short) 1);
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray32, intArray41);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        double double50 = org.apache.commons.math3.util.MathArrays.distance(intArray41, intArray48);
        double double51 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray41);
        int[] intArray53 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 0);
        int int54 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray53);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, (int) (short) 0);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        float[] floatArray2 = new float[] { (-1.0f), 100.0f };
        float[] floatArray5 = new float[] { (-1L), (byte) 10 };
        float[] floatArray9 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean10 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray5, floatArray9);
        float[] floatArray13 = new float[] { (short) 1, (-1L) };
        boolean boolean14 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray9, floatArray13);
        float[] floatArray17 = new float[] { (-1L), (byte) 10 };
        float[] floatArray21 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray17, floatArray21);
        float[] floatArray23 = null;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray17, floatArray23);
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equals(floatArray9, floatArray17);
        boolean boolean26 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray17);
        float[] floatArray29 = new float[] { (-1L), (byte) 10 };
        float[] floatArray33 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray37 = new float[] { (short) 1, (-1L) };
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray33, floatArray37);
        float[] floatArray41 = new float[] { (-1.0f), 100.0f };
        float[] floatArray44 = new float[] { (-1L), (byte) 10 };
        float[] floatArray48 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray44, floatArray48);
        float[] floatArray52 = new float[] { (short) 1, (-1L) };
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray48, floatArray52);
        float[] floatArray56 = new float[] { (-1L), (byte) 10 };
        float[] floatArray60 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray56, floatArray60);
        float[] floatArray62 = null;
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(floatArray56, floatArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(floatArray48, floatArray56);
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray56);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(floatArray37, floatArray56);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray37);
        float[] floatArray70 = new float[] { (-1.0f), 100.0f };
        float[] floatArray73 = new float[] { (-1L), (byte) 10 };
        float[] floatArray77 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray73, floatArray77);
        float[] floatArray81 = new float[] { (short) 1, (-1L) };
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray77, floatArray81);
        float[] floatArray85 = new float[] { (-1L), (byte) 10 };
        float[] floatArray89 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray85, floatArray89);
        float[] floatArray91 = null;
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(floatArray85, floatArray91);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(floatArray77, floatArray85);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(floatArray70, floatArray85);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray85);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.629021819880944E76d), (-2.9577525952602123E220d), 1.5183756289549949E7d, 0.0d, (-6.093238970881044E45d), (-1.9616871307844774E82d), 1.855513131712105E114d, 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.818243515488376E296d + "'", double8 == 4.818243515488376E296d);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(2068.0d, (-5.677242965111985E65d), 3.295116804952141E29d, (-1101.0d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.1740538451851585E69d) + "'", double4 == (-1.1740538451851585E69d));
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        double double60 = org.apache.commons.math3.util.MathArrays.distance(intArray8, intArray38);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray62 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1]");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray61);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray64);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, (int) 'a');
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray81 = new double[] { 1, 1, 10 };
        double[] doubleArray85 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray85);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray75, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray19, doubleArray86);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray19, 2.303752319195026E28d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -200 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-810000.0, -40000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-6.911256957585079E28, 1.5358348794633508E28, 7.679174397316754E28]");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(1.4678500047059846E9d, 439.780879782446d, (-1.9026475961075138E99d), (-2.09703636636056E201d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 3.9899212014059554E300d + "'", double4 == 3.9899212014059554E300d);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray26);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray45 = new float[] { (short) 1, (-1L) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray55 = null;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray55);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray49);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray49);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray26);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray70 = new float[] { (short) 1, (-1L) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (-1L), (byte) 10 };
        float[] floatArray78 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray74, floatArray78);
        float[] floatArray80 = null;
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray74, floatArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray74);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray66);
        float[] floatArray86 = new float[] { (-1L), (byte) 10 };
        float[] floatArray90 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray86, floatArray90);
        float[] floatArray92 = null;
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(floatArray86, floatArray92);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray92);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39);
        double double46 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray29, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray50);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray29, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray29);
        double[] doubleArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray29, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 990.0d + "'", double46 == 990.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, 100);
        double double26 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray19);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection43 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray42, orderDirection43, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection46 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray42, orderDirection46, false);
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection46, true);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray19, orderDirection46, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1360.1470508735442d + "'", double26 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + orderDirection43 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection43.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + orderDirection46 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection46.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(doubleArray57, doubleArray68);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray68);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray68);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray4, doubleArray68);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray4, 48013.29967155091d);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.scale(144652.08102413287d, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (578,768,642.86 >= 578,768,642.86)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 820404.8465375019d + "'", double75 == 820404.8465375019d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[4001.1083059625757, 4001.1083059625757, 40011.08305962576]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[5.787686428604295E8, 5.787686428604295E8, 5.787686428604296E9]");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray10, doubleArray72);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, 1.5183756289549949E7d);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale(1346.545580364809d, doubleArray80);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray81, (-2.666466636913762E8d));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-4.555126886864985E7, 1.01225041930333E7, 5.0612520965166494E7]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-6.133685977508956E10, 1.3630413283353237E10, 6.815206641676618E10]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[7.999399910741286E8, -1.7776444246091747E8, -8.888222123045874E8]");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray56);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray39, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray78);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray67, doubleArray78);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray58, doubleArray78);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray20, doubleArray78);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) 10, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.8199200171623512E264d), doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.637928015446116E268, -3.639840034324702E267, -1.8199200171623513E268]");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 1);
        int[] intArray24 = new int[] {};
        int[] intArray29 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int30 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray29);
        int[] intArray31 = new int[] {};
        int[] intArray36 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray24, intArray36);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math3.util.MathArrays.distance(intArray21, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-5.818854497478488E40d), 4.4034347793448465E75d, (-101.0d), 6.005222408113379E108d, 1.9964918550255632E12d, Double.NaN);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.624927640909409E28d, 1.2921065983350832E7d, 4.403214624117384E71d, 616666.6666666666d, (-1.8381134056869864E7d), (double) (byte) 10);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.7153156848723866E77d + "'", double6 == 2.7153156848723866E77d);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, 100);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray26);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection39 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray38, orderDirection39, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection42 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray38, orderDirection42, false);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray31, orderDirection42, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection47 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray31, orderDirection47, false);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection53 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray52, orderDirection53, false);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray31, orderDirection53, false);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "", "hi!", "" };
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection70 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray69, orderDirection70, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection73 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray69, orderDirection73, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection76 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray69, orderDirection76, false);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray62, orderDirection76, true);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray31, orderDirection76, false);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray26, orderDirection76, true);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + orderDirection39 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection39.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + orderDirection42 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection42.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + orderDirection47 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection47.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + orderDirection53 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection53.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + orderDirection70 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection70.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + orderDirection73 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection73.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + orderDirection76 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection76.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (double) 100L);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray9);
        java.lang.Class<?> wildcardClass36 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        long[] longArray2 = new long[] { ' ', ' ' };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray2);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[32, 32]");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, 100);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1]");
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray41 = new int[] {};
        int[] intArray46 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int47 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray46);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 1);
        int[] intArray50 = new int[] {};
        int[] intArray55 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, (int) (short) 1);
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray58);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, 100);
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray63);
        int[] intArray65 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray66);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray81 = new double[] { 1, 1, 10 };
        double[] doubleArray85 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray85);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray85);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray68, doubleArray87);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection89 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray68, orderDirection89, true);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray44, orderDirection89, false, false);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray44);
        double double96 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray38, doubleArray44);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.0d), doubleArray44);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (-1 >= -1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection89 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection89.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 12.0d + "'", double96 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-1.0, -1.0, -10.0]");
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39, (int) (byte) 100);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.scale(8281.594049456904d, doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray65);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray67, doubleArray86);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection88 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray67, orderDirection88, true);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray43, orderDirection88, false, false);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray43);
        double double95 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray37, doubleArray43);
        double double96 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection88 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection88.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 12.0d + "'", double95 == 12.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.099504938362077d + "'", double96 == 10.099504938362077d);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(1427.5857242211412d, 2.158964713104729E10d, 2.303752319195026E28d, 5.797623827217472E49d, 2.932987825279887E73d, 4.0273832394686912E16d, (-2.9577525952602123E220d), (-3.7955073631846215E161d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + Double.POSITIVE_INFINITY + "'", double8 == Double.POSITIVE_INFINITY);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray6);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray6);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray32, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray71);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray51, doubleArray71);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray71, 0);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray80);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray71, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray86);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.scale(1366.9312345542478d, doubleArray89);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-218665.0d), doubleArray89);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89, 98);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray89, (-2.639260241354281E13d));
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1967985.0, -1967985.0, -1.967985E7]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[12302.38111098823, 12302.38111098823, 123023.8111098823]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[9.0, 9.0, 90.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1967985.0, -1967985.0, -1.967985E7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-2.199383534461901E12, -2.199383534461901E12, -2.1993835344619008E13]");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double double38 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray55);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray74);
        double double89 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray57, doubleArray66);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray37, doubleArray57);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray37);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.scale(3.041454381069284E101d, doubleArray37);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 6181.097447311743d + "'", double38 == 6181.097447311743d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 21.0d + "'", double89 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.2439517704340683E105, 2.7643372676312634E104, 1.3821686338156314E105]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.2114525348282043E21d), (double) (byte) -1, 7.021059879986961E21d, 47618.74825108279d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 3.343352943334115E26d + "'", double4 == 3.343352943334115E26d);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray36);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, (double) 100L);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray28);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray28);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray8, (double) 10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.6671655955999066E55d), doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.6671655955999067E56, 1.6671655955999066E55, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[11.11111111111111, -1.1111111111111112, 0.0]");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (double) (byte) 1);
        double double24 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray23);
        double[][] doubleArray25 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray23, doubleArray25);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray23, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.533823502911814d + "'", double24 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-3.0]");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray8, (int) (byte) 100);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray12, 1.1155051E7d);
        double[] doubleArray18 = new double[] { 1, 1, 10 };
        double[] doubleArray22 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray22);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray31);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray73);
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray73);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray62);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray31, doubleArray62);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray62, 144652.08102413287d);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray12, doubleArray62);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray12);
        double double82 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.2394501111111112E7, -1239450.111111111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.04987562112089d + "'", double82 == 10.04987562112089d);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray19, (double) (byte) 1);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-3.5588299084474494E14d), doubleArray24);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray52);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray71);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray54, doubleArray73);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection75 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray54, orderDirection75, true);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30, orderDirection75, false, false);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray30);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray81, (-1.9875501E7d));
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray24, doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0676489725342348E15, -2.3725532722982994E14, -1.1862766361491498E15]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection75 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection75.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1656291.75, -1656291.75, -1.65629175E7]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        double[] doubleArray1 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray51);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray40);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray32, (double) 100L);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray32);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray74);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray66, (double) 100L);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray66);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray91);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray32, 100.00499987500625d);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.scaleInPlace(1.5183756289549949E7d, doubleArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-300.01499962501873, 66.66999991667083, 333.3499995833542]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray29);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, (-19.0d));
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "hi!", "" };
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection53 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray52, orderDirection53, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection56 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray52, orderDirection56, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray52, orderDirection59, false);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray45, orderDirection59, true);
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection59, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[57.0, -12.666666666666666, -63.333333333333336]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + orderDirection53 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection53.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + orderDirection56 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection56.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (double) 100L);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray69);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray52, doubleArray71);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray91);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(doubleArray80, doubleArray91);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray71, doubleArray91);
        double double95 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray9, doubleArray91);
        double double96 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray91);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale((-2.8469134568462802E23d), doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 990.0d + "'", double95 == 990.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1360.1470508735442d + "'", double96 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[2.562222111161652E26, -5.69382691369256E25, -2.84691345684628E26]");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray26);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray43 = null;
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(floatArray37, floatArray43);
        float[] floatArray47 = new float[] { (-1L), (byte) 10 };
        float[] floatArray51 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray47, floatArray51);
        float[] floatArray55 = new float[] { (short) 1, (-1L) };
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray51, floatArray55);
        float[] floatArray59 = new float[] { (-1L), (byte) 10 };
        float[] floatArray63 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray59, floatArray63);
        float[] floatArray65 = null;
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(floatArray59, floatArray65);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(floatArray51, floatArray59);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equals(floatArray37, floatArray51);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray37);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray18);
        float[] floatArray71 = null;
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray71);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(2.2267871488170685E30d, 6.095966089161461E33d, (-2.639260241354281E12d), (-2.6653694205680016E13d), (double) 100, 18500.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.3574418946969384E64d + "'", double6 == 1.3574418946969384E64d);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double double64 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray49);
        double double65 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray10, doubleArray49);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.5183866289549949E7d), doubleArray10);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.scale((-1.8381134056869864E7d), doubleArray10);
        double double69 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.3665479660594955E8, -3.0367732579099897E7, -1.518386628954995E8]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.04987562112089d + "'", double64 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-92.0d) + "'", double65 == (-92.0d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-2.5118701359282435E15, 5.581933635396096E14, 2.7909668176980485E15]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.065229095458959E8d + "'", double69 == 2.065229095458959E8d);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray29);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, (double) 100L);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray41);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection74 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray73, orderDirection74, false);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray41, orderDirection74, false);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray10, orderDirection74, false, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + orderDirection74 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection74.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        long[] longArray1 = new long[] { 0L };
        long[] longArray3 = new long[] { 0L };
        long[][] longArray4 = new long[][] { longArray1, longArray3 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray4);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray4);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray4);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray4);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[0]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[0]");
        org.junit.Assert.assertNotNull(longArray4);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-3.5588299084474494E14d), 1.5183756289549949E7d, 2.7419027119598262E66d, (-1.211513105940706E25d), (-7.334452594734339E251d), (-2.1014830991446272E112d), (double) 98, 22457.292802116644d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + Double.POSITIVE_INFINITY + "'", double8 == Double.POSITIVE_INFINITY);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray45 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.scale(100.0d, doubleArray45);
        double double48 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray45);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray45);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray54);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray54);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(doubleArray69, doubleArray80);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray80, (double) (byte) 1);
        double double86 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray85);
        double[][] doubleArray87 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray85, doubleArray87);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray61, doubleArray87);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray49, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray49);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10000.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.00499987500625d + "'", double48 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.533823502911814d + "'", double86 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray19, (double) (byte) 1);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray43, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray77 = new double[] { 1, 1, 10 };
        double[] doubleArray81 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray81);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray82);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equals(doubleArray71, doubleArray82);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray62, doubleArray82);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray82, 0);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray82);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.scale(3.780478449848133E29d, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-3.402430604863319E32, 7.560956899696265E31, 3.7804784498481325E32]");
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 10);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20, 0);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray23);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray44 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray40, doubleArray44);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray40, 2.7419027119598262E66d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-8.574334941180213E66, 1.893891563931014E66, 9.422346089209025E66]");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray36);
        double double51 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray19, doubleArray28);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray68);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray70, (int) ' ');
        double double73 = org.apache.commons.math3.util.MathArrays.distance(doubleArray19, doubleArray70);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray70, 0);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.scale(2.4215696632833603E43d, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.1155051E7d, 9.207239720523508E39d, 10.04987562112089d, 6.007479009360047E158d, (-3.2747201720949453E59d), 2.2267871488170685E30d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 6.037441684056301E159d + "'", double6 == 6.037441684056301E159d);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray18);
        double double21 = org.apache.commons.math3.util.MathArrays.distance(doubleArray3, doubleArray20);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, (int) (short) 100);
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray23, doubleArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 14.866068747318506d + "'", double21 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray0, doubleArray68);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) 'a');
        double double72 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray68);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) (byte) 100);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 22457.292802116644d + "'", double72 == 22457.292802116644d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray4);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray38);
        boolean boolean40 = org.apache.commons.math3.util.MathArrays.equals(doubleArray27, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray27);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double double63 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray27, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray49, 100.0d);
        double double66 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray4, doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 122.22222222222223d + "'", double66 == 122.22222222222223d);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (byte) 0);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int[] intArray69 = new int[] {};
        int[] intArray74 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int75 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray69, intArray74);
        int[] intArray77 = org.apache.commons.math3.util.MathArrays.copyOf(intArray74, (int) (short) 1);
        int int78 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray77);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray68);
        int[] intArray80 = new int[] {};
        int[] intArray85 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int86 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray80, intArray85);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (short) 10);
        int int89 = org.apache.commons.math3.util.MathArrays.distance1(intArray68, intArray85);
        int[] intArray91 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (byte) 0);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) '#');
        int[] intArray95 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, 235);
        int int96 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray59, intArray85);
        int[] intArray98 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.6802909425127984E151d), 3.295116804952141E29d, (-3.48967922381901E15d), 111.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-5.536754921882794E180d) + "'", double4 == (-5.536754921882794E180d));
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray35, 2111.0d);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double[] doubleArray49 = null;
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray47, doubleArray49);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray37, doubleArray47);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray59);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.scale(111.0d, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.552472386491933E14d), doubleArray66);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray66);
        double double69 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray66);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.scale(7.22460913395122E72d, doubleArray66);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(doubleArray37, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1105.7619047619048, -0.0, 1005.2380952380952]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1106.7619047619048, 1.0, 1015.2380952380952]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, 100.0d);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray71);
        double[] doubleArray77 = new double[] { 1, 1, 10 };
        double[] doubleArray81 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray81);
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray81, doubleArray90);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray73, doubleArray92);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray54, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (111.111 >= -11.111)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[111.11111111111111, -11.11111111111111, 0.0]");
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, 100.0d);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray54, 111.0d);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, (-5.963592403540382E49d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[123.33333333333334, -12.333333333333332, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-6.626213781711536E49, 6.626213781711534E48, -0.0]");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray12);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.554111747075503E77d), doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-4.405001394015854E92, -4.405001394015854E92, -4.405001394015853E93]");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray61);
        double double65 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray20, doubleArray42);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.scale((-3.2949139463354136E89d), doubleArray20);
        double[] doubleArray74 = new double[] { 1, 1, 10 };
        double[] doubleArray78 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray78);
        double[] doubleArray84 = new double[] { 1, 1, 10 };
        double[] doubleArray88 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray84, doubleArray88);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray89);
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equals(doubleArray78, doubleArray89);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray89);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray89);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.scale((double) 1.0f, doubleArray89);
        double double95 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray68, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[4.033410738291202E93, -8.963134973980449E92, -4.481567486990224E93]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4.481567486990224E93d + "'", double95 == 4.481567486990224E93d);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        double double46 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray44);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, (int) (short) 1);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int int57 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, (int) (byte) 1);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, 0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray35);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray27, (double) 100L);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray27);
        double double54 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray27);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray77 = new double[] { 1, 1, 10 };
        double[] doubleArray81 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray81);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray82);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equals(doubleArray71, doubleArray82);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray71);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray85, (int) '4');
        double double88 = org.apache.commons.math3.util.MathArrays.distance(doubleArray27, doubleArray85);
        double[][] doubleArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray85, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 13.601470508735444d + "'", double54 == 13.601470508735444d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 10.04987562112089d + "'", double88 == 10.04987562112089d);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, (double) 100L);
        double double66 = org.apache.commons.math3.util.MathArrays.distance(doubleArray10, doubleArray65);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.scale(1.2423244926866538E15d, doubleArray65);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.scale(1000.0499987500625d, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleArray68.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 439.780879782446d + "'", double66 == 439.780879782446d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-3.726973478059961E17, 8.2821632845776928E16, 4.1410816422888454E17]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-3.7271598220753804E20, 8.282577382389735E19, 4.1412886911948666E20]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray10 = org.apache.commons.math3.util.MathArrays.copyOf(intArray9);
        int[] intArray11 = org.apache.commons.math3.util.MathArrays.copyOf(intArray9);
        int[] intArray12 = new int[] {};
        int[] intArray17 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray12, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (short) 1);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int int30 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray29);
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20, (int) (short) 100);
        int[] intArray33 = new int[] {};
        int[] intArray38 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray33, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) (short) 1);
        int[] intArray48 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int49 = org.apache.commons.math3.util.MathArrays.distance1(intArray41, intArray48);
        int int50 = org.apache.commons.math3.util.MathArrays.distance1(intArray20, intArray48);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray11, intArray52);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 98 + "'", int49 == 98);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 98 + "'", int50 == 98);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 98 + "'", int53 == 98);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray47);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        double double61 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray47, doubleArray59);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection69 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray68, orderDirection69, false);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47, orderDirection69, true, false);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47, (int) (short) 10);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray28, doubleArray76);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray76, 100);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection80 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray79, orderDirection80, false, false);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2111.0d + "'", double61 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + orderDirection69 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection69.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection80 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection80.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int int14 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray12);
        int[] intArray16 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 0);
        int[] intArray17 = new int[] {};
        int[] intArray22 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray22);
        int[] intArray24 = new int[] {};
        int[] intArray29 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int30 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray29);
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 1);
        int[] intArray33 = new int[] {};
        int[] intArray38 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray33, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) (short) 1);
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray32, intArray41);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        double double50 = org.apache.commons.math3.util.MathArrays.distance(intArray41, intArray48);
        double double51 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray41);
        int[] intArray53 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 0);
        int int54 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray53);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray53);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray53);
        int[] intArray57 = new int[] {};
        int[] intArray62 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int63 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray62);
        int[] intArray65 = org.apache.commons.math3.util.MathArrays.copyOf(intArray62, (int) (short) 1);
        int[] intArray66 = new int[] {};
        int[] intArray71 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int72 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray66, intArray71);
        int[] intArray74 = org.apache.commons.math3.util.MathArrays.copyOf(intArray71, (int) (short) 1);
        int int75 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray65, intArray74);
        int[] intArray77 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, 0);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78, (int) (byte) 10);
        int int82 = org.apache.commons.math3.util.MathArrays.distance1(intArray53, intArray78);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1]");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray6);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray21);
        double double24 = org.apache.commons.math3.util.MathArrays.distance(doubleArray6, doubleArray23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray6);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(3.655405393522434E85d, doubleArray25);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray46);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray46, (double) (byte) 1);
        double double52 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray51);
        double[][] doubleArray53 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray51, doubleArray53);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray27, doubleArray53);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 14.866068747318506d + "'", double24 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-8.513206090139363E136, -8.513206090139362E135, -8.513206090139362E135]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.533823502911814d + "'", double52 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray27 = new int[] {};
        int[] intArray32 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray32);
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray32, (int) (short) 1);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41, (int) (short) 1);
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray35, intArray44);
        int[] intArray46 = new int[] {};
        int[] intArray51 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray51);
        double double53 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray44);
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray19, intArray44);
        int[] intArray56 = new int[] {};
        int[] intArray61 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int62 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray56, intArray61);
        int[] intArray64 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61, (int) (short) 1);
        int[] intArray65 = new int[] {};
        int[] intArray70 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int71 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray65, intArray70);
        int[] intArray73 = org.apache.commons.math3.util.MathArrays.copyOf(intArray70, (int) (short) 1);
        int int74 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray64, intArray73);
        int[] intArray76 = org.apache.commons.math3.util.MathArrays.copyOf(intArray64, 0);
        int[] intArray77 = new int[] {};
        int[] intArray82 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int83 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray77, intArray82);
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray82, (int) (short) 1);
        int int86 = org.apache.commons.math3.util.MathArrays.distance1(intArray76, intArray85);
        int[] intArray87 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85);
        int[] intArray89 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) '#');
        double double90 = org.apache.commons.math3.util.MathArrays.distance(intArray44, intArray85);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray21 = new double[] { 1, 1, 10 };
        double[] doubleArray25 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray25);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray36);
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray25);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray67);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray56, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray56);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray25, doubleArray56);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, 144652.08102413287d);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, (double) 10L);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray3, doubleArray75);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3, (int) (byte) 1);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray78, (-5.718703196015772E45d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[11.11111111111111, -1.1111111111111112, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-5.718703196015772E45]");
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray30);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, 1363.329967155091d);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray30);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.scale(Double.NaN, doubleArray39);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.5183756289549949E7d, doubleArray51);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray51);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray51);
        double double56 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1360.1470508735442d + "'", double36 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.3665380660594955E8, 3.0367512579099897E7, 1.518375628954995E8]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.0652141338413996E8d + "'", double56 == 2.0652141338413996E8d);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double double39 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int int30 = org.apache.commons.math3.util.MathArrays.distance1(intArray20, intArray29);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29);
        int[] intArray33 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) '#');
        int[] intArray34 = new int[] {};
        int[] intArray39 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int40 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray34, intArray39);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39, (int) (short) 1);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 1);
        int int52 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray42, intArray51);
        int[] intArray53 = new int[] {};
        int[] intArray58 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray53, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58, (int) (short) 1);
        int[] intArray62 = new int[] {};
        int[] intArray67 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int68 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray62, intArray67);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray67, (int) (short) 1);
        int int71 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray70);
        int int72 = org.apache.commons.math3.util.MathArrays.distance1(intArray51, intArray70);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        double double80 = org.apache.commons.math3.util.MathArrays.distance(intArray51, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(intArray29, intArray81);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1]");
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.666466636913762E8d), (-3.2346729696531273E35d), 8.5815885820656E40d, 1.053651506470873E228d, (-5.9777683343670226E57d), 7.046471115983133E63d, (-1.92580055599819E69d), (double) (byte) 1);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 9.042003737406663E268d + "'", double8 == 9.042003737406663E268d);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(1.3574418946969384E64d, (-2.0559464345526106E59d), 1.1967289080630932E79d, 10000.499987500625d, (-2.598166562713278E28d), (-1.0211499806773423E230d), 1.1579293173848756E32d, (-5.055478783810143E21d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.6531177353111807E258d + "'", double8 == 2.6531177353111807E258d);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(101.0d, 0.0d, (-3.776153116812779E191d), (-3.159027218120044E20d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.1928970475800407E212d + "'", double4 == 1.1928970475800407E212d);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.scale(1366.9312345542478d, doubleArray30);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray45);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47, (int) (byte) 0);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equals(doubleArray66, doubleArray77);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray66);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, (double) 100L);
        double[][] doubleArray83 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray82, doubleArray83);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray49, doubleArray83);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray30, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray0, doubleArray83);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1230238.111098823, 273386.2469108496, 1366931.2345542477]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray60);
        double double64 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray19, doubleArray41);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray65);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray65, 100.99504938362078d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-302.9851481508624, 67.33003292241386, 336.6501646120693]");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray68);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(doubleArray57, doubleArray68);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray48, doubleArray68);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray68);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray4, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.489257074440011E106d, doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.489257074440011E106, 1.489257074440011E106, 1.4892570744400112E107]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 820404.8465375019d + "'", double75 == 820404.8465375019d);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray30);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, 1363.329967155091d);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray30);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.scale(Double.NaN, doubleArray39);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!", "" };
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection62 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray61, orderDirection62, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection65 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray61, orderDirection65, false);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray49, orderDirection65, true);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray45, orderDirection65, false);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray40, orderDirection65, true);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1360.1470508735442d + "'", double36 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + orderDirection62 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection62.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + orderDirection65 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection65.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray26);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray45 = new float[] { (short) 1, (-1L) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray55 = null;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray55);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray49);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray49);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray26);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray70 = new float[] { (short) 1, (-1L) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (-1L), (byte) 10 };
        float[] floatArray78 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray74, floatArray78);
        float[] floatArray80 = null;
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray74, floatArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray74);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray66);
        float[] floatArray86 = new float[] { (-1L), (byte) 10 };
        float[] floatArray90 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray86, floatArray90);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray86);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray49);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(doubleArray61, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        double[] doubleArray87 = new double[] { 1, 1, 10 };
        double[] doubleArray91 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray87, doubleArray91);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray91);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray91);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray49, doubleArray94);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray94);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray16, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray7, doubleArray98);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 3 != 0");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[]");
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) ' ');
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 100);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 98);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-183792.33961872238d), 10.04987562112089d, (-1.2459825039216539E7d), (-6.102516281252789E142d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.60362851633801E149d + "'", double4 == 7.60362851633801E149d);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray39);
        double double54 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray19, doubleArray53);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray53, (int) (short) 10);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray60);
        double double67 = org.apache.commons.math3.util.MathArrays.distance(doubleArray53, doubleArray60);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection71 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray70, orderDirection71, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection74 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray70, orderDirection74, true);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray53, orderDirection74, false);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2165.0d, doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-41135.0, 6495.0, 21650.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2068.0d + "'", double54 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 20.09975124224178d + "'", double67 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + orderDirection71 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection71.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + orderDirection74 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection74.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray15 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int16 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray15);
        int[] intArray18 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = intArray18.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 98 + "'", int16 == 98);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 1, 52, 1, 32, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        int[] intArray0 = null;
        int[] intArray1 = new int[] {};
        int[] intArray6 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int7 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray1, intArray6);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray6, (int) (short) 1);
        int[] intArray10 = new int[] {};
        int[] intArray15 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int16 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray10, intArray15);
        int[] intArray18 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15, (int) (short) 1);
        int int19 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray18);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        double double27 = org.apache.commons.math3.util.MathArrays.distance(intArray18, intArray25);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25);
        int[] intArray30 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28, (int) '#');
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray30, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.4333688923589076E146d), (-4.149720547934001E12d), 1.2934286765988043E100d, 100.0d, 1.2423244926866538E15d, (-5.9777683343670226E57d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.009780089332516E159d + "'", double6 == 1.009780089332516E159d);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray10, floatArray22);
        float[] floatArray27 = new float[] { (-1L), (byte) 10 };
        float[] floatArray31 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray27, floatArray31);
        float[] floatArray33 = null;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray27, floatArray33);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray45 = new float[] { (short) 1, (-1L) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray55 = null;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray55);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray49);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray27, floatArray41);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray10, floatArray41);
        float[] floatArray62 = new float[] { (-1.0f), 100.0f };
        float[] floatArray65 = new float[] { (-1L), (byte) 10 };
        float[] floatArray69 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray65, floatArray69);
        float[] floatArray73 = new float[] { (short) 1, (-1L) };
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray69, floatArray73);
        float[] floatArray77 = new float[] { (-1L), (byte) 10 };
        float[] floatArray81 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray77, floatArray81);
        float[] floatArray83 = null;
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equals(floatArray77, floatArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(floatArray69, floatArray77);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(floatArray62, floatArray77);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray62);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray29);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, (-19.0d));
        java.lang.Class<?> wildcardClass41 = doubleArray29.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[57.0, -12.666666666666666, -63.333333333333336]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (double) 100L);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray9);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray42);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray42);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray42);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray42);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray65);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(doubleArray54, doubleArray65);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray84);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray42, doubleArray87);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray9);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(2.8772624126635964E38d, doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1000.0, -100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[2.8772624126635963E41, -2.8772624126635964E40, 0.0]");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 100);
        double double42 = org.apache.commons.math3.util.MathArrays.distance(intArray8, intArray29);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 1);
        int[] intArray52 = new int[] {};
        int[] intArray57 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray52, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 1);
        int int61 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray51, intArray60);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray51, (int) (short) 100);
        int[] intArray64 = new int[] {};
        int[] intArray69 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray64, intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (int) (short) 1);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78, (int) (short) 1);
        int int82 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray72, intArray81);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (short) 100);
        double double85 = org.apache.commons.math3.util.MathArrays.distance(intArray51, intArray72);
        int int86 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray51);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (byte) 100);
        int[] intArray90 = org.apache.commons.math3.util.MathArrays.copyOf(intArray88, (int) (byte) 10);
        int[] intArray92 = org.apache.commons.math3.util.MathArrays.copyOf(intArray90, 98);
        int[] intArray93 = org.apache.commons.math3.util.MathArrays.copyOf(intArray90);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray32);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray52);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray52);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray52);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray72);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray64, (double) 100L);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray64);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray32, doubleArray64);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray64);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64, 0);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -3,600 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray41);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray83);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray41, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.scale((-2.613107296291178E10d), doubleArray86);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray89, 439.780879782446d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -1,375.26 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[2.3779276396249723E13, -5.252345665545268E12, -2.613107296291178E13]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1375.2597958832505, 303.76617469509154, 1511.2745009706048]");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, 100);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(212170.0d, doubleArray20);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray27, (-1.2109722143828504E25d));
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection40 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray39, orderDirection40, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection43 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray39, orderDirection43, false);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray32, orderDirection43, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection48 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray32, orderDirection48, false);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray29, orderDirection48, true, false);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.90953E8, -4.2434E7, -2.1217E8]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[3.6329166431485512E25, -8.073148095885669E24, -4.036574047942835E25]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + orderDirection40 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection40.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + orderDirection43 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection43.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + orderDirection48 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection48.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        long[] longArray0 = new long[] {};
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        long[][] longArray3 = new long[][] { longArray0, longArray1, longArray2 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int[] intArray48 = new int[] {};
        int[] intArray53 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int54 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray53);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray53, (int) (short) 1);
        int int57 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, 0);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int int67 = org.apache.commons.math3.util.MathArrays.distance1(intArray47, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47);
        int int69 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray47);
        int[] intArray71 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, 100);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        double double32 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray30);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection33, true);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray30);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, 1363.329967155091d);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.scale((double) 100, doubleArray30);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.scale(Double.NaN, doubleArray39);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.5183756289549949E7d, doubleArray51);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -136,653,806.606 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2111.0d + "'", double32 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1360.1470508735442d + "'", double36 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-90000.0, 20000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.3665380660594955E8, 3.0367512579099897E7, 1.518375628954995E8]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (double) (byte) 1);
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray23, doubleArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray0, 7.60362851633801E149d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray21);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, 100);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray46);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray77, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray77);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray46, doubleArray77);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray28, doubleArray77);
        java.lang.Class<?> wildcardClass94 = doubleArray28.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray29);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, (double) 100L);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray41);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray9, doubleArray41);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray9, doubleArray71);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, 1.5183756289549949E7d);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-4.555126886864985E7, 1.01225041930333E7, 5.0612520965166494E7]");
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, 100);
        double double26 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray19);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, (int) (byte) 100);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, 1.855513131712105E113d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -556,653,939,513,631,500,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1360.1470508735442d + "'", double26 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-5.566539395136315E113, 1.2370087544747366E113, 6.185043772373683E113, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 1);
        int[] intArray23 = new int[] {};
        int[] intArray28 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int29 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray23, intArray28);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28, (int) (short) 1);
        int[] intArray32 = new int[] {};
        int[] intArray37 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int38 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray32, intArray37);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37, (int) (short) 1);
        int int41 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray40);
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31, 0);
        int[] intArray44 = new int[] {};
        int[] intArray49 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int50 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray44, intArray49);
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray49, (int) (short) 1);
        int int53 = org.apache.commons.math3.util.MathArrays.distance1(intArray43, intArray52);
        int[] intArray54 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, (int) '#');
        double double57 = org.apache.commons.math3.util.MathArrays.distance(intArray22, intArray56);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int int14 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray12);
        int[] intArray16 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 0);
        int[] intArray17 = new int[] {};
        int[] intArray22 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray22);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22, (int) (short) 1);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        int[] intArray34 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31, (int) (short) 1);
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray25, intArray34);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, 0);
        int[] intArray38 = new int[] {};
        int[] intArray43 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int44 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray43);
        int[] intArray46 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43, (int) (short) 1);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, (int) (short) 1);
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 100);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        double double60 = org.apache.commons.math3.util.MathArrays.distance(intArray37, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double[] doubleArray79 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray75, doubleArray79);
        double double81 = org.apache.commons.math3.util.MathArrays.distance(doubleArray29, doubleArray79);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (byte) 10, doubleArray79);
        double double83 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray79, 98);
        double double86 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
        double[] doubleArray91 = new double[] { 1, 1, 10 };
        double[] doubleArray95 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray91, doubleArray95);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray95);
        double double98 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray79, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1000.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1427.5857242211412d + "'", double81 == 1427.5857242211412d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1000.0499987500625d + "'", double83 == 1000.0499987500625d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1000.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1000.0499987500625d + "'", double86 == 1000.0499987500625d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1010.0d + "'", double98 == 1010.0d);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.92580055599819E69d), 1.2503081079148144E103d, 1.2459825039216539E7d, 1.3574418946969384E64d, 6.364464749353691E111d, (double) 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-2.4078440493913947E172d) + "'", double6 == (-2.4078440493913947E172d));
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray20);
        double double23 = org.apache.commons.math3.util.MathArrays.distance(doubleArray5, doubleArray22);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray5);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray24);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray34);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray65);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(doubleArray54, doubleArray65);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray54);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray46, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray46);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray36, doubleArray46);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(doubleArray24, doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 14.866068747318506d + "'", double23 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        double[] doubleArray0 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "" };
        double[] doubleArray10 = new double[] { 1, 1, 10 };
        double[] doubleArray14 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray19 = new double[] { 1, 1, 10 };
        double[] doubleArray23 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray23);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray35);
        double double37 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray23, doubleArray35);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection45 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray44, orderDirection45, false);
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray23, orderDirection45, true, false);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection45, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray0, orderDirection45, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2111.0d + "'", double37 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + orderDirection45 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection45.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray39);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray39);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray59);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        double double73 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray59, doubleArray71);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection74 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray71, orderDirection74, true);
        double double77 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray39, doubleArray71);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray82);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray39, doubleArray82);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection90 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray39, orderDirection90, false);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.scale(929377.4372207435d, doubleArray39);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(0.0d, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray93, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathArithmeticException; message: array sums to zero");
        } catch (org.apache.commons.math3.exception.MathArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2111.0d + "'", double73 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection74 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection74.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-9200.0d) + "'", double77 == (-9200.0d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection90 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection90.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, -0.0, 0.0]");
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.6653694205676815E15d), 1.0282061941137209E34d, (-5.718703196015772E45d), (-7.467661988726902E24d), 2111.0d, Double.NaN, 1.2423244926866538E15d, 2010.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, 0);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray39, intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        int[] intArray64 = new int[] {};
        int[] intArray69 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray64, intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (int) (short) 1);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78, (int) (short) 1);
        int int82 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray72, intArray81);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (short) 100);
        int int85 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray63, intArray84);
        int[] intArray87 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84, 100);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray16, doubleArray47);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, 144652.08102413287d);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray73);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75, (int) (byte) 0);
        double double78 = org.apache.commons.math3.util.MathArrays.distance(doubleArray47, doubleArray75);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (-79.0d));
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47, (int) (byte) 0);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 20.09975124224178d + "'", double78 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-87.77777777777777, 8.777777777777779, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        double[] doubleArray0 = null;
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray7);
        double[] doubleArray18 = new double[] { 1, 1, 10 };
        double[] doubleArray22 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray22);
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray22);
        double double25 = org.apache.commons.math3.util.MathArrays.distance(doubleArray7, doubleArray24);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray7);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray26);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.scale(3.655405393522434E85d, doubleArray26);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (double) (byte) 1);
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        double[][] doubleArray54 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray52, doubleArray54);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray28, doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray0, doubleArray54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 14.866068747318506d + "'", double25 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-8.513206090139363E136, -8.513206090139362E135, -8.513206090139362E135]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.533823502911814d + "'", double53 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray69);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray69);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray69);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray9, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((-2.6653694205680016E13d), doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray75, (-3.776153116812779E191d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathIllegalArgumentException; message: Array contains an infinite element, -? at index 2");
        } catch (org.apache.commons.math3.exception.MathIllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.9, -2.0, Infinity]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[2.3988324785112016E13, 5.330738841136003E13, -Infinity]");
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(doubleArray11, doubleArray22);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray22);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray22);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray22, 100);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-7.6769830141116774E18d), doubleArray28);
        double[] doubleArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray28, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.scaleInPlace((-3.020383302338395E119d), doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-6.90928471270051E21, 1.5353966028223354E21, 7.676983014111678E21, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray40 = new double[] { 1, 1, 10 };
        double[] doubleArray44 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray44);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray40);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray40);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray10, doubleArray40);
        double double50 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray10);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray10, (double) 0L);
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.04987562112089d + "'", double50 == 10.04987562112089d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.04987562112089d + "'", double53 == 10.04987562112089d);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(doubleArray61, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray61);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray53, (double) 100L);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray53);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray21, doubleArray53);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray53);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray80);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray10, doubleArray81);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray82, (double) (short) 0);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray82, 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-12241.323457861898, 2720.2941017470885, 136014.7050873544]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-12241.323457861898, 2720.2941017470885, 136014.7050873544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(7.746270471371837E7d, 2.8885398876251348E35d, (-4.0443212939554954E20d), 2.8885398876251348E35d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.1682183375959909E56d) + "'", double4 == (-1.1682183375959909E56d));
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray72);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray18, doubleArray86);
        java.lang.Class<?> wildcardClass88 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-919.0, 203.0, 1010.0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray38, doubleArray58);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray81);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray81, (double) (byte) 1);
        double double87 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.3838648976946252E105d), doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[4.1515946930838757E105, -9.225765984630834E104, -4.612882992315418E105]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4.533823502911814d + "'", double87 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1.0f), 100.0f };
        float[] floatArray17 = new float[] { (-1L), (byte) 10 };
        float[] floatArray21 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray17, floatArray21);
        float[] floatArray25 = new float[] { (short) 1, (-1L) };
        boolean boolean26 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray21, floatArray25);
        float[] floatArray29 = new float[] { (-1L), (byte) 10 };
        float[] floatArray33 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray35 = null;
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(floatArray29, floatArray35);
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equals(floatArray21, floatArray29);
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.equals(floatArray14, floatArray29);
        boolean boolean39 = org.apache.commons.math3.util.MathArrays.equals(floatArray10, floatArray29);
        float[] floatArray42 = new float[] { (-1L), (byte) 10 };
        float[] floatArray46 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray42, floatArray46);
        float[] floatArray50 = new float[] { (short) 1, (-1L) };
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray46, floatArray50);
        float[] floatArray54 = new float[] { (-1L), (byte) 10 };
        float[] floatArray58 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray54, floatArray58);
        float[] floatArray62 = new float[] { (short) 1, (-1L) };
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray58, floatArray62);
        float[] floatArray66 = new float[] { (-1L), (byte) 10 };
        float[] floatArray70 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (short) 1, (-1L) };
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray70, floatArray74);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(floatArray62, floatArray74);
        boolean boolean77 = org.apache.commons.math3.util.MathArrays.equals(floatArray46, floatArray74);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equals(floatArray10, floatArray74);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, 100);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray26);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray78);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray67, doubleArray78);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray67);
        double double82 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray47, doubleArray81);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, (int) (short) 10);
        double[] doubleArray88 = new double[] { 1, 1, 10 };
        double[] doubleArray92 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray88, doubleArray92);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray88);
        double double95 = org.apache.commons.math3.util.MathArrays.distance(doubleArray81, doubleArray88);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-5.591572318486318E263d), doubleArray81);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray27, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -900 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0623987405124003E265, -1.6774716955458955E264, -5.591572318486318E264]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2068.0d + "'", double82 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 20.09975124224178d + "'", double95 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-9.561588664611603E267, 3.6345220070161064E267, 1.532090815265251E268, -2.7957861592431587E267, -5.591572318486317E267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray34 = new float[] { (short) 1, (-1L) };
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray34);
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(floatArray22, floatArray34);
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray45 = null;
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(floatArray39, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray57 = new float[] { (short) 1, (-1L) };
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray53, floatArray57);
        float[] floatArray61 = new float[] { (-1L), (byte) 10 };
        float[] floatArray65 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray61, floatArray65);
        float[] floatArray67 = null;
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equals(floatArray61, floatArray67);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(floatArray53, floatArray61);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equals(floatArray39, floatArray53);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray22, floatArray53);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray53);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 1);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray11);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(doubleArray51, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray51);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray43, (double) 100L);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray43);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray31, doubleArray76);
        double[] doubleArray79 = null;
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray31, doubleArray79);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(doubleArray11, doubleArray31);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9000.0, -200.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray16, doubleArray47);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, 144652.08102413287d);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray73);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75, (int) (byte) 0);
        double double78 = org.apache.commons.math3.util.MathArrays.distance(doubleArray47, doubleArray75);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (-79.0d));
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 20.09975124224178d + "'", double78 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-87.77777777777777, 8.777777777777779, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, -1.0, 0.0]");
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int int30 = org.apache.commons.math3.util.MathArrays.distance1(intArray20, intArray29);
        int[] intArray31 = null;
        int int32 = org.apache.commons.math3.util.MathArrays.distance1(intArray20, intArray31);
        int[] intArray33 = new int[] {};
        int[] intArray38 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray33, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) (short) 1);
        int[] intArray42 = new int[] {};
        int[] intArray47 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray42, intArray47);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) (short) 1);
        int int51 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray50);
        int[] intArray52 = new int[] {};
        int[] intArray57 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray52, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 1);
        int[] intArray61 = new int[] {};
        int[] intArray66 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray66);
        int[] intArray69 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66, (int) (short) 1);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray69);
        int int71 = org.apache.commons.math3.util.MathArrays.distance1(intArray50, intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray52);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray52);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray71);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray71);
        double double75 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray30, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray30);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray10, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray10);
        double double79 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.099504938362077d + "'", double79 == 10.099504938362077d);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(3.2276883093128493E34d, 1.489257074440011E106d, (-2.9072633509934575E141d), 0.0d, 1.4792824440368394E30d, (double) 10.0f, 7.746270471371837E7d, (-3.2406572592959504E179d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.5103007635521005E187d) + "'", double8 == (-2.5103007635521005E187d));
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray16, doubleArray47);
        double[] doubleArray67 = new double[] { 1, 1, 10 };
        double[] doubleArray71 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray67, doubleArray71);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray47, doubleArray72);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray72);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection76 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray72, orderDirection76, false);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray83);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray83);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray90, 0.0d);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray90);
        double double94 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray72, doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-890.0, 199.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + orderDirection76 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection76.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 93000.0d + "'", double94 == 93000.0d);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray32);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray52);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray52);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray52);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray83);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(doubleArray72, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray72);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray64, (double) 100L);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray64);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray32, doubleArray64);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray64);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64, 0);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray64);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64);
        double double96 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 13.601470508735444d + "'", double96 == 13.601470508735444d);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray40, (double) 100L);
        double double65 = org.apache.commons.math3.util.MathArrays.distance(doubleArray9, doubleArray64);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.scale(1.2423244926866538E15d, doubleArray64);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64, (int) (byte) 0);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray68);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68);
        double[] doubleArray71 = null;
        double double72 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray68, doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 439.780879782446d + "'", double65 == 439.780879782446d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-3.726973478059961E17, 8.2821632845776928E16, 4.1410816422888454E17]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray37, doubleArray57);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray37);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(doubleArray69, doubleArray80);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray80, (double) (byte) 1);
        double double86 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray61, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -3 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.533823502911814d + "'", double86 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray35, 2111.0d);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double[] doubleArray49 = null;
        boolean boolean50 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray47, doubleArray49);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray37, doubleArray47);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1105.7619047619048, -0.0, 1005.2380952380952]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1106.7619047619048, 1.0, 1015.2380952380952]");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(199517.28166883273d, 0.0d, (-1.9875501E7d), 6.573889109854259E24d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.3065933957679744E32d) + "'", double4 == (-1.3065933957679744E32d));
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        long[] longArray5 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[] longArray11 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[] longArray17 = new long[] { (short) 100, (byte) 0, 0L, 100L, ' ' };
        long[][] longArray18 = new long[][] { longArray5, longArray11, longArray17 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray18);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, 0, 0, 100, 32]");
        org.junit.Assert.assertNotNull(longArray18);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray83 = new double[] { 1, 1, 10 };
        double[] doubleArray87 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray83, doubleArray87);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray88);
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equals(doubleArray77, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray77);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray69, (double) 100L);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray69);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray27, doubleArray57);
        double double96 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray8, doubleArray27);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale((-2165.0d), doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-21650.0, 2165.0, -0.0]");
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, (int) (short) 10);
        int int29 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray25);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, (int) (byte) 0);
        int[] intArray33 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, (int) '#');
        int[] intArray35 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, 235);
        int[] intArray36 = new int[] {};
        int[] intArray41 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int42 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray41);
        int[] intArray43 = new int[] {};
        int[] intArray48 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int49 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray43, intArray48);
        int int50 = org.apache.commons.math3.util.MathArrays.distance1(intArray36, intArray48);
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) '4');
        int[] intArray53 = new int[] {};
        int[] intArray58 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray53, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58, (int) (short) 1);
        int[] intArray62 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray63);
        double double65 = org.apache.commons.math3.util.MathArrays.distance(intArray25, intArray48);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray29);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray18);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equals(doubleArray49, doubleArray60);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray49);
        double double64 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray49);
        double double65 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray10, doubleArray49);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray10);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.scale((-4.2035421686351696E21d), doubleArray10);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.scale(2.2956897605530104E44d, doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.04987562112089d + "'", double64 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-92.0d) + "'", double65 == (-92.0d));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[3.783187951771653E22, -8.407084337270339E21, -4.20354216863517E22]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-2.0661207844977093E45, 4.591379521106021E44, 2.2956897605530102E45]");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray41);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray83);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray41, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray86);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray8, (int) (short) 0);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.scale((-5.677242965111985E65d), doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-5.677242965111985E66, 5.677242965111985E65, -0.0]");
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray0, floatArray7);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray18 = null;
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equals(floatArray12, floatArray18);
        float[] floatArray22 = new float[] { (-1L), (byte) 10 };
        float[] floatArray26 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray22, floatArray26);
        float[] floatArray30 = new float[] { (short) 1, (-1L) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray34 = new float[] { (-1L), (byte) 10 };
        float[] floatArray38 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean39 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray34, floatArray38);
        float[] floatArray40 = null;
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equals(floatArray34, floatArray40);
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray34);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(floatArray12, floatArray26);
        float[] floatArray46 = new float[] { (-1L), (byte) 10 };
        float[] floatArray50 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray46, floatArray50);
        float[] floatArray54 = new float[] { (short) 1, (-1L) };
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray50, floatArray54);
        float[] floatArray58 = new float[] { (-1L), (byte) 10 };
        float[] floatArray62 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray58, floatArray62);
        float[] floatArray64 = null;
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.equals(floatArray58, floatArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(floatArray50, floatArray58);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray50);
        float[] floatArray68 = null;
        float[] floatArray71 = new float[] { (-1L), (byte) 10 };
        float[] floatArray75 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray71, floatArray75);
        float[] floatArray79 = new float[] { (short) 1, (-1L) };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray75, floatArray79);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray68, floatArray75);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray50, floatArray75);
        float[] floatArray85 = new float[] { (-1L), (byte) 10 };
        float[] floatArray89 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray85, floatArray89);
        float[] floatArray93 = new float[] { (short) 1, (-1L) };
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray89, floatArray93);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.equals(floatArray75, floatArray89);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(floatArray0, floatArray89);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(floatArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray93), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double double53 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray52);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray70);
        double double85 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray18, doubleArray62);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2068.0d + "'", double53 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 990.0d + "'", double85 == 990.0d);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 1);
        int[] intArray23 = new int[] {};
        int[] intArray28 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int29 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray23, intArray28);
        int[] intArray31 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28, (int) (short) 1);
        int[] intArray32 = new int[] {};
        int[] intArray37 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int38 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray32, intArray37);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37, (int) (short) 1);
        int int41 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray40);
        int[] intArray42 = new int[] {};
        int[] intArray47 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray42, intArray47);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) (short) 1);
        int[] intArray51 = new int[] {};
        int[] intArray56 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int57 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray51, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, (int) (short) 1);
        int int60 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray59);
        int int61 = org.apache.commons.math3.util.MathArrays.distance1(intArray40, intArray59);
        double double62 = org.apache.commons.math3.util.MathArrays.distance(intArray22, intArray59);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1]");
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        long[] longArray0 = new long[] {};
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        long[][] longArray3 = new long[][] { longArray0, longArray1, longArray2 };
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int[] intArray54 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int55 = org.apache.commons.math3.util.MathArrays.distance1(intArray47, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (byte) 100);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 100);
        int int60 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray57);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 98 + "'", int55 == 98);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 1, 52, 1, 32, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 1, 52, 1, 32, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 98 + "'", int60 == 98);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 98);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.359922046250594E90d), 10.04987562112089d, (-2.554111747075503E77d), 8.77848809410311E124d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-2.24212395627112E202d) + "'", double4 == (-2.24212395627112E202d));
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection3 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean5 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection3, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection6 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection6, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray2, orderDirection9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + orderDirection3 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection3.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + orderDirection6 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection6.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray29, doubleArray48);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection50 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection50, true);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray5, orderDirection50, false, false);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray5);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray56, 0.0d);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.8931094217295912E99d, doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection50 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection50.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.9120405159468872E101, -1.9120405159468872E101, -1.912040515946887E102]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0]");
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.2987589125325767E77d), (-2.09703636636056E201d), (-2.24212395627112E202d), (-1.3065933957679744E32d), (-5.995616305253621E40d), (-1.372588062112734E26d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.723544670715707E278d + "'", double6 == 2.723544670715707E278d);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray5);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray28);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray40);
        double double42 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray28, doubleArray40);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection43 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray40, orderDirection43, true);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray83);
        double[] doubleArray90 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray86, doubleArray90);
        double double92 = org.apache.commons.math3.util.MathArrays.distance(doubleArray40, doubleArray90);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray5, doubleArray40);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray40, 10);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.scale((-1.2114525348282043E21d), doubleArray95);
        double double97 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray95);
        double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray95, 1.5460450237574003E9d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2111.0d + "'", double42 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection43 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection43.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1427.5857242211412d + "'", double92 == 1427.5857242211412d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-900.0, 200.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[1.0903072813453838E24, -2.4229050696564087E23, -1.2114525348282044E24, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1360.1470508735442d + "'", double97 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[-4.638135071272201E9, 1.0306966825049335E9, 5.153483412524668E9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray23 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) ' ');
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, 100);
        int[] intArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int27 = org.apache.commons.math3.util.MathArrays.distance1(intArray21, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(1.8931094217295912E99d, (-3.159027218120044E20d), 122.22222222222223d, 0.0d, (-2.8469134568462802E23d), 9.042003737406663E268d, (-5.591572318486318E263d), 1.053651506470873E228d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + Double.NEGATIVE_INFINITY + "'", double8 == Double.NEGATIVE_INFINITY);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(5.040419286078566E224d, (-2.5043938381010786E8d), 0.0d, 2010.0d, (-4.149720547934001E12d), (-2.7326318893828427E20d), (-8.39419851318388E54d), (-2.5103007635521005E187d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.1071962924430206E242d + "'", double8 == 2.1071962924430206E242d);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int int14 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray12);
        int[] intArray16 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 0);
        int[] intArray17 = new int[] {};
        int[] intArray22 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray22);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22, (int) (short) 1);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        int[] intArray34 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31, (int) (short) 1);
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray25, intArray34);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, 0);
        int[] intArray38 = new int[] {};
        int[] intArray43 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int44 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray43);
        int[] intArray46 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43, (int) (short) 1);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, (int) (short) 1);
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 100);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        double double60 = org.apache.commons.math3.util.MathArrays.distance(intArray37, intArray58);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray0, intArray61);
        int[] intArray64 = new int[] { 10 };
        double double65 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray64);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray64);
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10]");
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, 0);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int[] intArray62 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int63 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray62);
        int[] intArray64 = new int[] {};
        int[] intArray69 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray64, intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (int) (short) 1);
        int[] intArray73 = new int[] {};
        int[] intArray78 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray73, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray78, (int) (short) 1);
        int int82 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray72, intArray81);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, 0);
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        int[] intArray87 = org.apache.commons.math3.util.MathArrays.copyOf(intArray85, (int) ' ');
        int int88 = org.apache.commons.math3.util.MathArrays.distance1(intArray62, intArray85);
        java.lang.Class<?> wildcardClass89 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (byte) 10);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, (int) (short) 100);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray41);
        int int43 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray42);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1]");
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        double double26 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int[] intArray37 = new int[] {};
        int[] intArray42 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int43 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray37, intArray42);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42, (int) (short) 1);
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) (short) 100);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int50 = org.apache.commons.math3.util.MathArrays.distance1(intArray24, intArray49);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray49);
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray51);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 235 + "'", int50 == 235);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray41);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray64);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray64);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray83);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray83);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray41, doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.scale(6181.097447311743d, doubleArray86);
        double double90 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray89);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray89, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-819000.0, 362900.0, 1769800.0, -401000.0, -1000000.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-5624798.677053686, 1242400.5869096604, 6181097.447311743]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 8449135.164553951d + "'", double90 == 8449135.164553951d);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection7, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection10, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection13 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean15 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection13, false);
        double[] doubleArray19 = new double[] { 1, 1, 10 };
        double[] doubleArray23 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray23);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray32);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray34, doubleArray53);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection55 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray34, orderDirection55, true);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection55, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection60, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + orderDirection13 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection13.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection55 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection55.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(2720.2941017470885d, 2.667039156913762E7d, 1.2327353862497586E29d, 8.636077385394107E69d, 1353.403487508437d, (-3.776153116812779E191d), 1.0d, 7.021059879986961E21d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-5.110658797660269E194d) + "'", double8 == (-5.110658797660269E194d));
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray35);
        double double50 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray27);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray67);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray69, (int) ' ');
        double double72 = org.apache.commons.math3.util.MathArrays.distance(doubleArray18, doubleArray69);
        double[] doubleArray73 = null;
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray73);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray18, (int) (byte) 0);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 21.0d + "'", double50 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray58);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray70);
        double double72 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray58, doubleArray70);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection73 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray70, orderDirection73, true);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.scale(1366.9312345542478d, doubleArray70);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray76);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray18, doubleArray76);
        double double79 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (0.001 >= 0.001)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2111.0d + "'", double72 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection73 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection73.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1230238.111098823, 273386.2469108496, 1366931.2345542477]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1230238.111098823, 273386.2469108496, 1366931.2345542477]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[7.315656960067176E-4, 7.315656960067175E-4, 7.315656960067176E-4]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.001267108954558123d + "'", double79 == 0.001267108954558123d);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((double) 235, 10.099504938362077d, 6.469126606706673E72d, 8.364001259932813E136d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 5.41077830891595E209d + "'", double4 == 5.41077830891595E209d);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40, 0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray65);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray65);
        int[] intArray71 = new int[] {};
        int[] intArray76 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray71, intArray76);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) (short) 1);
        int[] intArray80 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76);
        int int81 = org.apache.commons.math3.util.MathArrays.distance1(intArray65, intArray80);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80, (int) (byte) 100);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray86 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84, 100);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int88 = org.apache.commons.math3.util.MathArrays.distance1(intArray84, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) 100L);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray30);
        double double56 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray55);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.scale((-5.055478783810143E21d), doubleArray61);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray55, doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1346.545580364809d + "'", double56 == 1346.545580364809d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-5.055478783810143E21, -5.055478783810143E21, -5.055478783810143E22]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray5);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(doubleArray21, doubleArray32);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray32);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(doubleArray43, doubleArray54);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray73);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray73);
        double double77 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray32, doubleArray54);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray32);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray12, doubleArray32);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale((double) 10, doubleArray12);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.scale(1.1928970475800407E212d, doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.1928970475800406E213, 1.1928970475800406E213, 1.1928970475800406E214]");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray11);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(doubleArray51, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray51);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray43, (double) 100L);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray43);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray11, doubleArray43);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray11, doubleArray73);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(21009.0d, doubleArray73);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale((-5.718703196015772E45d), doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[21009.0, 21009.0, 210090.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.2014423544509534E50, -1.2014423544509534E50, -1.2014423544509535E51]");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray37);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray50);
        double double53 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray41, doubleArray50);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, 1.2459825039216539E7d);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray55, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.3844250043573933E7, -1384425.0043573931, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray40);
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equals(doubleArray29, doubleArray40);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray40);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray71);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray71);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray60);
        double double75 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray40, doubleArray74);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray19, doubleArray74);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.scale((-2.3726249250325616E14d), doubleArray19);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2068.0d + "'", double75 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-919.0, 203.0, 1010.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[2.13536243252930528E17, -4.7452498500651232E16, -2.3726249250325616E17]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[2.13536243252930528E17, -4.7452498500651232E16, -2.3726249250325616E17]");
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = new int[] {};
        int[] intArray25 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray25);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25, (int) (short) 1);
        int[] intArray29 = new int[] {};
        int[] intArray34 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray34);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray34, (int) (short) 1);
        int int38 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray37);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28, (int) (short) 100);
        int[] intArray41 = new int[] {};
        int[] intArray46 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int47 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray46);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray46, (int) (short) 1);
        int[] intArray50 = new int[] {};
        int[] intArray55 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, (int) (short) 1);
        int int59 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray58);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int[] intArray69 = new int[] {};
        int[] intArray74 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int75 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray69, intArray74);
        int[] intArray77 = org.apache.commons.math3.util.MathArrays.copyOf(intArray74, (int) (short) 1);
        int int78 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray77);
        int int79 = org.apache.commons.math3.util.MathArrays.distance1(intArray58, intArray77);
        double double80 = org.apache.commons.math3.util.MathArrays.distance(intArray28, intArray58);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(intArray19, intArray28);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1366.9312345542478d, 18500.0d, 145.68802284333466d, 2.2267871488170685E30d, (-7.217129340870217E25d), 100.00499987500625d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.2440899951391683E32d + "'", double6 == 3.2440899951391683E32d);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray8 = null;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray8);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray20 = new float[] { (short) 1, (-1L) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray16);
        float[] floatArray23 = null;
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray34 = new float[] { (short) 1, (-1L) };
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray30, floatArray34);
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(floatArray23, floatArray30);
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray30);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        float[] floatArray0 = null;
        float[] floatArray3 = new float[] { (-1L), (byte) 10 };
        float[] floatArray7 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray3, floatArray7);
        float[] floatArray11 = new float[] { (short) 1, (-1L) };
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray7, floatArray11);
        boolean boolean13 = org.apache.commons.math3.util.MathArrays.equals(floatArray0, floatArray7);
        float[] floatArray16 = new float[] { (-1L), (byte) 10 };
        float[] floatArray20 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        float[] floatArray24 = new float[] { (short) 1, (-1L) };
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray20, floatArray24);
        float[] floatArray28 = new float[] { (-1L), (byte) 10 };
        float[] floatArray32 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray28, floatArray32);
        float[] floatArray34 = null;
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equals(floatArray28, floatArray34);
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(floatArray20, floatArray28);
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray47 = new float[] { (short) 1, (-1L) };
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray43, floatArray47);
        float[] floatArray51 = new float[] { (-1L), (byte) 10 };
        float[] floatArray55 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray51, floatArray55);
        float[] floatArray57 = null;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray51, floatArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(floatArray43, floatArray51);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray28, floatArray51);
        float[] floatArray63 = new float[] { (-1.0f), 100.0f };
        float[] floatArray66 = new float[] { (-1L), (byte) 10 };
        float[] floatArray70 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (short) 1, (-1L) };
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray70, floatArray74);
        float[] floatArray78 = new float[] { (-1L), (byte) 10 };
        float[] floatArray82 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray78, floatArray82);
        float[] floatArray84 = null;
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(floatArray78, floatArray84);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(floatArray70, floatArray78);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(floatArray63, floatArray78);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray28, floatArray63);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(floatArray0, floatArray63);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double double76 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray31, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray31);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray11, doubleArray31);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.scale((-3.5588299084474494E14d), doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[4.3564788040818278E18, -9.681064009070729E17, -4.840532004535364E19]");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray8 = null;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray8);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray20 = new float[] { (short) 1, (-1L) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        float[] floatArray24 = new float[] { (-1L), (byte) 10 };
        float[] floatArray28 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray24, floatArray28);
        float[] floatArray30 = null;
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(floatArray24, floatArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray24);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray16);
        float[] floatArray36 = new float[] { (-1.0f), 100.0f };
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray47 = new float[] { (short) 1, (-1L) };
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray43, floatArray47);
        float[] floatArray51 = new float[] { (-1L), (byte) 10 };
        float[] floatArray55 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray51, floatArray55);
        float[] floatArray57 = null;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray51, floatArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(floatArray43, floatArray51);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(floatArray36, floatArray51);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray36);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray50);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray39);
        double double54 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray19, doubleArray53);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray53, (int) (short) 10);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray60);
        double double67 = org.apache.commons.math3.util.MathArrays.distance(doubleArray53, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-5.591572318486318E263d), doubleArray53);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray53, 98);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray79);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0623987405124003E265, -1.6774716955458955E264, -5.591572318486318E264]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2068.0d + "'", double54 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 20.09975124224178d + "'", double67 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0623987405124003E265, -1.6774716955458955E264, -5.591572318486318E264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(3.811678112579062E9d, (-3.4912951236194243E80d), 14.866068747318506d, 4.451729603812351E60d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.330769320725417E90d) + "'", double4 == (-1.330769320725417E90d));
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(7.021059879986961E21d, 1.0020387082911603E30d, 6.469126606706673E72d, 3.780478449848133E29d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.4456393725993756E102d + "'", double4 == 2.4456393725993756E102d);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray7);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.scale(111.0d, doubleArray7);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.552472386491933E14d), doubleArray14);
        double[] doubleArray19 = new double[] { 1, 1, 10 };
        double[] doubleArray23 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray24 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray23);
        double[] doubleArray28 = new double[] { 1, 1, 10 };
        double[] doubleArray32 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray32);
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray32);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray44);
        double double46 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray32, doubleArray44);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection54 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray53, orderDirection54, false);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray32, orderDirection54, true, false);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray32, (int) (short) 10);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray32);
        double double63 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray62);
        double double64 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray14, doubleArray62);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.559673952118356E12d), doubleArray14);
        double double66 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2111.0d + "'", double46 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + orderDirection54 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection54.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.04987562112089d + "'", double63 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.9616871307844774E82d), (-2.7326318893828427E20d), 212170.0d, 0.0d, (-19.0d), (-2.5043938381010786E8d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 5.360568810573595E102d + "'", double6 == 5.360568810573595E102d);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39);
        double double46 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray29, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray50);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray29, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray29);
        double[] doubleArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray58, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 990.0d + "'", double46 == 990.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray30, (double) (byte) 1);
        double double36 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray35);
        double[][] doubleArray37 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray35, doubleArray37);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray11, doubleArray37);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray44);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray44);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray70);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equals(doubleArray59, doubleArray70);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray70);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray70, (double) (byte) 1);
        double double76 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray75);
        double[][] doubleArray77 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray75, doubleArray77);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray51, doubleArray77);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray11, doubleArray51);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, 100);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.533823502911814d + "'", double36 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.533823502911814d + "'", double76 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 10.0, 100.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equals(doubleArray66, doubleArray77);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray66);
        double double81 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray49, doubleArray58);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray28, doubleArray58);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray58);
        double double84 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 21.0d + "'", double81 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-909.0, 202.0, 1010.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 13.601470508735444d + "'", double84 == 13.601470508735444d);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(2.7153156848723866E77d, (-5.995616305253621E40d), (double) '4', 102098.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.6279990994131784E118d) + "'", double4 == (-1.6279990994131784E118d));
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double double38 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.scale(2.3726213090057078E14d, doubleArray37);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray37, (-1.0458049754775623E91d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -4,089.99 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 6181.097447311743d + "'", double38 == 6181.097447311743d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.7039971938346611E17, 2.1564438208521472E17, 1.07822191042607347E18]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[3.1374149264326874E91, -6.972033169850417E90, -3.486016584925208E91]");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray69);
        double[] doubleArray75 = new double[] { 1, 1, 10 };
        double[] doubleArray79 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray79);
        double[] doubleArray84 = new double[] { 1, 1, 10 };
        double[] doubleArray88 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray84, doubleArray88);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray88);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray71, doubleArray90);
        double double92 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray91);
        double double93 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray91);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (0 >= 0)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination(9.462245724335106E141d, 9.037912452420332E72d, 1.5192276385067893E88d, 3.2440899951391683E32d, (double) (byte) -1, Double.POSITIVE_INFINITY, (-5.691405330849884E16d), 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + Double.NEGATIVE_INFINITY + "'", double8 == Double.NEGATIVE_INFINITY);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray65);
        double[] doubleArray71 = new double[] { 1, 1, 10 };
        double[] doubleArray75 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray71, doubleArray75);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray75, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray67, doubleArray86);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection88 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean90 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray67, orderDirection88, true);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray43, orderDirection88, false, false);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray43);
        double double95 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray37, doubleArray43);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray37);
        double double97 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray37, (-2.4333688923589076E146d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MathArithmeticException; message: array sums to zero");
        } catch (org.apache.commons.math3.exception.MathArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection88 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection88.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 12.0d + "'", double95 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (double) 100L);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray69);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray52, doubleArray71);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray91);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(doubleArray80, doubleArray91);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray71, doubleArray91);
        double double95 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray9, doubleArray91);
        double double96 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray91);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (-0 >= 0)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 990.0d + "'", double95 == 990.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1360.1470508735442d + "'", double96 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-0.0, 0.0, 0.0]");
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(doubleArray19, doubleArray30);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray30);
        double[] doubleArray37 = new double[] { 1, 1, 10 };
        double[] doubleArray41 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray37, doubleArray41);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray56 = new double[] { 1, 1, 10 };
        double[] doubleArray60 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray60);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray61);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray61);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray50);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, (double) 100L);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray42);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray10, doubleArray42);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray0, doubleArray68);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) 'a');
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray68, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray21);
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray21);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray21);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((double) 1.0f, doubleArray21);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(2.4215696632833603E43d, doubleArray26);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection28 = null;
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray33);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray33);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray59);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray59, (double) (byte) 1);
        double double65 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray64);
        double[][] doubleArray66 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray64, doubleArray66);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray40, doubleArray66);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray27, orderDirection28, doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[2.1794126969550244E46, -4.8431393265667203E45, -2.4215696632833603E46]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.533823502911814d + "'", double65 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        double double8 = org.apache.commons.math3.util.MathArrays.linearCombination((double) 100, (double) 98, 14.866068747318506d, (double) 1.0f, (-2.665302576915262E10d), 1.4792824440368394E30d, 116405.9998500075d, 1.5192276385067893E88d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.7684721226014857E93d + "'", double8 == 1.7684721226014857E93d);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray65);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray65);
        int[] intArray71 = new int[] {};
        int[] intArray76 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int77 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray71, intArray76);
        int[] intArray79 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) (short) 1);
        int[] intArray80 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76);
        int int81 = org.apache.commons.math3.util.MathArrays.distance1(intArray65, intArray80);
        int[] intArray83 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80, (int) (byte) 100);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray86 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84, 100);
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray3);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray18);
        double double21 = org.apache.commons.math3.util.MathArrays.distance(doubleArray3, doubleArray20);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray50);
        double double52 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray38, doubleArray50);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection60 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray59, orderDirection60, false);
        boolean boolean65 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray38, orderDirection60, true, false);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray20, orderDirection60, true);
        double[] doubleArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray20, doubleArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 14.866068747318506d + "'", double21 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2111.0d + "'", double52 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + orderDirection60 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection60.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray22);
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(doubleArray11, doubleArray22);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray22);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray22);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        double[] doubleArray40 = new double[] { 1, 1, 10 };
        double[] doubleArray44 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray44);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray45);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(doubleArray34, doubleArray45);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray64);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray64);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray22, doubleArray67);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) ' ', doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1363.329967155091d, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(7.746270471371837E7d, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray68);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -2,767,754,196,648,557,100 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-2.7677541966485571E18, 1.2263956019093545E18, 5.9809174325135729E18, -1.35515193266919578E18, -3.3794312535391416E18]");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray28, orderDirection31, true);
        double double34 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray28);
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, 1363.329967155091d);
        double double37 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray36);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray56);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(doubleArray45, doubleArray56);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray56);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray87);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray76, doubleArray87);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray76);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray68, (double) 100L);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray56, doubleArray68);
        double double94 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray93);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray93);
        double[] doubleArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray95, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1360.1470508735442d + "'", double34 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 6181.097447311743d + "'", double37 == 6181.097447311743d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1346.545580364809d + "'", double94 == 1346.545580364809d);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-3198.989901465273, 710.8866447700607, 3554.433223850303]");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray8, (double) 100L);
        double[][] doubleArray33 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray32, doubleArray33);
        double[] doubleArray35 = null;
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray32, 8.583023989821415E99d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-2.5749071969464245E100, 5.722015993214276E99, 2.8610079966071384E100]");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray26);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray45);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray28, doubleArray47);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection49 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray28, orderDirection49, true);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray4, orderDirection49, false, false);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray4);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray56, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -101 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection49 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection49.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-101.0, -101.0, -1010.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(8.5258816202192742E18d, (-92.0d), 1.5460450237574003E9d, 1.0282061941137209E34d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.5896530698060538E43d + "'", double4 == 1.5896530698060538E43d);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray18, doubleArray37);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray69);
        double double71 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray57, doubleArray69);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection72 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray69, orderDirection72, true);
        double double75 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray37, doubleArray69);
        double[] doubleArray79 = new double[] { 1, 1, 10 };
        double[] doubleArray83 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray79, doubleArray83);
        double[] doubleArray89 = new double[] { 1, 1, 10 };
        double[] doubleArray93 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray89, doubleArray93);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray94);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.equals(doubleArray83, doubleArray94);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray69, doubleArray94);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray97);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2111.0d + "'", double71 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection72 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection72.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-9200.0d) + "'", double75 == (-9200.0d));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[810000.0, 40000.0, 1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[810000.0, 40000.0, 1000000.0]");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double double31 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray8);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray51);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray70);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray70);
        double[] doubleArray77 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray73, doubleArray77);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.scale(100.0d, doubleArray77);
        double double80 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray77);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray77);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray8, (-1.2170120134952047E22d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray83);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (36,510,360,404,856,140,000,000 >= -8,113,413,423,301,364,000,000)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 13.601470508735444d + "'", double31 == 13.601470508735444d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10000.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.00499987500625d + "'", double80 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-109.0, 2.0, 9.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[3.651036040485614E22, -8.113413423301364E21, -4.056706711650683E22]");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray7);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 100, 100, 35]");
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray44);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray51 = org.apache.commons.math3.util.MathArrays.copyOf(intArray49, (int) (byte) 1);
        int[] intArray52 = new int[] {};
        int[] intArray57 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray52, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57, (int) (short) 1);
        int[] intArray61 = new int[] {};
        int[] intArray66 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray66);
        int[] intArray69 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66, (int) (short) 1);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray69);
        int[] intArray71 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69);
        int int73 = org.apache.commons.math3.util.MathArrays.distance1(intArray51, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray75 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray26);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray45);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray28, doubleArray47);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        double[] doubleArray62 = new double[] { 1, 1, 10 };
        double[] doubleArray66 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray62, doubleArray66);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray67);
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equals(doubleArray56, doubleArray67);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray47, doubleArray67);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray67, 0);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(88.21557489650559d, doubleArray67);
        double double74 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray3, doubleArray67);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray67, (-7.217129340870217E24d));
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray76, 1010.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray76);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (21,651,388,022,610,658,000,000,000 >= -4,811,419,560,580,146,000,000,000)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-79394.01740685503, 17643.114979301117, 88215.57489650558]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 820404.8465375019d + "'", double74 == 820404.8465375019d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[2.1651388022610658E25, -4.811419560580146E24, -2.405709780290073E25]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-3030.0, 673.3333333333333, 3366.6666666666665]");
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27, 0);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 100);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray60);
        double double62 = org.apache.commons.math3.util.MathArrays.distance(intArray39, intArray60);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray65 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39, 10);
        double double66 = org.apache.commons.math3.util.MathArrays.distance(intArray8, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) '4');
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray41);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray41);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41, 100);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.scale(212170.0d, doubleArray41);
        double double49 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray7, doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.90953E8, -4.2434E7, -2.1217E8]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1000.0d + "'", double49 == 1000.0d);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, 100.0d);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray54);
        double double56 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 111.665284679121d + "'", double56 == 111.665284679121d);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray30, doubleArray49);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection51 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray30, orderDirection51, true);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray6, orderDirection51, false, false);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray6);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.2459825039216539E7d, doubleArray57);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray64);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray57, doubleArray64);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.scale(1353.329967155091d, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray71);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not strictly increasing (-? >= -?)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection51 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection51.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.2584423289608705E9, -1.2584423289608705E9, -1.2584423289608704E10]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-Infinity, -Infinity, -Infinity]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-Infinity, -Infinity, -Infinity]");
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.5896530698060538E43d, (-1.6802909425127984E151d), 2.6740627672928667E44d, (-2.4078440493913947E172d), 1.3574418946969384E64d, (-1.372588062112734E26d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-6.438726121925215E216d) + "'", double6 == (-6.438726121925215E216d));
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray44);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int[] intArray58 = new int[] {};
        int[] intArray63 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        int[] intArray66 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63, (int) (short) 1);
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray66);
        int[] intArray68 = new int[] {};
        int[] intArray73 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int74 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray68, intArray73);
        double double75 = org.apache.commons.math3.util.MathArrays.distance(intArray66, intArray73);
        int[] intArray76 = org.apache.commons.math3.util.MathArrays.copyOf(intArray73);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray76, (int) '#');
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray44, intArray76);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection27 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection27, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray26, orderDirection30, false);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray14, orderDirection30, true);
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray10, doubleArray14);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray35, 2111.0d);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray66);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equals(doubleArray55, doubleArray66);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray55);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray47);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeDivide(doubleArray35, doubleArray47);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + orderDirection27 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection27.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1105.7619047619048, -0.0, 1005.2380952380952]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[3.3950617283950616E-4, 0.0, -2.777777777777778E-4]");
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray7 = new int[] {};
        int[] intArray12 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int13 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray12);
        int[] intArray15 = org.apache.commons.math3.util.MathArrays.copyOf(intArray12, (int) (short) 1);
        int[] intArray16 = new int[] {};
        int[] intArray21 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int22 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray16, intArray21);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) (short) 1);
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray15, intArray24);
        int[] intArray26 = new int[] {};
        int[] intArray31 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray26, intArray31);
        double double33 = org.apache.commons.math3.util.MathArrays.distance(intArray24, intArray31);
        double double34 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray24);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 0);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, 0);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48);
        int int62 = org.apache.commons.math3.util.MathArrays.distance1(intArray39, intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = org.apache.commons.math3.util.MathArrays.distance(intArray39, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1]");
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-1.2157512288535557E51d), 4.0273832394686912E16d, 3.780478449848133E29d, 4.481567486990224E93d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.6942469306106597E123d + "'", double4 == 1.6942469306106597E123d);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(1.5896530698060538E43d, 3.780478449848133E29d, (-4.466684551957364E139d), (-1.622053541788808E83d), 2.4397658821053278E76d, 6.469126606706673E72d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 7.245201497555797E222d + "'", double6 == 7.245201497555797E222d);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, 100);
        int[] intArray22 = new int[] {};
        int[] intArray27 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int28 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray22, intArray27);
        int[] intArray30 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27, (int) (short) 1);
        int[] intArray31 = new int[] {};
        int[] intArray36 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) (short) 1);
        int int40 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray39);
        int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray39, (int) (short) 100);
        double double43 = org.apache.commons.math3.util.MathArrays.distance(intArray21, intArray42);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42, (int) '4');
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray12, 0);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray12);
        double[] doubleArray21 = new double[] { 1, 1, 10 };
        double[] doubleArray25 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray25);
        double[] doubleArray30 = new double[] { 1, 1, 10 };
        double[] doubleArray34 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray35 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray34);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(doubleArray43, doubleArray54);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray43);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray74);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray43, doubleArray74);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray74, 144652.08102413287d);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray74, (double) 10L);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(doubleArray21, doubleArray93);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21, (int) (byte) 1);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray17, doubleArray96);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 0 != 1");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[11.11111111111111, -1.1111111111111112, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[1.0]");
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray40, (double) 100L);
        double double65 = org.apache.commons.math3.util.MathArrays.distance(doubleArray9, doubleArray64);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection66 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray64, orderDirection66, false, false);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray64);
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.scale(21009.0d, doubleArray64);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray71, 2.0652291407971942E8d);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 439.780879782446d + "'", double65 == 439.780879782446d);
        org.junit.Assert.assertTrue("'" + orderDirection66 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection66.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-6302700.0, 1400600.0, 7003000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-6.195687422391583E8, 1.3768194271981293E8, 6.884097135990648E8]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-6302700.0, 1400600.0, 7003000.0]");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection20 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray19, orderDirection20, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection23 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray19, orderDirection23, false);
        double[] doubleArray29 = new double[] { 1, 1, 10 };
        double[] doubleArray33 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray34 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray33);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray42);
        double[] doubleArray49 = new double[] { 1, 1, 10 };
        double[] doubleArray53 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray54);
        double double56 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray42, doubleArray54);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection57 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray54, orderDirection57, true);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray19, orderDirection57, true);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray12, orderDirection57, false, true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + orderDirection20 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection20.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + orderDirection23 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection23.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2111.0d + "'", double56 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection57 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection57.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray28, orderDirection31, true);
        double double34 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray28);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double double45 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray28, doubleArray44);
        java.lang.Class<?> wildcardClass46 = doubleArray28.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1360.1470508735442d + "'", double34 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 990.0d + "'", double45 == 990.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray20);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20, 100);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray26);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray47);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray78);
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray67, doubleArray78);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray67);
        double double82 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray47, doubleArray81);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, (int) (short) 10);
        double[] doubleArray88 = new double[] { 1, 1, 10 };
        double[] doubleArray92 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray88, doubleArray92);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray88);
        double double95 = org.apache.commons.math3.util.MathArrays.distance(doubleArray81, doubleArray88);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-5.591572318486318E263d), doubleArray81);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray27, doubleArray81);
        double[] doubleArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray97, doubleArray98);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0623987405124003E265, -1.6774716955458955E264, -5.591572318486318E264]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2068.0d + "'", double82 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 20.09975124224178d + "'", double95 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-9.561588664611603E267, 3.6345220070161064E267, 1.532090815265251E268, -2.7957861592431587E267, -5.591572318486317E267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray47);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray47);
        double double55 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray42, doubleArray47);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray74);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray63, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        double[] doubleArray89 = new double[] { 1, 1, 10 };
        double[] doubleArray93 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray89, doubleArray93);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray84, doubleArray93);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray93);
        double double97 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray93);
        double double98 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray42, doubleArray93);
        double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.scale(1101.0d, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 10.04987562112089d + "'", double97 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[11010.0, -1101.0, 0.0]");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray29, 1363.329967155091d);
        double double38 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray55);
        double[] doubleArray61 = new double[] { 1, 1, 10 };
        double[] doubleArray65 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray66 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray65);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray80 = new double[] { 1, 1, 10 };
        double[] doubleArray84 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray80, doubleArray84);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray85);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray74, doubleArray85);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray74);
        double double89 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray57, doubleArray66);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray37, doubleArray57);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.scale(102098.0d, doubleArray57);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57, 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-4089.989901465273, 908.8866447700607, 4544.433223850303]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 6181.097447311743d + "'", double38 == 6181.097447311743d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 21.0d + "'", double89 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray20 = null;
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(floatArray14, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray14);
        float[] floatArray25 = new float[] { (-1L), (byte) 10 };
        float[] floatArray29 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray29);
        float[] floatArray33 = new float[] { (short) 1, (-1L) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray43 = null;
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equals(floatArray37, floatArray43);
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(floatArray29, floatArray37);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray37);
        float[] floatArray49 = new float[] { (-1.0f), 100.0f };
        float[] floatArray52 = new float[] { (-1L), (byte) 10 };
        float[] floatArray56 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray52, floatArray56);
        float[] floatArray60 = new float[] { (short) 1, (-1L) };
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray56, floatArray60);
        float[] floatArray64 = new float[] { (-1L), (byte) 10 };
        float[] floatArray68 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean69 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray64, floatArray68);
        float[] floatArray70 = null;
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(floatArray64, floatArray70);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equals(floatArray56, floatArray64);
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray64);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray49);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination((-3.020383302338395E119d), 9209.0d, 0.0d, (-19.0d), 4.0529758683460013E17d, 1.1653016212785054E106d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.9414683672628255E123d + "'", double6 == 1.9414683672628255E123d);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray6);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.scale(111.0d, doubleArray6);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.552472386491933E14d), doubleArray13);
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray13);
        double[] doubleArray21 = new double[] { 1, 1, 10 };
        double[] doubleArray25 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray21);
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.scale((-1.2170120134952047E22d), doubleArray28);
        double double31 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray13, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray58, orderDirection59, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection62 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray58, orderDirection62, false);
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray46, orderDirection62, true);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray72 = new double[] { 1, 1, 10 };
        double[] doubleArray76 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray72, doubleArray76);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray72);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray72);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray72);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray42, doubleArray72);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(doubleArray30, doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.098944817946503E37, -2.098944817946503E37, -2.098944817946503E38]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + orderDirection62 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection62.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-11.0, 0.0, -10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2.11983035542002E38d + "'", double82 == 2.11983035542002E38d);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray22 = new float[] { (short) 1, (-1L) };
        boolean boolean23 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray18, floatArray22);
        float[] floatArray26 = new float[] { (-1L), (byte) 10 };
        float[] floatArray30 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray30);
        float[] floatArray32 = null;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray32);
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(floatArray18, floatArray26);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray45 = new float[] { (short) 1, (-1L) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray55 = null;
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray49, floatArray55);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray41, floatArray49);
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray26, floatArray49);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray26);
        float[] floatArray62 = new float[] { (-1L), (byte) 10 };
        float[] floatArray66 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray62, floatArray66);
        float[] floatArray70 = new float[] { (short) 1, (-1L) };
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray70);
        float[] floatArray74 = new float[] { (-1L), (byte) 10 };
        float[] floatArray78 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray74, floatArray78);
        float[] floatArray80 = null;
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.equals(floatArray74, floatArray80);
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray66, floatArray74);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(floatArray26, floatArray66);
        float[] floatArray86 = new float[] { (-1L), (byte) 10 };
        float[] floatArray90 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray86, floatArray90);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray66, floatArray90);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray8 = null;
        boolean boolean9 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray8);
        float[] floatArray12 = new float[] { (-1L), (byte) 10 };
        float[] floatArray16 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean17 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray12, floatArray16);
        float[] floatArray20 = new float[] { (short) 1, (-1L) };
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray20);
        float[] floatArray24 = new float[] { (-1L), (byte) 10 };
        float[] floatArray28 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray24, floatArray28);
        float[] floatArray30 = null;
        boolean boolean31 = org.apache.commons.math3.util.MathArrays.equals(floatArray24, floatArray30);
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray24);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray16);
        float[] floatArray36 = new float[] { (-1L), (byte) 10 };
        float[] floatArray40 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray36, floatArray40);
        float[] floatArray44 = new float[] { (short) 1, (-1L) };
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray40, floatArray44);
        float[] floatArray48 = new float[] { (-1L), (byte) 10 };
        float[] floatArray52 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray48, floatArray52);
        float[] floatArray54 = null;
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(floatArray48, floatArray54);
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equals(floatArray40, floatArray48);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equals(floatArray16, floatArray40);
        float[] floatArray58 = null;
        float[] floatArray61 = new float[] { (-1L), (byte) 10 };
        float[] floatArray65 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray61, floatArray65);
        float[] floatArray69 = new float[] { (short) 1, (-1L) };
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray65, floatArray69);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(floatArray58, floatArray65);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray16, floatArray58);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        double double47 = org.apache.commons.math3.util.MathArrays.distance(intArray38, intArray45);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray45);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) '4');
        int[] intArray51 = new int[] {};
        int[] intArray56 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int57 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray51, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, (int) (short) 1);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray59, intArray68);
        int[] intArray71 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59, 0);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59);
        int[] intArray73 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        int[] intArray74 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        int int75 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray74);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray39);
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equals(doubleArray28, doubleArray39);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray28);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray20, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray20);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray10, doubleArray20);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray60 = new double[] { 1, 1, 10 };
        double[] doubleArray64 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray60, doubleArray64);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray65);
        boolean boolean67 = org.apache.commons.math3.util.MathArrays.equals(doubleArray54, doubleArray65);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray65);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray65, (double) (byte) 1);
        double double71 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray70);
        double[][] doubleArray72 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray70, doubleArray72);
        double double74 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray70);
        double double75 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray70);
        double double76 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray46, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.533823502911814d + "'", double71 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.533823502911814d + "'", double74 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.533823502911814d + "'", double75 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35996.666666666664d + "'", double76 == 35996.666666666664d);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray49, doubleArray58);
        double[] doubleArray65 = new double[] { 1, 1, 10 };
        double[] doubleArray69 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray65, doubleArray69);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray70);
        double double72 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray58, doubleArray70);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection73 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray70, orderDirection73, true);
        double double76 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray38, doubleArray70);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1000.0499987500625d, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-900044.9988750563, 200009.9997500125, 1000049.9987500625]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2111.0d + "'", double72 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection73 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection73.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-9200.0d) + "'", double76 == (-9200.0d));
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        double double26 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int[] intArray37 = new int[] {};
        int[] intArray42 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int43 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray37, intArray42);
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42, (int) (short) 1);
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray36, intArray45);
        int[] intArray47 = new int[] {};
        int[] intArray52 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int53 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray47, intArray52);
        double double54 = org.apache.commons.math3.util.MathArrays.distance(intArray45, intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray24, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, 100);
        int[] intArray62 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray21, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        double[] doubleArray52 = new double[] { 1, 1, 10 };
        double[] doubleArray56 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray52, doubleArray56);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(doubleArray46, doubleArray57);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray37, doubleArray57);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57, 0);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray66);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray66);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray73);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-901.0, 199.0, 990.0]");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        double double60 = org.apache.commons.math3.util.MathArrays.distance(intArray8, intArray38);
        int[] intArray61 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray40);
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equals(doubleArray29, doubleArray40);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray21, doubleArray29);
        double double44 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray21);
        double double45 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray10, doubleArray21);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection56 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray55, orderDirection56, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray55, orderDirection59, false);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray48, orderDirection59, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection64 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray48, orderDirection64, false);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray21, orderDirection64, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -9 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 13.601470508735444d + "'", double44 == 13.601470508735444d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + orderDirection56 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection56.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + orderDirection64 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection64.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray10);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray41);
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray30, doubleArray41);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray30);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray22, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray22);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray12, doubleArray22);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.scale((-3.745353277432591E36d), doubleArray22);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.scale((-19.0d), doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-32410.0, 7201.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.2134944618881596E41, -2.6966543597514656E40, -1.3483271798757328E41]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-2.3056394775875032E42, 5.123643283527785E41, 2.561821641763892E42]");
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray38);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "hi!", "hi!", "" };
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection61 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray60, orderDirection61, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection64 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray60, orderDirection64, false);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray48, orderDirection64, true);
        boolean boolean70 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray44, orderDirection64, false);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection74 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray73, orderDirection74, false);
        boolean boolean78 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray44, orderDirection74, false);
        boolean boolean81 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray38, orderDirection74, false, false);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.scale((-5.2221633920904585E36d), doubleArray38);
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection91 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray90, orderDirection91, false);
        boolean boolean96 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray83, orderDirection91, false, true);
        java.lang.Class<?> wildcardClass97 = orderDirection91.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + orderDirection61 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection61.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + orderDirection64 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection64.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + orderDirection74 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection74.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + orderDirection91 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection91.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray36);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray19, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray38, doubleArray58);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray81);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray81, (double) (byte) 1);
        double double87 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray86);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray86);
        double double89 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(0.0d, doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4.533823502911814d + "'", double87 == 4.533823502911814d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.533823502911814d + "'", double89 == 4.533823502911814d);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double double76 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray31, doubleArray53);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(13.601470508735444d, doubleArray31);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeMultiply(doubleArray11, doubleArray31);
        double double79 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray31);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, (-2.667039156913762E7d));
        double double82 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray31);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray31, 1427.5857242211412d);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.scale(Double.NaN, doubleArray31);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-12241.3234578619, 2720.294101747089, 136014.70508735444]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 18500.0d + "'", double79 == 18500.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[8.001117470741287E7, -1.778026104609175E7, -8.890130523045874E7]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 18500.0d + "'", double82 == 18500.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-4282.757172663423, 951.7238161474276, 4758.619080737138]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-12241.3234578619, 2720.294101747089, 13601.470508735443]");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray20);
        int[] intArray22 = new int[] {};
        int[] intArray27 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int28 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray22, intArray27);
        int[] intArray30 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27, (int) (short) 1);
        int[] intArray31 = new int[] {};
        int[] intArray36 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray31, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36, (int) (short) 1);
        int int40 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray39);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray30);
        int[] intArray42 = new int[] {};
        int[] intArray47 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray42, intArray47);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) (short) 10);
        int int51 = org.apache.commons.math3.util.MathArrays.distance1(intArray30, intArray47);
        int[] intArray53 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) (byte) 0);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, (int) '#');
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray47, 235);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math3.util.MathArrays.distance(intArray20, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        double[] doubleArray0 = null;
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray20);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray20);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray51);
        boolean boolean53 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray51);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray40);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray32, (double) 100L);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray32);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray57, (double) 'a');
        double double60 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray57);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.scale(1.5460450237574002E8d, doubleArray57);
        double double62 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            double double63 = org.apache.commons.math3.util.MathArrays.distance(doubleArray0, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-291.0, 64.66666666666667, 323.3333333333333]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1346.545580364809d + "'", double60 == 1346.545580364809d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.3775261161678436E11, 3.0611691470396523E10, 1.5305845735198264E11]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1346.545580364809d + "'", double62 == 1346.545580364809d);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray51);
        double double54 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray42, doubleArray51);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray42, 1.2459825039216539E7d);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42, 235);
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.scale((-1.0570558719722057E74d), doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray58, (int) (short) 100);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, 1339.7287038800057d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.3844250043573933E7, -1384425.0043573931, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        double double30 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray16, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray28, orderDirection31, true);
        double double34 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray28);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38);
        double double45 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray28, doubleArray44);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, (-1.8199200171623512E264d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -900 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2111.0d + "'", double30 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1360.1470508735442d + "'", double34 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 990.0d + "'", double45 == 990.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[5.459760051487054E264, -1.2132800114415675E264, -6.066400057207837E264]");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray18, doubleArray37);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection39 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray18, orderDirection39, true);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray18, (int) (byte) 0);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection39 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection39.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double double53 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray52);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray18);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, 4.987623771057232E31d);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (-1.514732523044095E260d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -100,982,168,202,939,670,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2068.0d + "'", double53 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.4962871313171694E32, 3.3250825140381546E31, 1.662541257019077E32]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[4.544197569132285E260, -1.0098216820293967E260, -5.049108410146984E260]");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray19);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray19);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray19, (int) (short) 0);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray25, (int) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        double double47 = org.apache.commons.math3.util.MathArrays.distance(intArray38, intArray45);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray45);
        int[] intArray50 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17, (int) '4');
        int[] intArray51 = new int[] {};
        int[] intArray56 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int57 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray51, intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, (int) (short) 1);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray59, intArray68);
        int[] intArray71 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59, 0);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray59);
        int[] intArray73 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        int[] intArray75 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (byte) 10);
        double double76 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray72);
        int[] intArray77 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        int[] intArray78 = new int[] {};
        int[] intArray83 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int84 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray78, intArray83);
        int[] intArray86 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83, (int) (short) 1);
        int[] intArray87 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        double double89 = org.apache.commons.math3.util.MathArrays.distance(intArray72, intArray88);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 100, 100, 35]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray29);
        double[] doubleArray39 = new double[] { 1, 1, 10 };
        double[] doubleArray43 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray43);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray39);
        double double46 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray29, doubleArray45);
        double[] doubleArray50 = new double[] { 1, 1, 10 };
        double[] doubleArray54 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray54);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray50);
        boolean boolean57 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray29, doubleArray56);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.scale(1.4678500047059846E9d, doubleArray29);
        java.lang.Class<?> wildcardClass59 = doubleArray29.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1360.1470508735442d + "'", double35 == 1360.1470508735442d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 990.0d + "'", double46 == 990.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.3210650042353862E12, 2.935700009411969E11, 1.4678500047059846E12]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) (short) 100);
        int[] intArray61 = new int[] {};
        int[] intArray66 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray61, intArray66);
        int[] intArray69 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66, (int) (short) 1);
        int[] intArray70 = new int[] {};
        int[] intArray75 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int76 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray70, intArray75);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray75, (int) (short) 1);
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray69, intArray78);
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray69, (int) (short) 100);
        double double82 = org.apache.commons.math3.util.MathArrays.distance(intArray48, intArray69);
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray48, (int) ' ');
        int[] intArray86 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84, (int) (short) 100);
        double double87 = org.apache.commons.math3.util.MathArrays.distance(intArray36, intArray84);
        int[] intArray88 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38);
        double double41 = org.apache.commons.math3.util.MathArrays.distance(intArray17, intArray38);
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, (int) '#');
        int[] intArray45 = org.apache.commons.math3.util.MathArrays.copyOf(intArray43, 10);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41, 10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1346.545580364809d, doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1225356.4781319762, 270655.6616533266, 1346545.580364809]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray28);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray30, doubleArray49);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray64 = new double[] { 1, 1, 10 };
        double[] doubleArray68 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray64, doubleArray68);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray69);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(doubleArray58, doubleArray69);
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray49, doubleArray69);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray69, 0);
        double[] doubleArray78 = new double[] { 1, 1, 10 };
        double[] doubleArray82 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray78, doubleArray82);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray78);
        double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray84);
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(doubleArray69, doubleArray84);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray11, doubleArray84);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) (short) 0);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89, (int) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[9.0, 9.0, 90.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (double) (byte) 1);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray42, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray61, doubleArray81);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, 0);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray81);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, 116405.9998500075d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -349,218 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-349217.9995500225, 77603.999900005, 388019.999500025]");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(820404.8465375019d, (-2.8070760929515838E125d), (-5.718703196015772E45d), (-1.9616871307844774E82d), (-4.149720547934001E12d), (-2.8469134568462802E23d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-2.3018170006105945E131d) + "'", double6 == (-2.3018170006105945E131d));
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray59);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(doubleArray48, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray40, doubleArray48);
        boolean boolean63 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray17, doubleArray48);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray48, 144652.08102413287d);
        double[] doubleArray70 = new double[] { 1, 1, 10 };
        double[] doubleArray74 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray70, doubleArray74);
        double[] doubleArray76 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray74);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray76, (int) (byte) 0);
        double double79 = org.apache.commons.math3.util.MathArrays.distance(doubleArray48, doubleArray76);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray48, (-79.0d));
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray48);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray48, (int) (byte) 0);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray48, (int) (short) 100);
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.scale((-2.8132391400032325E191d), doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 20.09975124224178d + "'", double79 == 20.09975124224178d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-87.77777777777777, 8.777777777777779, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-2.8132391400032325E192, 2.8132391400032325E191, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray36 = new int[] { 'a', (byte) 1, '4', (byte) 1, ' ', (short) -1 };
        int int37 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray8, intArray36);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray42 = org.apache.commons.math3.util.MathArrays.copyOf(intArray40, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 98 + "'", int37 == 98);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 98 + "'", int38 == 98);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 1, 52, 1, 32, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[97, 1, 52, 1, 32, -1]");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray32 = new double[] { 1, 1, 10 };
        double[] doubleArray36 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray32, doubleArray36);
        double[] doubleArray42 = new double[] { 1, 1, 10 };
        double[] doubleArray46 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray46);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray47);
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray36, doubleArray47);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray36);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray28, (double) 100L);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray28);
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray28);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.scale((-2.5103007635521005E187d), doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-2.5103007635521005E188, 2.5103007635521005E187, -0.0]");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        double[] doubleArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.6671655955999066E55d), doubleArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double double52 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray16, doubleArray38);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, 100.0d);
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray38, (-2.615914305086962E12d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[111.11111111111111, -11.11111111111111, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-2.906571450096624E12, 2.906571450096624E11, -0.0]");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "", "hi!" };
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "hi!", "" };
        double[] doubleArray15 = new double[] { 1, 1, 10 };
        double[] doubleArray19 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray15, doubleArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection28 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection28, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray27, orderDirection31, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray15, orderDirection31, true);
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray11, orderDirection31, false);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "hi!" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection41 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray40, orderDirection41, false);
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray11, orderDirection41, false);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray6, orderDirection41, false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + orderDirection28 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection28.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + orderDirection41 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection41.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(116405.9998500075d, 1101.0d, 111.0d, 1813.5294011647256d, 93000.0d, (double) 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.2845730759838754E8d + "'", double6 == 1.2845730759838754E8d);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination(12.0d, 1.053651506470873E228d, 2.11983035542002E38d, (-4.15140860596838E58d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.2643818077650475E229d + "'", double4 == 1.2643818077650475E229d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double[] doubleArray79 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray75, doubleArray79);
        double double81 = org.apache.commons.math3.util.MathArrays.distance(doubleArray29, doubleArray79);
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray86);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray86);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.scale(0.0d, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1427.5857242211412d + "'", double81 == 1427.5857242211412d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-901.0, 199.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-0.0, 0.0, 0.0]");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray29, orderDirection32, true);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray48 = new double[] { 1, 1, 10 };
        double[] doubleArray52 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray48, doubleArray52);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray53);
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray42, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray68 = new double[] { 1, 1, 10 };
        double[] doubleArray72 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray68, doubleArray72);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray72);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray72);
        double[] doubleArray79 = new double[] { (short) 100, 0.0f, (short) 1 };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray75, doubleArray79);
        double double81 = org.apache.commons.math3.util.MathArrays.distance(doubleArray29, doubleArray79);
        double[] doubleArray86 = new double[] { 1, 1, 10 };
        double[] doubleArray90 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray86, doubleArray90);
        double[] doubleArray92 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray86);
        double[] doubleArray94 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray86);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-820.0d), doubleArray86);
        double double96 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray86);
        double[] doubleArray97 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-910.0, 201.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1427.5857242211412d + "'", double81 == 1427.5857242211412d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-820.0, -820.0, -8200.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-901.0, 199.0, 990.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 8281.594049456904d + "'", double96 == 8281.594049456904d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-820.0, -820.0, -8200.0]");
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        double double6 = org.apache.commons.math3.util.MathArrays.linearCombination(0.0d, 9.462245724335106E141d, (-2.0950486355584955E154d), 9.338839183594195E30d, (-2.4333688923589076E146d), 2.0652291407971942E8d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.9565322289289233E185d) + "'", double6 == (-1.9565322289289233E185d));
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray12, 0);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        org.apache.commons.math3.util.MathArrays.checkPositive(doubleArray12);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray38);
        boolean boolean40 = org.apache.commons.math3.util.MathArrays.equals(doubleArray27, doubleArray38);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray38);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) (short) -1, doubleArray38);
        double[] doubleArray44 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray38, 100);
        double[] doubleArray45 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray44);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray44, (int) 'a');
        double double48 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray12, doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[900.0, -200.0, -1000.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-900.0, 200.0, 1000.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[900.0, -200.0, -1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = new int[] {};
        int[] intArray24 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int25 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray19, intArray24);
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray24, (int) (short) 1);
        int[] intArray28 = new int[] {};
        int[] intArray33 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int34 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, (int) (short) 1);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray36);
        int int38 = org.apache.commons.math3.util.MathArrays.distance1(intArray17, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray44 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int45 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        int[] intArray47 = org.apache.commons.math3.util.MathArrays.copyOf(intArray44, (int) (short) 1);
        int int48 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray17, intArray44);
        int[] intArray49 = org.apache.commons.math3.util.MathArrays.copyOf(intArray17);
        int[] intArray50 = new int[] {};
        int[] intArray55 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray55);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, (int) (short) 1);
        int[] intArray59 = new int[] {};
        int[] intArray64 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int65 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray59, intArray64);
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray64, (int) (short) 1);
        int int68 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray67);
        int[] intArray69 = org.apache.commons.math3.util.MathArrays.copyOf(intArray58);
        int[] intArray70 = new int[] {};
        int[] intArray75 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int76 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray70, intArray75);
        int[] intArray78 = org.apache.commons.math3.util.MathArrays.copyOf(intArray75, (int) (short) 10);
        int int79 = org.apache.commons.math3.util.MathArrays.distance1(intArray58, intArray75);
        int int80 = org.apache.commons.math3.util.MathArrays.distance1(intArray49, intArray58);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray23 = new double[] { 1, 1, 10 };
        double[] doubleArray27 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray28 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray23, doubleArray27);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray28);
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray28);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray17);
        double[] doubleArray33 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray9, (double) 100L);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(3600.0d, doubleArray9);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray53 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray42, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray72 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray61, doubleArray70);
        double[] doubleArray73 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray53, doubleArray72);
        boolean boolean74 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray9, doubleArray53);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9);
        java.lang.Class<?> wildcardClass76 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-32400.0, 7200.0, 36000.0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 0);
        int[] intArray21 = new int[] {};
        int[] intArray26 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int27 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray21, intArray26);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26, (int) (short) 1);
        int[] intArray30 = new int[] {};
        int[] intArray35 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int36 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray30, intArray35);
        int[] intArray38 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35, (int) (short) 1);
        int int39 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray29, intArray38);
        int[] intArray40 = new int[] {};
        int[] intArray45 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray40, intArray45);
        int[] intArray48 = org.apache.commons.math3.util.MathArrays.copyOf(intArray45, (int) (short) 1);
        int[] intArray49 = new int[] {};
        int[] intArray54 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int55 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray49, intArray54);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray54, (int) (short) 1);
        int int58 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray48, intArray57);
        int int59 = org.apache.commons.math3.util.MathArrays.distance1(intArray38, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray65 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray60, intArray65);
        int[] intArray68 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, (int) (short) 1);
        int int69 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray38, intArray65);
        int int70 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray20, intArray65);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, 98);
        int[] intArray74 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72, (int) (byte) 10);
        int[] intArray75 = org.apache.commons.math3.util.MathArrays.copyOf(intArray72);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 100, 100, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-2.24212395627112E202d), 11.1665284679121d, (double) (byte) 0, (-3.2747201721782604E59d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-2.5036740986289164E203d) + "'", double4 == (-2.5036740986289164E203d));
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11, (int) (byte) 0);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.scale(2.6817058196121406E33d, doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-2.6817058196121405E34, 2.6817058196121406E33, -0.0]");
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        double double4 = org.apache.commons.math3.util.MathArrays.linearCombination((-7.147736686552591E48d), 0.0d, (-1.2114525348282044E23d), (-5.718703196015772E45d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 6.92793748274346E68d + "'", double4 == 6.92793748274346E68d);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray9);
        double[] doubleArray13 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray9, (int) (byte) 100);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.347347400304754E92d, doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.3473474003047538E93, -1.347347400304754E92, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        long[] longArray6 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray13 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray20 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray27 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[] longArray34 = new long[] { ' ', (short) 10, (byte) 100, 1, 10, 100L };
        long[][] longArray35 = new long[][] { longArray6, longArray13, longArray20, longArray27, longArray34 };
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkRectangular(longArray35);
        org.apache.commons.math3.util.MathArrays.checkNonNegative(longArray35);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 100, 1, 10, 100]");
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray8);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray10, (int) (byte) 0);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray20, doubleArray29);
        double[] doubleArray35 = new double[] { 1, 1, 10 };
        double[] doubleArray39 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray35, doubleArray39);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray48);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray67);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray50, doubleArray69);
        double[] doubleArray74 = new double[] { 1, 1, 10 };
        double[] doubleArray78 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray74, doubleArray78);
        double[] doubleArray84 = new double[] { 1, 1, 10 };
        double[] doubleArray88 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray84, doubleArray88);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray89);
        boolean boolean91 = org.apache.commons.math3.util.MathArrays.equals(doubleArray78, doubleArray89);
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray69, doubleArray89);
        double[] doubleArray93 = org.apache.commons.math3.util.MathArrays.ebeAdd(doubleArray31, doubleArray89);
        boolean boolean94 = org.apache.commons.math3.util.MathArrays.equals(doubleArray10, doubleArray89);
        double[] doubleArray95 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-900.0, 200.0, 1000.0]");
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray2 = org.apache.commons.math3.util.MathArrays.copyOf(intArray0, 98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray4);
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.scale((double) 10L, doubleArray4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection22 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection22, false);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection25 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray21, orderDirection25, false);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection25, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection30 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        boolean boolean32 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray14, orderDirection30, false);
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray11, orderDirection30, false, false);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray11, (-6.469188686213299E42d));
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray11);
        double[] doubleArray39 = null;
        boolean boolean40 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection22.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + orderDirection25 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection25.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection30 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection30.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-5.3909905718444154E41, -5.3909905718444154E41, -5.390990571844416E42]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        float[] floatArray2 = new float[] { (-1.0f), 100.0f };
        float[] floatArray5 = new float[] { (-1L), (byte) 10 };
        float[] floatArray9 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean10 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray5, floatArray9);
        float[] floatArray13 = new float[] { (short) 1, (-1L) };
        boolean boolean14 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray9, floatArray13);
        float[] floatArray17 = new float[] { (-1L), (byte) 10 };
        float[] floatArray21 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray17, floatArray21);
        float[] floatArray23 = null;
        boolean boolean24 = org.apache.commons.math3.util.MathArrays.equals(floatArray17, floatArray23);
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equals(floatArray9, floatArray17);
        boolean boolean26 = org.apache.commons.math3.util.MathArrays.equals(floatArray2, floatArray17);
        float[] floatArray29 = new float[] { (-1L), (byte) 10 };
        float[] floatArray33 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray35 = null;
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(floatArray29, floatArray35);
        float[] floatArray39 = new float[] { (-1L), (byte) 10 };
        float[] floatArray43 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray39, floatArray43);
        float[] floatArray47 = new float[] { (short) 1, (-1L) };
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray43, floatArray47);
        float[] floatArray51 = new float[] { (-1L), (byte) 10 };
        float[] floatArray55 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean56 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray51, floatArray55);
        float[] floatArray57 = null;
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equals(floatArray51, floatArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(floatArray43, floatArray51);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(floatArray29, floatArray43);
        float[] floatArray63 = new float[] { (-1L), (byte) 10 };
        float[] floatArray67 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray63, floatArray67);
        float[] floatArray71 = new float[] { (short) 1, (-1L) };
        boolean boolean72 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray67, floatArray71);
        float[] floatArray75 = new float[] { (-1L), (byte) 10 };
        float[] floatArray79 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray75, floatArray79);
        float[] floatArray81 = null;
        boolean boolean82 = org.apache.commons.math3.util.MathArrays.equals(floatArray75, floatArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(floatArray67, floatArray75);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equals(floatArray43, floatArray67);
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.equals(floatArray17, floatArray43);
        float[] floatArray86 = null;
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(floatArray43, floatArray86);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray12 = new double[] { 1, 1, 10 };
        double[] doubleArray16 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray17 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray12, doubleArray16);
        double[] doubleArray22 = new double[] { 1, 1, 10 };
        double[] doubleArray26 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray22, doubleArray26);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray27);
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray16, doubleArray27);
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray16);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray43 = new double[] { 1, 1, 10 };
        double[] doubleArray47 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray47);
        double[] doubleArray53 = new double[] { 1, 1, 10 };
        double[] doubleArray57 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray53, doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray58);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray39, doubleArray47);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray16, doubleArray47);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray47, 144652.08102413287d);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray73);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75, (int) (byte) 0);
        double double78 = org.apache.commons.math3.util.MathArrays.distance(doubleArray47, doubleArray75);
        double[] doubleArray79 = null;
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray75, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[160724.53447125875, -16072.453447125874, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 20.09975124224178d + "'", double78 == 20.09975124224178d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray18, (double) (byte) 1);
        double[] doubleArray27 = new double[] { 1, 1, 10 };
        double[] doubleArray31 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray32 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray31);
        double[] doubleArray36 = new double[] { 1, 1, 10 };
        double[] doubleArray40 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray36, doubleArray40);
        double[] doubleArray42 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray40);
        double[] doubleArray46 = new double[] { 1, 1, 10 };
        double[] doubleArray50 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray46, doubleArray50);
        double[] doubleArray55 = new double[] { 1, 1, 10 };
        double[] doubleArray59 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray60 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray55, doubleArray59);
        double[] doubleArray61 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray50, doubleArray59);
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray42, doubleArray61);
        double[] doubleArray66 = new double[] { 1, 1, 10 };
        double[] doubleArray70 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray71 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray66, doubleArray70);
        double[] doubleArray76 = new double[] { 1, 1, 10 };
        double[] doubleArray80 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray76, doubleArray80);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray81);
        boolean boolean83 = org.apache.commons.math3.util.MathArrays.equals(doubleArray70, doubleArray81);
        boolean boolean84 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray61, doubleArray81);
        double[] doubleArray86 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray81, 0);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray81);
        double double88 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray18);
        double double89 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1360.1470508735442d + "'", double88 == 1360.1470508735442d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1360.1470508735442d + "'", double89 == 1360.1470508735442d);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        float[] floatArray2 = new float[] { (-1L), (byte) 10 };
        float[] floatArray6 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean7 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray2, floatArray6);
        float[] floatArray10 = new float[] { (short) 1, (-1L) };
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray6, floatArray10);
        float[] floatArray14 = new float[] { (-1L), (byte) 10 };
        float[] floatArray18 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray14, floatArray18);
        float[] floatArray20 = null;
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(floatArray14, floatArray20);
        boolean boolean22 = org.apache.commons.math3.util.MathArrays.equals(floatArray6, floatArray14);
        float[] floatArray25 = new float[] { (-1L), (byte) 10 };
        float[] floatArray29 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean30 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray25, floatArray29);
        float[] floatArray33 = new float[] { (short) 1, (-1L) };
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray29, floatArray33);
        float[] floatArray37 = new float[] { (-1L), (byte) 10 };
        float[] floatArray41 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray37, floatArray41);
        float[] floatArray45 = new float[] { (short) 1, (-1L) };
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray41, floatArray45);
        float[] floatArray49 = new float[] { (-1L), (byte) 10 };
        float[] floatArray53 = new float[] { (byte) 100, 1, (-1.0f) };
        boolean boolean54 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray49, floatArray53);
        float[] floatArray57 = new float[] { (short) 1, (-1L) };
        boolean boolean58 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(floatArray53, floatArray57);
        boolean boolean59 = org.apache.commons.math3.util.MathArrays.equals(floatArray45, floatArray57);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equals(floatArray29, floatArray57);
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.equals(floatArray14, floatArray57);
        java.lang.Class<?> wildcardClass62 = floatArray57.getClass();
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray19 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        double[] doubleArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.math3.util.MathArrays.scale((-1.622053541788808E83d), doubleArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        int[] intArray0 = null;
        int[] intArray1 = new int[] {};
        int[] intArray6 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int7 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray1, intArray6);
        int[] intArray9 = org.apache.commons.math3.util.MathArrays.copyOf(intArray6, (int) (short) 1);
        int[] intArray10 = new int[] {};
        int[] intArray15 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int16 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray10, intArray15);
        int[] intArray18 = org.apache.commons.math3.util.MathArrays.copyOf(intArray15, (int) (short) 1);
        int int19 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray18);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray9, 0);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray9);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22, 1);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1]");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        int[] intArray0 = new int[] {};
        int[] intArray5 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int6 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray0, intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, (int) (short) 1);
        int[] intArray9 = new int[] {};
        int[] intArray14 = new int[] { (-1), (byte) 100, (short) 100, '#' };
        int int15 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray9, intArray14);
        int[] intArray17 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14, (int) (short) 1);
        int int18 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray17);
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, (int) (short) 100);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray8, 98);
        int[] intArray24 = org.apache.commons.math3.util.MathArrays.copyOf(intArray22, 0);
        java.lang.Class<?> wildcardClass25 = intArray22.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, 100, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        double[] doubleArray0 = null;
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray11);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(doubleArray51, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray51);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray43, (double) 100L);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray43);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray11, doubleArray43);
        double[] doubleArray70 = org.apache.commons.math3.util.MathArrays.scale(1360.1470508735442d, doubleArray43);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(doubleArray0, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-12241.323457861898, 2720.2941017470885, 13601.470508735441]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double double53 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray52);
        double[] doubleArray55 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray52, (int) (short) 10);
        double[][] doubleArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray55, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2068.0d + "'", double53 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-19.0, 3.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        double[] doubleArray3 = new double[] { 1, 1, 10 };
        double[] doubleArray7 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray8 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray3, doubleArray7);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray18);
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray18);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray44 = new double[] { 1, 1, 10 };
        double[] doubleArray48 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray44, doubleArray48);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray49);
        boolean boolean51 = org.apache.commons.math3.util.MathArrays.equals(doubleArray38, doubleArray49);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray30, doubleArray38);
        double double53 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray18, doubleArray52);
        double[] doubleArray54 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray18);
        double[] doubleArray58 = new double[] { 1, 1, 10 };
        double[] doubleArray62 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray62);
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray58);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        double[] doubleArray75 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray73);
        double double76 = org.apache.commons.math3.util.MathArrays.distance(doubleArray58, doubleArray75);
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray75, (int) (short) 100);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray78, 9319.084308623767d);
        double double81 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray18, doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2068.0d + "'", double53 == 2068.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 14.866068747318506d + "'", double76 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10354.538120693074, -1035.4538120693076, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1000.0d + "'", double81 == 1000.0d);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray19);
        boolean boolean21 = org.apache.commons.math3.util.MathArrays.equals(doubleArray8, doubleArray19);
        double[] doubleArray25 = new double[] { 1, 1, 10 };
        double[] doubleArray29 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray30 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray25, doubleArray29);
        double[] doubleArray34 = new double[] { 1, 1, 10 };
        double[] doubleArray38 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray34, doubleArray38);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray29, doubleArray38);
        double[] doubleArray41 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray19, doubleArray38);
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray41, 10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.708270408017212E47d), doubleArray41);
        double[] doubleArray45 = null;
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray45);
        double[] doubleArray48 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray41, 1849908.0027625682d);
        double[] doubleArray49 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.554526071295663E50, -3.4336235201145966E49, -1.708270408017212E50]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-910.0, 201.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-5784935.678742049, 1277771.5070628044, 6357072.174441813]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-5784935.678742049, 1277771.5070628044, 6357072.174441813]");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray6);
        double[] doubleArray17 = new double[] { 1, 1, 10 };
        double[] doubleArray21 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray22 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray17, doubleArray21);
        double[] doubleArray23 = org.apache.commons.math3.util.MathArrays.scale((double) (byte) -1, doubleArray21);
        double double24 = org.apache.commons.math3.util.MathArrays.distance(doubleArray6, doubleArray23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.scale((-2.3289362392541196E50d), doubleArray6);
        double[] doubleArray26 = org.apache.commons.math3.util.MathArrays.scale((-7.217129340870217E24d), doubleArray25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.scale(3.655405393522434E85d, doubleArray25);
        double[] doubleArray31 = new double[] { 1, 1, 10 };
        double[] doubleArray35 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray36 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray35);
        double[] doubleArray41 = new double[] { 1, 1, 10 };
        double[] doubleArray45 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray41, doubleArray45);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray46);
        boolean boolean48 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray46);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray46);
        double[] doubleArray51 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray46, (double) (byte) 1);
        double double52 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray51);
        double[][] doubleArray53 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray51, doubleArray53);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray27, doubleArray53);
        double[] doubleArray59 = new double[] { 1, 1, 10 };
        double[] doubleArray63 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray64 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray59, doubleArray63);
        double[] doubleArray69 = new double[] { 1, 1, 10 };
        double[] doubleArray73 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray69, doubleArray73);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray74);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray63, doubleArray74);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray74);
        double[] doubleArray79 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray74, (double) (byte) 1);
        double double80 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
        double[][] doubleArray81 = new double[][] {};
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray79, doubleArray81);
        double double83 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray79);
        double[] doubleArray84 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray27, doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 1.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 14.866068747318506d + "'", double24 == 14.866068747318506d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.3289362392541196E50, -2.3289362392541196E50, -2.3289362392541197E51]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.6808234065336847E75, 1.6808234065336847E75, 1.6808234065336846E76]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-8.513206090139363E136, -8.513206090139362E135, -8.513206090139362E135]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.533823502911814d + "'", double52 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-3.0, 0.6666666666666666, 3.3333333333333335]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4.533823502911814d + "'", double80 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.533823502911814d + "'", double83 == 4.533823502911814d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-8.513206090139363E136, -8.513206090139362E135, -8.513206090139362E135]");
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        double[] doubleArray5 = new double[] { 1, 1, 10 };
        double[] doubleArray9 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray10 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray5, doubleArray9);
        double[] doubleArray14 = new double[] { 1, 1, 10 };
        double[] doubleArray18 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray14, doubleArray18);
        double[] doubleArray20 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray9, doubleArray18);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        double[] doubleArray33 = new double[] { 1, 1, 10 };
        double[] doubleArray37 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray33, doubleArray37);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray28, doubleArray37);
        double[] doubleArray40 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray20, doubleArray39);
        double[] doubleArray45 = new double[] { 1, 1, 10 };
        double[] doubleArray49 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray50 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray45, doubleArray49);
        double[] doubleArray54 = new double[] { 1, 1, 10 };
        double[] doubleArray58 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray59 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray54, doubleArray58);
        double[] doubleArray63 = new double[] { 1, 1, 10 };
        double[] doubleArray67 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray63, doubleArray67);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray58, doubleArray67);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        double[] doubleArray82 = new double[] { 1, 1, 10 };
        double[] doubleArray86 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray87 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray82, doubleArray86);
        double[] doubleArray88 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray77, doubleArray86);
        double[] doubleArray89 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray69, doubleArray88);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection90 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean92 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray69, orderDirection90, true);
        boolean boolean95 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray45, orderDirection90, false, false);
        double[] doubleArray96 = org.apache.commons.math3.util.MathArrays.scale((-101.0d), doubleArray45);
        double double97 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray39, doubleArray45);
        double[] doubleArray98 = org.apache.commons.math3.util.MathArrays.scale((-183792.33961872238d), doubleArray45);
        double[] doubleArray99 = org.apache.commons.math3.util.MathArrays.scale(20.09975124224178d, doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection90 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection90.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-101.0, -101.0, -1010.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 12.0d + "'", double97 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-183792.33961872238, -183792.33961872238, -1837923.396187224]");
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[20.09975124224178, 20.09975124224178, 200.9975124224178]");
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        double[] doubleArray7 = new double[] { 1, 1, 10 };
        double[] doubleArray11 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray12 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray7, doubleArray11);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 0, doubleArray7);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.scale(111.0d, doubleArray7);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-1.552472386491933E14d), doubleArray14);
        double[] doubleArray16 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray14);
        double double17 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray14);
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.scale(7.22460913395122E72d, doubleArray14);
        double[] doubleArray19 = null;
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray14, doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        double[] doubleArray4 = new double[] { 1, 1, 10 };
        double[] doubleArray8 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray9 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray4, doubleArray8);
        double[] doubleArray13 = new double[] { 1, 1, 10 };
        double[] doubleArray17 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray18 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray13, doubleArray17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray8, doubleArray17);
        double[] doubleArray24 = new double[] { 1, 1, 10 };
        double[] doubleArray28 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray29 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray24, doubleArray28);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray29);
        double double31 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray17, doubleArray29);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "hi!", "" };
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection39 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.isMonotonic(strArray38, orderDirection39, false);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray17, orderDirection39, true, false);
        double[] doubleArray46 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray17, (int) (short) 10);
        double[] doubleArray51 = new double[] { 1, 1, 10 };
        double[] doubleArray55 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray56 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray51, doubleArray55);
        double[] doubleArray57 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray51);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray57);
        org.apache.commons.math3.util.MathArrays.scaleInPlace(1.7246705822717612E15d, doubleArray58);
        boolean boolean60 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray17, doubleArray58);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-7.147736686552591E48d), doubleArray17);
        double double62 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-7.147736686552591E49, 7.147736686552591E48, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2111.0d + "'", double31 == 2111.0d);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + orderDirection39 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection39.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.7246705822717612E15, 1.7246705822717612E15, 1.7246705822717612E16]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 7.183386467237629E49d + "'", double62 == 7.183386467237629E49d);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        double[] doubleArray0 = null;
        double[] doubleArray6 = new double[] { 1, 1, 10 };
        double[] doubleArray10 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray11 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray6, doubleArray10);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray11);
        double[] doubleArray16 = new double[] { 1, 1, 10 };
        double[] doubleArray20 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray21 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray16, doubleArray20);
        double[] doubleArray26 = new double[] { 1, 1, 10 };
        double[] doubleArray30 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray31 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray26, doubleArray30);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray31);
        boolean boolean33 = org.apache.commons.math3.util.MathArrays.equals(doubleArray20, doubleArray31);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray31);
        double[] doubleArray38 = new double[] { 1, 1, 10 };
        double[] doubleArray42 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray43 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray38, doubleArray42);
        double[] doubleArray47 = new double[] { 1, 1, 10 };
        double[] doubleArray51 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray47, doubleArray51);
        double[] doubleArray57 = new double[] { 1, 1, 10 };
        double[] doubleArray61 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray62 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray57, doubleArray61);
        org.apache.commons.math3.util.MathArrays.scaleInPlace((double) 100, doubleArray62);
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.equals(doubleArray51, doubleArray62);
        double[] doubleArray65 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray43, doubleArray51);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray43, (double) 100L);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray31, doubleArray43);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.convolve(doubleArray11, doubleArray43);
        double[] doubleArray73 = new double[] { 1, 1, 10 };
        double[] doubleArray77 = new double[] { 10L, (-1L), 0.0f };
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray73, doubleArray77);
        boolean boolean79 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray11, doubleArray73);
        double[] doubleArray81 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray11, 1.5183756289549949E7d);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray11, (-7.887202131357053E44d));
        org.apache.commons.math3.util.MathArrays.scaleInPlace((-2.6653694205680016E13d), doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = org.apache.commons.math3.util.MathArrays.ebeSubtract(doubleArray0, doubleArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[2.3988324785112016E16, -5.330738841136003E15, -2.6653694205680016E16]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-900.0, 200.0, 1000.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-19.0, 3.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-300.0, 66.66666666666667, 333.3333333333333]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-891.0, 198.0, 990.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[8100.0, -3600.0, -17600.0, 4000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-9.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-4.555126886864985E7, 1.01225041930333E7, 5.0612520965166494E7]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[2.366160639407116E45, -5.258134754238035E44, -2.629067377119018E45]");
    }
}

